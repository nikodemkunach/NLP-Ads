; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @_chunked_cross_entropy_forward(ptr addrspace(1) %0, i32 %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, i1 %7, i32 %8, i1 %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #5, !dbg !11
  %14 = sext i32 %1 to i64, !dbg !12
  %15 = sext i32 %12 to i64, !dbg !13
  %16 = mul nsw i64 %15, %14, !dbg !13
  %17 = getelementptr half, ptr addrspace(1) %0, i64 %16, !dbg !14
  %18 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !15
  %19 = getelementptr i64, ptr addrspace(1) %4, i64 %15, !dbg !16
  %20 = shl i32 %13, 16, !dbg !17
  %21 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !18
  %22 = and i32 %21, 31, !dbg !18
  %23 = lshr i32 %21, 5, !dbg !18
  %24 = shl i32 %21, 3, !dbg !18
  %25 = and i32 %24, 8184, !dbg !18
  %26 = or disjoint i32 %20, %25, !dbg !19
  %27 = or disjoint i32 %26, 8192, !dbg !19
  %28 = or disjoint i32 %26, 16384, !dbg !19
  %29 = or disjoint i32 %26, 24576, !dbg !19
  %30 = or disjoint i32 %26, 32768, !dbg !19
  %31 = or disjoint i32 %26, 40960, !dbg !19
  %32 = or disjoint i32 %26, 49152, !dbg !19
  %33 = or disjoint i32 %26, 57344, !dbg !19
  %34 = icmp slt i32 %26, %5, !dbg !20
  %35 = icmp slt i32 %27, %5, !dbg !20
  %36 = icmp slt i32 %28, %5, !dbg !20
  %37 = icmp slt i32 %29, %5, !dbg !20
  %38 = icmp slt i32 %30, %5, !dbg !20
  %39 = icmp slt i32 %31, %5, !dbg !20
  %40 = icmp slt i32 %32, %5, !dbg !20
  %41 = icmp slt i32 %33, %5, !dbg !20
  %42 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %19, i1 true) #5, !dbg !21
  %43 = trunc i64 %42 to i32, !dbg !22
  %44 = sext i32 %26 to i64, !dbg !23
  %45 = getelementptr half, ptr addrspace(1) %17, i64 %44, !dbg !23
  %46 = sext i32 %27 to i64, !dbg !23
  %47 = getelementptr half, ptr addrspace(1) %17, i64 %46, !dbg !23
  %48 = sext i32 %28 to i64, !dbg !23
  %49 = getelementptr half, ptr addrspace(1) %17, i64 %48, !dbg !23
  %50 = sext i32 %29 to i64, !dbg !23
  %51 = getelementptr half, ptr addrspace(1) %17, i64 %50, !dbg !23
  %52 = sext i32 %30 to i64, !dbg !23
  %53 = getelementptr half, ptr addrspace(1) %17, i64 %52, !dbg !23
  %54 = sext i32 %31 to i64, !dbg !23
  %55 = getelementptr half, ptr addrspace(1) %17, i64 %54, !dbg !23
  %56 = sext i32 %32 to i64, !dbg !23
  %57 = getelementptr half, ptr addrspace(1) %17, i64 %56, !dbg !23
  %58 = sext i32 %33 to i64, !dbg !23
  %59 = getelementptr half, ptr addrspace(1) %17, i64 %58, !dbg !23
  %60 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %45, i1 %34, i32 -67044352, i1 %34, i32 -67044352, i1 %34, i32 -67044352, i1 %34, i32 -67044352, i1 %34) #5, !dbg !24
  %61 = extractvalue { i32, i32, i32, i32 } %60, 0, !dbg !24
  %62 = extractvalue { i32, i32, i32, i32 } %60, 1, !dbg !24
  %63 = extractvalue { i32, i32, i32, i32 } %60, 2, !dbg !24
  %64 = extractvalue { i32, i32, i32, i32 } %60, 3, !dbg !24
  %extelt.offset = lshr i32 %61, 16, !dbg !24
  %extelt.offset1 = lshr i32 %62, 16, !dbg !24
  %extelt.offset2 = lshr i32 %63, 16, !dbg !24
  %extelt.offset3 = lshr i32 %64, 16, !dbg !24
  %65 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %47, i1 %35, i32 -67044352, i1 %35, i32 -67044352, i1 %35, i32 -67044352, i1 %35, i32 -67044352, i1 %35) #5, !dbg !24
  %66 = extractvalue { i32, i32, i32, i32 } %65, 0, !dbg !24
  %67 = extractvalue { i32, i32, i32, i32 } %65, 1, !dbg !24
  %68 = extractvalue { i32, i32, i32, i32 } %65, 2, !dbg !24
  %69 = extractvalue { i32, i32, i32, i32 } %65, 3, !dbg !24
  %extelt.offset4 = lshr i32 %66, 16, !dbg !24
  %extelt.offset5 = lshr i32 %67, 16, !dbg !24
  %extelt.offset6 = lshr i32 %68, 16, !dbg !24
  %extelt.offset7 = lshr i32 %69, 16, !dbg !24
  %70 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %49, i1 %36, i32 -67044352, i1 %36, i32 -67044352, i1 %36, i32 -67044352, i1 %36, i32 -67044352, i1 %36) #5, !dbg !24
  %71 = extractvalue { i32, i32, i32, i32 } %70, 0, !dbg !24
  %72 = extractvalue { i32, i32, i32, i32 } %70, 1, !dbg !24
  %73 = extractvalue { i32, i32, i32, i32 } %70, 2, !dbg !24
  %74 = extractvalue { i32, i32, i32, i32 } %70, 3, !dbg !24
  %extelt.offset8 = lshr i32 %71, 16, !dbg !24
  %extelt.offset9 = lshr i32 %72, 16, !dbg !24
  %extelt.offset10 = lshr i32 %73, 16, !dbg !24
  %extelt.offset11 = lshr i32 %74, 16, !dbg !24
  %75 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %51, i1 %37, i32 -67044352, i1 %37, i32 -67044352, i1 %37, i32 -67044352, i1 %37, i32 -67044352, i1 %37) #5, !dbg !24
  %76 = extractvalue { i32, i32, i32, i32 } %75, 0, !dbg !24
  %77 = extractvalue { i32, i32, i32, i32 } %75, 1, !dbg !24
  %78 = extractvalue { i32, i32, i32, i32 } %75, 2, !dbg !24
  %79 = extractvalue { i32, i32, i32, i32 } %75, 3, !dbg !24
  %extelt.offset12 = lshr i32 %76, 16, !dbg !24
  %extelt.offset13 = lshr i32 %77, 16, !dbg !24
  %extelt.offset14 = lshr i32 %78, 16, !dbg !24
  %extelt.offset15 = lshr i32 %79, 16, !dbg !24
  %80 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %53, i1 %38, i32 -67044352, i1 %38, i32 -67044352, i1 %38, i32 -67044352, i1 %38, i32 -67044352, i1 %38) #5, !dbg !24
  %81 = extractvalue { i32, i32, i32, i32 } %80, 0, !dbg !24
  %82 = extractvalue { i32, i32, i32, i32 } %80, 1, !dbg !24
  %83 = extractvalue { i32, i32, i32, i32 } %80, 2, !dbg !24
  %84 = extractvalue { i32, i32, i32, i32 } %80, 3, !dbg !24
  %extelt.offset16 = lshr i32 %81, 16, !dbg !24
  %extelt.offset17 = lshr i32 %82, 16, !dbg !24
  %extelt.offset18 = lshr i32 %83, 16, !dbg !24
  %extelt.offset19 = lshr i32 %84, 16, !dbg !24
  %85 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %55, i1 %39, i32 -67044352, i1 %39, i32 -67044352, i1 %39, i32 -67044352, i1 %39, i32 -67044352, i1 %39) #5, !dbg !24
  %86 = extractvalue { i32, i32, i32, i32 } %85, 0, !dbg !24
  %87 = extractvalue { i32, i32, i32, i32 } %85, 1, !dbg !24
  %88 = extractvalue { i32, i32, i32, i32 } %85, 2, !dbg !24
  %89 = extractvalue { i32, i32, i32, i32 } %85, 3, !dbg !24
  %extelt.offset20 = lshr i32 %86, 16, !dbg !24
  %extelt.offset21 = lshr i32 %87, 16, !dbg !24
  %extelt.offset22 = lshr i32 %88, 16, !dbg !24
  %extelt.offset23 = lshr i32 %89, 16, !dbg !24
  %90 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %57, i1 %40, i32 -67044352, i1 %40, i32 -67044352, i1 %40, i32 -67044352, i1 %40, i32 -67044352, i1 %40) #5, !dbg !24
  %91 = extractvalue { i32, i32, i32, i32 } %90, 0, !dbg !24
  %92 = extractvalue { i32, i32, i32, i32 } %90, 1, !dbg !24
  %93 = extractvalue { i32, i32, i32, i32 } %90, 2, !dbg !24
  %94 = extractvalue { i32, i32, i32, i32 } %90, 3, !dbg !24
  %extelt.offset24 = lshr i32 %91, 16, !dbg !24
  %extelt.offset25 = lshr i32 %92, 16, !dbg !24
  %extelt.offset26 = lshr i32 %93, 16, !dbg !24
  %extelt.offset27 = lshr i32 %94, 16, !dbg !24
  %95 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %59, i1 %41, i32 -67044352, i1 %41, i32 -67044352, i1 %41, i32 -67044352, i1 %41, i32 -67044352, i1 %41) #5, !dbg !24
  %96 = extractvalue { i32, i32, i32, i32 } %95, 0, !dbg !24
  %97 = extractvalue { i32, i32, i32, i32 } %95, 1, !dbg !24
  %98 = extractvalue { i32, i32, i32, i32 } %95, 2, !dbg !24
  %99 = extractvalue { i32, i32, i32, i32 } %95, 3, !dbg !24
  %extelt.offset28 = lshr i32 %96, 16, !dbg !24
  %extelt.offset29 = lshr i32 %97, 16, !dbg !24
  %extelt.offset30 = lshr i32 %98, 16, !dbg !24
  %extelt.offset31 = lshr i32 %99, 16, !dbg !24
  %100 = insertelement <64 x i32> poison, i32 %61, i64 0, !dbg !24
  %101 = insertelement <64 x i32> %100, i32 %extelt.offset, i64 1, !dbg !24
  %102 = insertelement <64 x i32> %101, i32 %62, i64 2, !dbg !24
  %103 = insertelement <64 x i32> %102, i32 %extelt.offset1, i64 3, !dbg !24
  %104 = insertelement <64 x i32> %103, i32 %63, i64 4, !dbg !24
  %105 = insertelement <64 x i32> %104, i32 %extelt.offset2, i64 5, !dbg !24
  %106 = insertelement <64 x i32> %105, i32 %64, i64 6, !dbg !24
  %107 = insertelement <64 x i32> %106, i32 %extelt.offset3, i64 7, !dbg !24
  %108 = insertelement <64 x i32> %107, i32 %66, i64 8, !dbg !24
  %109 = insertelement <64 x i32> %108, i32 %extelt.offset4, i64 9, !dbg !24
  %110 = insertelement <64 x i32> %109, i32 %67, i64 10, !dbg !24
  %111 = insertelement <64 x i32> %110, i32 %extelt.offset5, i64 11, !dbg !24
  %112 = insertelement <64 x i32> %111, i32 %68, i64 12, !dbg !24
  %113 = insertelement <64 x i32> %112, i32 %extelt.offset6, i64 13, !dbg !24
  %114 = insertelement <64 x i32> %113, i32 %69, i64 14, !dbg !24
  %115 = insertelement <64 x i32> %114, i32 %extelt.offset7, i64 15, !dbg !24
  %116 = insertelement <64 x i32> %115, i32 %71, i64 16, !dbg !24
  %117 = insertelement <64 x i32> %116, i32 %extelt.offset8, i64 17, !dbg !24
  %118 = insertelement <64 x i32> %117, i32 %72, i64 18, !dbg !24
  %119 = insertelement <64 x i32> %118, i32 %extelt.offset9, i64 19, !dbg !24
  %120 = insertelement <64 x i32> %119, i32 %73, i64 20, !dbg !24
  %121 = insertelement <64 x i32> %120, i32 %extelt.offset10, i64 21, !dbg !24
  %122 = insertelement <64 x i32> %121, i32 %74, i64 22, !dbg !24
  %123 = insertelement <64 x i32> %122, i32 %extelt.offset11, i64 23, !dbg !24
  %124 = insertelement <64 x i32> %123, i32 %76, i64 24, !dbg !24
  %125 = insertelement <64 x i32> %124, i32 %extelt.offset12, i64 25, !dbg !24
  %126 = insertelement <64 x i32> %125, i32 %77, i64 26, !dbg !24
  %127 = insertelement <64 x i32> %126, i32 %extelt.offset13, i64 27, !dbg !24
  %128 = insertelement <64 x i32> %127, i32 %78, i64 28, !dbg !24
  %129 = insertelement <64 x i32> %128, i32 %extelt.offset14, i64 29, !dbg !24
  %130 = insertelement <64 x i32> %129, i32 %79, i64 30, !dbg !24
  %131 = insertelement <64 x i32> %130, i32 %extelt.offset15, i64 31, !dbg !24
  %132 = insertelement <64 x i32> %131, i32 %81, i64 32, !dbg !24
  %133 = insertelement <64 x i32> %132, i32 %extelt.offset16, i64 33, !dbg !24
  %134 = insertelement <64 x i32> %133, i32 %82, i64 34, !dbg !24
  %135 = insertelement <64 x i32> %134, i32 %extelt.offset17, i64 35, !dbg !24
  %136 = insertelement <64 x i32> %135, i32 %83, i64 36, !dbg !24
  %137 = insertelement <64 x i32> %136, i32 %extelt.offset18, i64 37, !dbg !24
  %138 = insertelement <64 x i32> %137, i32 %84, i64 38, !dbg !24
  %139 = insertelement <64 x i32> %138, i32 %extelt.offset19, i64 39, !dbg !24
  %140 = insertelement <64 x i32> %139, i32 %86, i64 40, !dbg !24
  %141 = insertelement <64 x i32> %140, i32 %extelt.offset20, i64 41, !dbg !24
  %142 = insertelement <64 x i32> %141, i32 %87, i64 42, !dbg !24
  %143 = insertelement <64 x i32> %142, i32 %extelt.offset21, i64 43, !dbg !24
  %144 = insertelement <64 x i32> %143, i32 %88, i64 44, !dbg !24
  %145 = insertelement <64 x i32> %144, i32 %extelt.offset22, i64 45, !dbg !24
  %146 = insertelement <64 x i32> %145, i32 %89, i64 46, !dbg !24
  %147 = insertelement <64 x i32> %146, i32 %extelt.offset23, i64 47, !dbg !24
  %148 = insertelement <64 x i32> %147, i32 %91, i64 48, !dbg !24
  %149 = insertelement <64 x i32> %148, i32 %extelt.offset24, i64 49, !dbg !24
  %150 = insertelement <64 x i32> %149, i32 %92, i64 50, !dbg !24
  %151 = insertelement <64 x i32> %150, i32 %extelt.offset25, i64 51, !dbg !24
  %152 = insertelement <64 x i32> %151, i32 %93, i64 52, !dbg !24
  %153 = insertelement <64 x i32> %152, i32 %extelt.offset26, i64 53, !dbg !24
  %154 = insertelement <64 x i32> %153, i32 %94, i64 54, !dbg !24
  %155 = insertelement <64 x i32> %154, i32 %extelt.offset27, i64 55, !dbg !24
  %156 = insertelement <64 x i32> %155, i32 %96, i64 56, !dbg !24
  %157 = insertelement <64 x i32> %156, i32 %extelt.offset28, i64 57, !dbg !24
  %158 = insertelement <64 x i32> %157, i32 %97, i64 58, !dbg !24
  %159 = insertelement <64 x i32> %158, i32 %extelt.offset29, i64 59, !dbg !24
  %160 = insertelement <64 x i32> %159, i32 %98, i64 60, !dbg !24
  %161 = insertelement <64 x i32> %160, i32 %extelt.offset30, i64 61, !dbg !24
  %162 = insertelement <64 x i32> %161, i32 %99, i64 62, !dbg !24
  %163 = insertelement <64 x i32> %162, i32 %extelt.offset31, i64 63, !dbg !24
  %164 = trunc <64 x i32> %163 to <64 x i16>, !dbg !24
  %165 = bitcast <64 x i16> %164 to <64 x half>, !dbg !24
  %166 = fpext <64 x half> %165 to <64 x float>, !dbg !25
  %167 = sitofp i32 %10 to float, !dbg !26
  %168 = insertelement <64 x float> poison, float %167, i64 0, !dbg !26
  %169 = shufflevector <64 x float> %168, <64 x float> poison, <64 x i32> zeroinitializer, !dbg !26
  %170 = fmul <64 x float> %169, %166, !dbg !26
  %171 = select i1 %9, <64 x float> %170, <64 x float> %166, !dbg !26
  br i1 %7, label %172, label %2481, !dbg !27

172:                                              ; preds = %11
  %173 = sitofp i32 %8 to float, !dbg !28
  %174 = extractelement <64 x float> %171, i64 0, !dbg !28
  %175 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %174, float %173) #5, !dbg !28
  %176 = extractelement <64 x float> %171, i64 1, !dbg !28
  %177 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %176, float %173) #5, !dbg !28
  %178 = extractelement <64 x float> %171, i64 2, !dbg !28
  %179 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %178, float %173) #5, !dbg !28
  %180 = extractelement <64 x float> %171, i64 3, !dbg !28
  %181 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %180, float %173) #5, !dbg !28
  %182 = extractelement <64 x float> %171, i64 4, !dbg !28
  %183 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %182, float %173) #5, !dbg !28
  %184 = extractelement <64 x float> %171, i64 5, !dbg !28
  %185 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %184, float %173) #5, !dbg !28
  %186 = extractelement <64 x float> %171, i64 6, !dbg !28
  %187 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %186, float %173) #5, !dbg !28
  %188 = extractelement <64 x float> %171, i64 7, !dbg !28
  %189 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %188, float %173) #5, !dbg !28
  %190 = extractelement <64 x float> %171, i64 8, !dbg !28
  %191 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %190, float %173) #5, !dbg !28
  %192 = extractelement <64 x float> %171, i64 9, !dbg !28
  %193 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %192, float %173) #5, !dbg !28
  %194 = extractelement <64 x float> %171, i64 10, !dbg !28
  %195 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %194, float %173) #5, !dbg !28
  %196 = extractelement <64 x float> %171, i64 11, !dbg !28
  %197 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %196, float %173) #5, !dbg !28
  %198 = extractelement <64 x float> %171, i64 12, !dbg !28
  %199 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %198, float %173) #5, !dbg !28
  %200 = extractelement <64 x float> %171, i64 13, !dbg !28
  %201 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %200, float %173) #5, !dbg !28
  %202 = extractelement <64 x float> %171, i64 14, !dbg !28
  %203 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %202, float %173) #5, !dbg !28
  %204 = extractelement <64 x float> %171, i64 15, !dbg !28
  %205 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %204, float %173) #5, !dbg !28
  %206 = extractelement <64 x float> %171, i64 16, !dbg !28
  %207 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %206, float %173) #5, !dbg !28
  %208 = extractelement <64 x float> %171, i64 17, !dbg !28
  %209 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %208, float %173) #5, !dbg !28
  %210 = extractelement <64 x float> %171, i64 18, !dbg !28
  %211 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %210, float %173) #5, !dbg !28
  %212 = extractelement <64 x float> %171, i64 19, !dbg !28
  %213 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %212, float %173) #5, !dbg !28
  %214 = extractelement <64 x float> %171, i64 20, !dbg !28
  %215 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %214, float %173) #5, !dbg !28
  %216 = extractelement <64 x float> %171, i64 21, !dbg !28
  %217 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %216, float %173) #5, !dbg !28
  %218 = extractelement <64 x float> %171, i64 22, !dbg !28
  %219 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %218, float %173) #5, !dbg !28
  %220 = extractelement <64 x float> %171, i64 23, !dbg !28
  %221 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %220, float %173) #5, !dbg !28
  %222 = extractelement <64 x float> %171, i64 24, !dbg !28
  %223 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %222, float %173) #5, !dbg !28
  %224 = extractelement <64 x float> %171, i64 25, !dbg !28
  %225 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %224, float %173) #5, !dbg !28
  %226 = extractelement <64 x float> %171, i64 26, !dbg !28
  %227 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %226, float %173) #5, !dbg !28
  %228 = extractelement <64 x float> %171, i64 27, !dbg !28
  %229 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %228, float %173) #5, !dbg !28
  %230 = extractelement <64 x float> %171, i64 28, !dbg !28
  %231 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %230, float %173) #5, !dbg !28
  %232 = extractelement <64 x float> %171, i64 29, !dbg !28
  %233 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %232, float %173) #5, !dbg !28
  %234 = extractelement <64 x float> %171, i64 30, !dbg !28
  %235 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %234, float %173) #5, !dbg !28
  %236 = extractelement <64 x float> %171, i64 31, !dbg !28
  %237 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %236, float %173) #5, !dbg !28
  %238 = extractelement <64 x float> %171, i64 32, !dbg !28
  %239 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %238, float %173) #5, !dbg !28
  %240 = extractelement <64 x float> %171, i64 33, !dbg !28
  %241 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %240, float %173) #5, !dbg !28
  %242 = extractelement <64 x float> %171, i64 34, !dbg !28
  %243 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %242, float %173) #5, !dbg !28
  %244 = extractelement <64 x float> %171, i64 35, !dbg !28
  %245 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %244, float %173) #5, !dbg !28
  %246 = extractelement <64 x float> %171, i64 36, !dbg !28
  %247 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %246, float %173) #5, !dbg !28
  %248 = extractelement <64 x float> %171, i64 37, !dbg !28
  %249 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %248, float %173) #5, !dbg !28
  %250 = extractelement <64 x float> %171, i64 38, !dbg !28
  %251 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %250, float %173) #5, !dbg !28
  %252 = extractelement <64 x float> %171, i64 39, !dbg !28
  %253 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %252, float %173) #5, !dbg !28
  %254 = extractelement <64 x float> %171, i64 40, !dbg !28
  %255 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %254, float %173) #5, !dbg !28
  %256 = extractelement <64 x float> %171, i64 41, !dbg !28
  %257 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %256, float %173) #5, !dbg !28
  %258 = extractelement <64 x float> %171, i64 42, !dbg !28
  %259 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %258, float %173) #5, !dbg !28
  %260 = extractelement <64 x float> %171, i64 43, !dbg !28
  %261 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %260, float %173) #5, !dbg !28
  %262 = extractelement <64 x float> %171, i64 44, !dbg !28
  %263 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %262, float %173) #5, !dbg !28
  %264 = extractelement <64 x float> %171, i64 45, !dbg !28
  %265 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %264, float %173) #5, !dbg !28
  %266 = extractelement <64 x float> %171, i64 46, !dbg !28
  %267 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %266, float %173) #5, !dbg !28
  %268 = extractelement <64 x float> %171, i64 47, !dbg !28
  %269 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %268, float %173) #5, !dbg !28
  %270 = extractelement <64 x float> %171, i64 48, !dbg !28
  %271 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %270, float %173) #5, !dbg !28
  %272 = extractelement <64 x float> %171, i64 49, !dbg !28
  %273 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %272, float %173) #5, !dbg !28
  %274 = extractelement <64 x float> %171, i64 50, !dbg !28
  %275 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %274, float %173) #5, !dbg !28
  %276 = extractelement <64 x float> %171, i64 51, !dbg !28
  %277 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %276, float %173) #5, !dbg !28
  %278 = extractelement <64 x float> %171, i64 52, !dbg !28
  %279 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %278, float %173) #5, !dbg !28
  %280 = extractelement <64 x float> %171, i64 53, !dbg !28
  %281 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %280, float %173) #5, !dbg !28
  %282 = extractelement <64 x float> %171, i64 54, !dbg !28
  %283 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %282, float %173) #5, !dbg !28
  %284 = extractelement <64 x float> %171, i64 55, !dbg !28
  %285 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %284, float %173) #5, !dbg !28
  %286 = extractelement <64 x float> %171, i64 56, !dbg !28
  %287 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %286, float %173) #5, !dbg !28
  %288 = extractelement <64 x float> %171, i64 57, !dbg !28
  %289 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %288, float %173) #5, !dbg !28
  %290 = extractelement <64 x float> %171, i64 58, !dbg !28
  %291 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %290, float %173) #5, !dbg !28
  %292 = extractelement <64 x float> %171, i64 59, !dbg !28
  %293 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %292, float %173) #5, !dbg !28
  %294 = extractelement <64 x float> %171, i64 60, !dbg !28
  %295 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %294, float %173) #5, !dbg !28
  %296 = extractelement <64 x float> %171, i64 61, !dbg !28
  %297 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %296, float %173) #5, !dbg !28
  %298 = extractelement <64 x float> %171, i64 62, !dbg !28
  %299 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %298, float %173) #5, !dbg !28
  %300 = extractelement <64 x float> %171, i64 63, !dbg !28
  %301 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %300, float %173) #5, !dbg !28
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i = icmp eq i32 %302, 0, !dbg !29
  %303 = tail call float @llvm.nvvm.fabs.ftz.f(float %175) #5, !dbg !29
  %304 = tail call float @llvm.nvvm.fabs.f(float %175) #5, !dbg !29
  %.01.i = select i1 %.not.i, float %304, float %303, !dbg !29
  %305 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !29
  br i1 %305, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !29

__internal_fmad.exit1.i:                          ; preds = %172
  %306 = fmul float %.01.i, 0x4007154760000000, !dbg !29
  %307 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %306) #5, !dbg !29
  %308 = fadd float %307, 1.000000e+00, !dbg !29
  %309 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %308) #6, !dbg !29, !srcloc !30
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i = icmp eq i32 %310, 0, !dbg !29
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %309, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %309, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i = select i1 %.not6.i, float %312, float %311, !dbg !29
  %313 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !29
  %s.0.i = select i1 %313, float 1.000000e+00, float %.03.i, !dbg !29
  %314 = bitcast float %s.0.i to i32, !dbg !29
  %315 = bitcast float %175 to i32, !dbg !29
  %316 = and i32 %315, -2147483648, !dbg !29
  %317 = or i32 %316, %314, !dbg !29
  %318 = bitcast i32 %317 to float, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__internal_fmad.exit3.i:                          ; preds = %172
  %319 = fmul float %175, %175, !dbg !29
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i = icmp eq i32 %320, 0, !dbg !29
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %319, float 0xBFAAC795C0000000) #5, !dbg !29
  %322 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %319, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i = select i1 %.not1.i, float %322, float %321, !dbg !29
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i = icmp eq i32 %323, 0, !dbg !29
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %319, float 0x3FC10B2820000000) #5, !dbg !29
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %319, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i = select i1 %.not2.i, float %325, float %324, !dbg !29
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i = icmp eq i32 %326, 0, !dbg !29
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %319, float 0xBFD5553DA0000000) #5, !dbg !29
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %319, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i = select i1 %.not3.i, float %328, float %327, !dbg !29
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i = icmp eq i32 %329, 0, !dbg !29
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %319, float 0.000000e+00) #5, !dbg !29
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %319, float 0.000000e+00) #5, !dbg !29
  %.04.i = select i1 %.not4.i, float %331, float %330, !dbg !29
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i = icmp eq i32 %332, 0, !dbg !29
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %175, float %175) #5, !dbg !29
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %175, float %175) #5, !dbg !29
  %.02.i = select i1 %.not5.i, float %334, float %333, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %318, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !29
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i286 = icmp eq i32 %335, 0, !dbg !29
  %336 = tail call float @llvm.nvvm.fabs.ftz.f(float %177) #5, !dbg !29
  %337 = tail call float @llvm.nvvm.fabs.f(float %177) #5, !dbg !29
  %.01.i287 = select i1 %.not.i286, float %337, float %336, !dbg !29
  %338 = fcmp ult float %.01.i287, 0x3FE3333340000000, !dbg !29
  br i1 %338, label %__internal_fmad.exit3.i293, label %__internal_fmad.exit1.i288, !dbg !29

__internal_fmad.exit1.i288:                       ; preds = %__nv_tanhf.exit
  %339 = fmul float %.01.i287, 0x4007154760000000, !dbg !29
  %340 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %339) #5, !dbg !29
  %341 = fadd float %340, 1.000000e+00, !dbg !29
  %342 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %341) #6, !dbg !29, !srcloc !30
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i289 = icmp eq i32 %343, 0, !dbg !29
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %342, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %342, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i290 = select i1 %.not6.i289, float %345, float %344, !dbg !29
  %346 = fcmp oge float %.01.i287, 0x4022059680000000, !dbg !29
  %s.0.i291 = select i1 %346, float 1.000000e+00, float %.03.i290, !dbg !29
  %347 = bitcast float %s.0.i291 to i32, !dbg !29
  %348 = bitcast float %177 to i32, !dbg !29
  %349 = and i32 %348, -2147483648, !dbg !29
  %350 = or i32 %349, %347, !dbg !29
  %351 = bitcast i32 %350 to float, !dbg !29
  br label %__nv_tanhf.exit304, !dbg !29

__internal_fmad.exit3.i293:                       ; preds = %__nv_tanhf.exit
  %352 = fmul float %177, %177, !dbg !29
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i294 = icmp eq i32 %353, 0, !dbg !29
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %352, float 0xBFAAC795C0000000) #5, !dbg !29
  %355 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %352, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i295 = select i1 %.not1.i294, float %355, float %354, !dbg !29
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i296 = icmp eq i32 %356, 0, !dbg !29
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i295, float %352, float 0x3FC10B2820000000) #5, !dbg !29
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i295, float %352, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i297 = select i1 %.not2.i296, float %358, float %357, !dbg !29
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i298 = icmp eq i32 %359, 0, !dbg !29
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i297, float %352, float 0xBFD5553DA0000000) #5, !dbg !29
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i297, float %352, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i299 = select i1 %.not3.i298, float %361, float %360, !dbg !29
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i300 = icmp eq i32 %362, 0, !dbg !29
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i299, float %352, float 0.000000e+00) #5, !dbg !29
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i299, float %352, float 0.000000e+00) #5, !dbg !29
  %.04.i301 = select i1 %.not4.i300, float %364, float %363, !dbg !29
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i302 = icmp eq i32 %365, 0, !dbg !29
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i301, float %177, float %177) #5, !dbg !29
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i301, float %177, float %177) #5, !dbg !29
  %.02.i303 = select i1 %.not5.i302, float %367, float %366, !dbg !29
  br label %__nv_tanhf.exit304, !dbg !29

__nv_tanhf.exit304:                               ; preds = %__internal_fmad.exit1.i288, %__internal_fmad.exit3.i293
  %s.1.i292 = phi float [ %351, %__internal_fmad.exit1.i288 ], [ %.02.i303, %__internal_fmad.exit3.i293 ], !dbg !29
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i305 = icmp eq i32 %368, 0, !dbg !29
  %369 = tail call float @llvm.nvvm.fabs.ftz.f(float %179) #5, !dbg !29
  %370 = tail call float @llvm.nvvm.fabs.f(float %179) #5, !dbg !29
  %.01.i306 = select i1 %.not.i305, float %370, float %369, !dbg !29
  %371 = fcmp ult float %.01.i306, 0x3FE3333340000000, !dbg !29
  br i1 %371, label %__internal_fmad.exit3.i312, label %__internal_fmad.exit1.i307, !dbg !29

__internal_fmad.exit1.i307:                       ; preds = %__nv_tanhf.exit304
  %372 = fmul float %.01.i306, 0x4007154760000000, !dbg !29
  %373 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %372) #5, !dbg !29
  %374 = fadd float %373, 1.000000e+00, !dbg !29
  %375 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %374) #6, !dbg !29, !srcloc !30
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i308 = icmp eq i32 %376, 0, !dbg !29
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %375, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %378 = tail call float @llvm.nvvm.fma.rn.f(float %375, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i309 = select i1 %.not6.i308, float %378, float %377, !dbg !29
  %379 = fcmp oge float %.01.i306, 0x4022059680000000, !dbg !29
  %s.0.i310 = select i1 %379, float 1.000000e+00, float %.03.i309, !dbg !29
  %380 = bitcast float %s.0.i310 to i32, !dbg !29
  %381 = bitcast float %179 to i32, !dbg !29
  %382 = and i32 %381, -2147483648, !dbg !29
  %383 = or i32 %382, %380, !dbg !29
  %384 = bitcast i32 %383 to float, !dbg !29
  br label %__nv_tanhf.exit323, !dbg !29

__internal_fmad.exit3.i312:                       ; preds = %__nv_tanhf.exit304
  %385 = fmul float %179, %179, !dbg !29
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i313 = icmp eq i32 %386, 0, !dbg !29
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %385, float 0xBFAAC795C0000000) #5, !dbg !29
  %388 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %385, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i314 = select i1 %.not1.i313, float %388, float %387, !dbg !29
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i315 = icmp eq i32 %389, 0, !dbg !29
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i314, float %385, float 0x3FC10B2820000000) #5, !dbg !29
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i314, float %385, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i316 = select i1 %.not2.i315, float %391, float %390, !dbg !29
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i317 = icmp eq i32 %392, 0, !dbg !29
  %393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i316, float %385, float 0xBFD5553DA0000000) #5, !dbg !29
  %394 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i316, float %385, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i318 = select i1 %.not3.i317, float %394, float %393, !dbg !29
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i319 = icmp eq i32 %395, 0, !dbg !29
  %396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i318, float %385, float 0.000000e+00) #5, !dbg !29
  %397 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i318, float %385, float 0.000000e+00) #5, !dbg !29
  %.04.i320 = select i1 %.not4.i319, float %397, float %396, !dbg !29
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i321 = icmp eq i32 %398, 0, !dbg !29
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i320, float %179, float %179) #5, !dbg !29
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i320, float %179, float %179) #5, !dbg !29
  %.02.i322 = select i1 %.not5.i321, float %400, float %399, !dbg !29
  br label %__nv_tanhf.exit323, !dbg !29

__nv_tanhf.exit323:                               ; preds = %__internal_fmad.exit1.i307, %__internal_fmad.exit3.i312
  %s.1.i311 = phi float [ %384, %__internal_fmad.exit1.i307 ], [ %.02.i322, %__internal_fmad.exit3.i312 ], !dbg !29
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i324 = icmp eq i32 %401, 0, !dbg !29
  %402 = tail call float @llvm.nvvm.fabs.ftz.f(float %181) #5, !dbg !29
  %403 = tail call float @llvm.nvvm.fabs.f(float %181) #5, !dbg !29
  %.01.i325 = select i1 %.not.i324, float %403, float %402, !dbg !29
  %404 = fcmp ult float %.01.i325, 0x3FE3333340000000, !dbg !29
  br i1 %404, label %__internal_fmad.exit3.i331, label %__internal_fmad.exit1.i326, !dbg !29

__internal_fmad.exit1.i326:                       ; preds = %__nv_tanhf.exit323
  %405 = fmul float %.01.i325, 0x4007154760000000, !dbg !29
  %406 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %405) #5, !dbg !29
  %407 = fadd float %406, 1.000000e+00, !dbg !29
  %408 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %407) #6, !dbg !29, !srcloc !30
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i327 = icmp eq i32 %409, 0, !dbg !29
  %410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %408, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %411 = tail call float @llvm.nvvm.fma.rn.f(float %408, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i328 = select i1 %.not6.i327, float %411, float %410, !dbg !29
  %412 = fcmp oge float %.01.i325, 0x4022059680000000, !dbg !29
  %s.0.i329 = select i1 %412, float 1.000000e+00, float %.03.i328, !dbg !29
  %413 = bitcast float %s.0.i329 to i32, !dbg !29
  %414 = bitcast float %181 to i32, !dbg !29
  %415 = and i32 %414, -2147483648, !dbg !29
  %416 = or i32 %415, %413, !dbg !29
  %417 = bitcast i32 %416 to float, !dbg !29
  br label %__nv_tanhf.exit342, !dbg !29

__internal_fmad.exit3.i331:                       ; preds = %__nv_tanhf.exit323
  %418 = fmul float %181, %181, !dbg !29
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i332 = icmp eq i32 %419, 0, !dbg !29
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %418, float 0xBFAAC795C0000000) #5, !dbg !29
  %421 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %418, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i333 = select i1 %.not1.i332, float %421, float %420, !dbg !29
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i334 = icmp eq i32 %422, 0, !dbg !29
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i333, float %418, float 0x3FC10B2820000000) #5, !dbg !29
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i333, float %418, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i335 = select i1 %.not2.i334, float %424, float %423, !dbg !29
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i336 = icmp eq i32 %425, 0, !dbg !29
  %426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i335, float %418, float 0xBFD5553DA0000000) #5, !dbg !29
  %427 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i335, float %418, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i337 = select i1 %.not3.i336, float %427, float %426, !dbg !29
  %428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i338 = icmp eq i32 %428, 0, !dbg !29
  %429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i337, float %418, float 0.000000e+00) #5, !dbg !29
  %430 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i337, float %418, float 0.000000e+00) #5, !dbg !29
  %.04.i339 = select i1 %.not4.i338, float %430, float %429, !dbg !29
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i340 = icmp eq i32 %431, 0, !dbg !29
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i339, float %181, float %181) #5, !dbg !29
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i339, float %181, float %181) #5, !dbg !29
  %.02.i341 = select i1 %.not5.i340, float %433, float %432, !dbg !29
  br label %__nv_tanhf.exit342, !dbg !29

__nv_tanhf.exit342:                               ; preds = %__internal_fmad.exit1.i326, %__internal_fmad.exit3.i331
  %s.1.i330 = phi float [ %417, %__internal_fmad.exit1.i326 ], [ %.02.i341, %__internal_fmad.exit3.i331 ], !dbg !29
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i343 = icmp eq i32 %434, 0, !dbg !29
  %435 = tail call float @llvm.nvvm.fabs.ftz.f(float %183) #5, !dbg !29
  %436 = tail call float @llvm.nvvm.fabs.f(float %183) #5, !dbg !29
  %.01.i344 = select i1 %.not.i343, float %436, float %435, !dbg !29
  %437 = fcmp ult float %.01.i344, 0x3FE3333340000000, !dbg !29
  br i1 %437, label %__internal_fmad.exit3.i350, label %__internal_fmad.exit1.i345, !dbg !29

__internal_fmad.exit1.i345:                       ; preds = %__nv_tanhf.exit342
  %438 = fmul float %.01.i344, 0x4007154760000000, !dbg !29
  %439 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %438) #5, !dbg !29
  %440 = fadd float %439, 1.000000e+00, !dbg !29
  %441 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %440) #6, !dbg !29, !srcloc !30
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i346 = icmp eq i32 %442, 0, !dbg !29
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %441, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %441, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i347 = select i1 %.not6.i346, float %444, float %443, !dbg !29
  %445 = fcmp oge float %.01.i344, 0x4022059680000000, !dbg !29
  %s.0.i348 = select i1 %445, float 1.000000e+00, float %.03.i347, !dbg !29
  %446 = bitcast float %s.0.i348 to i32, !dbg !29
  %447 = bitcast float %183 to i32, !dbg !29
  %448 = and i32 %447, -2147483648, !dbg !29
  %449 = or i32 %448, %446, !dbg !29
  %450 = bitcast i32 %449 to float, !dbg !29
  br label %__nv_tanhf.exit361, !dbg !29

__internal_fmad.exit3.i350:                       ; preds = %__nv_tanhf.exit342
  %451 = fmul float %183, %183, !dbg !29
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i351 = icmp eq i32 %452, 0, !dbg !29
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %451, float 0xBFAAC795C0000000) #5, !dbg !29
  %454 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %451, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i352 = select i1 %.not1.i351, float %454, float %453, !dbg !29
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i353 = icmp eq i32 %455, 0, !dbg !29
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i352, float %451, float 0x3FC10B2820000000) #5, !dbg !29
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i352, float %451, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i354 = select i1 %.not2.i353, float %457, float %456, !dbg !29
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i355 = icmp eq i32 %458, 0, !dbg !29
  %459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i354, float %451, float 0xBFD5553DA0000000) #5, !dbg !29
  %460 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i354, float %451, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i356 = select i1 %.not3.i355, float %460, float %459, !dbg !29
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i357 = icmp eq i32 %461, 0, !dbg !29
  %462 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i356, float %451, float 0.000000e+00) #5, !dbg !29
  %463 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i356, float %451, float 0.000000e+00) #5, !dbg !29
  %.04.i358 = select i1 %.not4.i357, float %463, float %462, !dbg !29
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i359 = icmp eq i32 %464, 0, !dbg !29
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i358, float %183, float %183) #5, !dbg !29
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i358, float %183, float %183) #5, !dbg !29
  %.02.i360 = select i1 %.not5.i359, float %466, float %465, !dbg !29
  br label %__nv_tanhf.exit361, !dbg !29

__nv_tanhf.exit361:                               ; preds = %__internal_fmad.exit1.i345, %__internal_fmad.exit3.i350
  %s.1.i349 = phi float [ %450, %__internal_fmad.exit1.i345 ], [ %.02.i360, %__internal_fmad.exit3.i350 ], !dbg !29
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i362 = icmp eq i32 %467, 0, !dbg !29
  %468 = tail call float @llvm.nvvm.fabs.ftz.f(float %185) #5, !dbg !29
  %469 = tail call float @llvm.nvvm.fabs.f(float %185) #5, !dbg !29
  %.01.i363 = select i1 %.not.i362, float %469, float %468, !dbg !29
  %470 = fcmp ult float %.01.i363, 0x3FE3333340000000, !dbg !29
  br i1 %470, label %__internal_fmad.exit3.i369, label %__internal_fmad.exit1.i364, !dbg !29

__internal_fmad.exit1.i364:                       ; preds = %__nv_tanhf.exit361
  %471 = fmul float %.01.i363, 0x4007154760000000, !dbg !29
  %472 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %471) #5, !dbg !29
  %473 = fadd float %472, 1.000000e+00, !dbg !29
  %474 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %473) #6, !dbg !29, !srcloc !30
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i365 = icmp eq i32 %475, 0, !dbg !29
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %474, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %474, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i366 = select i1 %.not6.i365, float %477, float %476, !dbg !29
  %478 = fcmp oge float %.01.i363, 0x4022059680000000, !dbg !29
  %s.0.i367 = select i1 %478, float 1.000000e+00, float %.03.i366, !dbg !29
  %479 = bitcast float %s.0.i367 to i32, !dbg !29
  %480 = bitcast float %185 to i32, !dbg !29
  %481 = and i32 %480, -2147483648, !dbg !29
  %482 = or i32 %481, %479, !dbg !29
  %483 = bitcast i32 %482 to float, !dbg !29
  br label %__nv_tanhf.exit380, !dbg !29

__internal_fmad.exit3.i369:                       ; preds = %__nv_tanhf.exit361
  %484 = fmul float %185, %185, !dbg !29
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i370 = icmp eq i32 %485, 0, !dbg !29
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %484, float 0xBFAAC795C0000000) #5, !dbg !29
  %487 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %484, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i371 = select i1 %.not1.i370, float %487, float %486, !dbg !29
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i372 = icmp eq i32 %488, 0, !dbg !29
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i371, float %484, float 0x3FC10B2820000000) #5, !dbg !29
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i371, float %484, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i373 = select i1 %.not2.i372, float %490, float %489, !dbg !29
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i374 = icmp eq i32 %491, 0, !dbg !29
  %492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i373, float %484, float 0xBFD5553DA0000000) #5, !dbg !29
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i373, float %484, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i375 = select i1 %.not3.i374, float %493, float %492, !dbg !29
  %494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i376 = icmp eq i32 %494, 0, !dbg !29
  %495 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i375, float %484, float 0.000000e+00) #5, !dbg !29
  %496 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i375, float %484, float 0.000000e+00) #5, !dbg !29
  %.04.i377 = select i1 %.not4.i376, float %496, float %495, !dbg !29
  %497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i378 = icmp eq i32 %497, 0, !dbg !29
  %498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i377, float %185, float %185) #5, !dbg !29
  %499 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i377, float %185, float %185) #5, !dbg !29
  %.02.i379 = select i1 %.not5.i378, float %499, float %498, !dbg !29
  br label %__nv_tanhf.exit380, !dbg !29

__nv_tanhf.exit380:                               ; preds = %__internal_fmad.exit1.i364, %__internal_fmad.exit3.i369
  %s.1.i368 = phi float [ %483, %__internal_fmad.exit1.i364 ], [ %.02.i379, %__internal_fmad.exit3.i369 ], !dbg !29
  %500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i381 = icmp eq i32 %500, 0, !dbg !29
  %501 = tail call float @llvm.nvvm.fabs.ftz.f(float %187) #5, !dbg !29
  %502 = tail call float @llvm.nvvm.fabs.f(float %187) #5, !dbg !29
  %.01.i382 = select i1 %.not.i381, float %502, float %501, !dbg !29
  %503 = fcmp ult float %.01.i382, 0x3FE3333340000000, !dbg !29
  br i1 %503, label %__internal_fmad.exit3.i388, label %__internal_fmad.exit1.i383, !dbg !29

__internal_fmad.exit1.i383:                       ; preds = %__nv_tanhf.exit380
  %504 = fmul float %.01.i382, 0x4007154760000000, !dbg !29
  %505 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %504) #5, !dbg !29
  %506 = fadd float %505, 1.000000e+00, !dbg !29
  %507 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %506) #6, !dbg !29, !srcloc !30
  %508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i384 = icmp eq i32 %508, 0, !dbg !29
  %509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %507, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %510 = tail call float @llvm.nvvm.fma.rn.f(float %507, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i385 = select i1 %.not6.i384, float %510, float %509, !dbg !29
  %511 = fcmp oge float %.01.i382, 0x4022059680000000, !dbg !29
  %s.0.i386 = select i1 %511, float 1.000000e+00, float %.03.i385, !dbg !29
  %512 = bitcast float %s.0.i386 to i32, !dbg !29
  %513 = bitcast float %187 to i32, !dbg !29
  %514 = and i32 %513, -2147483648, !dbg !29
  %515 = or i32 %514, %512, !dbg !29
  %516 = bitcast i32 %515 to float, !dbg !29
  br label %__nv_tanhf.exit399, !dbg !29

__internal_fmad.exit3.i388:                       ; preds = %__nv_tanhf.exit380
  %517 = fmul float %187, %187, !dbg !29
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i389 = icmp eq i32 %518, 0, !dbg !29
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %517, float 0xBFAAC795C0000000) #5, !dbg !29
  %520 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %517, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i390 = select i1 %.not1.i389, float %520, float %519, !dbg !29
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i391 = icmp eq i32 %521, 0, !dbg !29
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i390, float %517, float 0x3FC10B2820000000) #5, !dbg !29
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i390, float %517, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i392 = select i1 %.not2.i391, float %523, float %522, !dbg !29
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i393 = icmp eq i32 %524, 0, !dbg !29
  %525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i392, float %517, float 0xBFD5553DA0000000) #5, !dbg !29
  %526 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i392, float %517, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i394 = select i1 %.not3.i393, float %526, float %525, !dbg !29
  %527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i395 = icmp eq i32 %527, 0, !dbg !29
  %528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i394, float %517, float 0.000000e+00) #5, !dbg !29
  %529 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i394, float %517, float 0.000000e+00) #5, !dbg !29
  %.04.i396 = select i1 %.not4.i395, float %529, float %528, !dbg !29
  %530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i397 = icmp eq i32 %530, 0, !dbg !29
  %531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i396, float %187, float %187) #5, !dbg !29
  %532 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i396, float %187, float %187) #5, !dbg !29
  %.02.i398 = select i1 %.not5.i397, float %532, float %531, !dbg !29
  br label %__nv_tanhf.exit399, !dbg !29

__nv_tanhf.exit399:                               ; preds = %__internal_fmad.exit1.i383, %__internal_fmad.exit3.i388
  %s.1.i387 = phi float [ %516, %__internal_fmad.exit1.i383 ], [ %.02.i398, %__internal_fmad.exit3.i388 ], !dbg !29
  %533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i400 = icmp eq i32 %533, 0, !dbg !29
  %534 = tail call float @llvm.nvvm.fabs.ftz.f(float %189) #5, !dbg !29
  %535 = tail call float @llvm.nvvm.fabs.f(float %189) #5, !dbg !29
  %.01.i401 = select i1 %.not.i400, float %535, float %534, !dbg !29
  %536 = fcmp ult float %.01.i401, 0x3FE3333340000000, !dbg !29
  br i1 %536, label %__internal_fmad.exit3.i407, label %__internal_fmad.exit1.i402, !dbg !29

__internal_fmad.exit1.i402:                       ; preds = %__nv_tanhf.exit399
  %537 = fmul float %.01.i401, 0x4007154760000000, !dbg !29
  %538 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %537) #5, !dbg !29
  %539 = fadd float %538, 1.000000e+00, !dbg !29
  %540 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %539) #6, !dbg !29, !srcloc !30
  %541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i403 = icmp eq i32 %541, 0, !dbg !29
  %542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %540, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %543 = tail call float @llvm.nvvm.fma.rn.f(float %540, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i404 = select i1 %.not6.i403, float %543, float %542, !dbg !29
  %544 = fcmp oge float %.01.i401, 0x4022059680000000, !dbg !29
  %s.0.i405 = select i1 %544, float 1.000000e+00, float %.03.i404, !dbg !29
  %545 = bitcast float %s.0.i405 to i32, !dbg !29
  %546 = bitcast float %189 to i32, !dbg !29
  %547 = and i32 %546, -2147483648, !dbg !29
  %548 = or i32 %547, %545, !dbg !29
  %549 = bitcast i32 %548 to float, !dbg !29
  br label %__nv_tanhf.exit418, !dbg !29

__internal_fmad.exit3.i407:                       ; preds = %__nv_tanhf.exit399
  %550 = fmul float %189, %189, !dbg !29
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i408 = icmp eq i32 %551, 0, !dbg !29
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %550, float 0xBFAAC795C0000000) #5, !dbg !29
  %553 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %550, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i409 = select i1 %.not1.i408, float %553, float %552, !dbg !29
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i410 = icmp eq i32 %554, 0, !dbg !29
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i409, float %550, float 0x3FC10B2820000000) #5, !dbg !29
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i409, float %550, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i411 = select i1 %.not2.i410, float %556, float %555, !dbg !29
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i412 = icmp eq i32 %557, 0, !dbg !29
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i411, float %550, float 0xBFD5553DA0000000) #5, !dbg !29
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i411, float %550, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i413 = select i1 %.not3.i412, float %559, float %558, !dbg !29
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i414 = icmp eq i32 %560, 0, !dbg !29
  %561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i413, float %550, float 0.000000e+00) #5, !dbg !29
  %562 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i413, float %550, float 0.000000e+00) #5, !dbg !29
  %.04.i415 = select i1 %.not4.i414, float %562, float %561, !dbg !29
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i416 = icmp eq i32 %563, 0, !dbg !29
  %564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i415, float %189, float %189) #5, !dbg !29
  %565 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i415, float %189, float %189) #5, !dbg !29
  %.02.i417 = select i1 %.not5.i416, float %565, float %564, !dbg !29
  br label %__nv_tanhf.exit418, !dbg !29

__nv_tanhf.exit418:                               ; preds = %__internal_fmad.exit1.i402, %__internal_fmad.exit3.i407
  %s.1.i406 = phi float [ %549, %__internal_fmad.exit1.i402 ], [ %.02.i417, %__internal_fmad.exit3.i407 ], !dbg !29
  %566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i419 = icmp eq i32 %566, 0, !dbg !29
  %567 = tail call float @llvm.nvvm.fabs.ftz.f(float %191) #5, !dbg !29
  %568 = tail call float @llvm.nvvm.fabs.f(float %191) #5, !dbg !29
  %.01.i420 = select i1 %.not.i419, float %568, float %567, !dbg !29
  %569 = fcmp ult float %.01.i420, 0x3FE3333340000000, !dbg !29
  br i1 %569, label %__internal_fmad.exit3.i426, label %__internal_fmad.exit1.i421, !dbg !29

__internal_fmad.exit1.i421:                       ; preds = %__nv_tanhf.exit418
  %570 = fmul float %.01.i420, 0x4007154760000000, !dbg !29
  %571 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %570) #5, !dbg !29
  %572 = fadd float %571, 1.000000e+00, !dbg !29
  %573 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %572) #6, !dbg !29, !srcloc !30
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i422 = icmp eq i32 %574, 0, !dbg !29
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %573, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %576 = tail call float @llvm.nvvm.fma.rn.f(float %573, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i423 = select i1 %.not6.i422, float %576, float %575, !dbg !29
  %577 = fcmp oge float %.01.i420, 0x4022059680000000, !dbg !29
  %s.0.i424 = select i1 %577, float 1.000000e+00, float %.03.i423, !dbg !29
  %578 = bitcast float %s.0.i424 to i32, !dbg !29
  %579 = bitcast float %191 to i32, !dbg !29
  %580 = and i32 %579, -2147483648, !dbg !29
  %581 = or i32 %580, %578, !dbg !29
  %582 = bitcast i32 %581 to float, !dbg !29
  br label %__nv_tanhf.exit437, !dbg !29

__internal_fmad.exit3.i426:                       ; preds = %__nv_tanhf.exit418
  %583 = fmul float %191, %191, !dbg !29
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i427 = icmp eq i32 %584, 0, !dbg !29
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %583, float 0xBFAAC795C0000000) #5, !dbg !29
  %586 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %583, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i428 = select i1 %.not1.i427, float %586, float %585, !dbg !29
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i429 = icmp eq i32 %587, 0, !dbg !29
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i428, float %583, float 0x3FC10B2820000000) #5, !dbg !29
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i428, float %583, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i430 = select i1 %.not2.i429, float %589, float %588, !dbg !29
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i431 = icmp eq i32 %590, 0, !dbg !29
  %591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i430, float %583, float 0xBFD5553DA0000000) #5, !dbg !29
  %592 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i430, float %583, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i432 = select i1 %.not3.i431, float %592, float %591, !dbg !29
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i433 = icmp eq i32 %593, 0, !dbg !29
  %594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i432, float %583, float 0.000000e+00) #5, !dbg !29
  %595 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i432, float %583, float 0.000000e+00) #5, !dbg !29
  %.04.i434 = select i1 %.not4.i433, float %595, float %594, !dbg !29
  %596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i435 = icmp eq i32 %596, 0, !dbg !29
  %597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i434, float %191, float %191) #5, !dbg !29
  %598 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i434, float %191, float %191) #5, !dbg !29
  %.02.i436 = select i1 %.not5.i435, float %598, float %597, !dbg !29
  br label %__nv_tanhf.exit437, !dbg !29

__nv_tanhf.exit437:                               ; preds = %__internal_fmad.exit1.i421, %__internal_fmad.exit3.i426
  %s.1.i425 = phi float [ %582, %__internal_fmad.exit1.i421 ], [ %.02.i436, %__internal_fmad.exit3.i426 ], !dbg !29
  %599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i438 = icmp eq i32 %599, 0, !dbg !29
  %600 = tail call float @llvm.nvvm.fabs.ftz.f(float %193) #5, !dbg !29
  %601 = tail call float @llvm.nvvm.fabs.f(float %193) #5, !dbg !29
  %.01.i439 = select i1 %.not.i438, float %601, float %600, !dbg !29
  %602 = fcmp ult float %.01.i439, 0x3FE3333340000000, !dbg !29
  br i1 %602, label %__internal_fmad.exit3.i445, label %__internal_fmad.exit1.i440, !dbg !29

__internal_fmad.exit1.i440:                       ; preds = %__nv_tanhf.exit437
  %603 = fmul float %.01.i439, 0x4007154760000000, !dbg !29
  %604 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %603) #5, !dbg !29
  %605 = fadd float %604, 1.000000e+00, !dbg !29
  %606 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %605) #6, !dbg !29, !srcloc !30
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i441 = icmp eq i32 %607, 0, !dbg !29
  %608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %606, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %609 = tail call float @llvm.nvvm.fma.rn.f(float %606, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i442 = select i1 %.not6.i441, float %609, float %608, !dbg !29
  %610 = fcmp oge float %.01.i439, 0x4022059680000000, !dbg !29
  %s.0.i443 = select i1 %610, float 1.000000e+00, float %.03.i442, !dbg !29
  %611 = bitcast float %s.0.i443 to i32, !dbg !29
  %612 = bitcast float %193 to i32, !dbg !29
  %613 = and i32 %612, -2147483648, !dbg !29
  %614 = or i32 %613, %611, !dbg !29
  %615 = bitcast i32 %614 to float, !dbg !29
  br label %__nv_tanhf.exit456, !dbg !29

__internal_fmad.exit3.i445:                       ; preds = %__nv_tanhf.exit437
  %616 = fmul float %193, %193, !dbg !29
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i446 = icmp eq i32 %617, 0, !dbg !29
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %616, float 0xBFAAC795C0000000) #5, !dbg !29
  %619 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %616, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i447 = select i1 %.not1.i446, float %619, float %618, !dbg !29
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i448 = icmp eq i32 %620, 0, !dbg !29
  %621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i447, float %616, float 0x3FC10B2820000000) #5, !dbg !29
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i447, float %616, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i449 = select i1 %.not2.i448, float %622, float %621, !dbg !29
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i450 = icmp eq i32 %623, 0, !dbg !29
  %624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i449, float %616, float 0xBFD5553DA0000000) #5, !dbg !29
  %625 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i449, float %616, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i451 = select i1 %.not3.i450, float %625, float %624, !dbg !29
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i452 = icmp eq i32 %626, 0, !dbg !29
  %627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i451, float %616, float 0.000000e+00) #5, !dbg !29
  %628 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i451, float %616, float 0.000000e+00) #5, !dbg !29
  %.04.i453 = select i1 %.not4.i452, float %628, float %627, !dbg !29
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i454 = icmp eq i32 %629, 0, !dbg !29
  %630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i453, float %193, float %193) #5, !dbg !29
  %631 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i453, float %193, float %193) #5, !dbg !29
  %.02.i455 = select i1 %.not5.i454, float %631, float %630, !dbg !29
  br label %__nv_tanhf.exit456, !dbg !29

__nv_tanhf.exit456:                               ; preds = %__internal_fmad.exit1.i440, %__internal_fmad.exit3.i445
  %s.1.i444 = phi float [ %615, %__internal_fmad.exit1.i440 ], [ %.02.i455, %__internal_fmad.exit3.i445 ], !dbg !29
  %632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i457 = icmp eq i32 %632, 0, !dbg !29
  %633 = tail call float @llvm.nvvm.fabs.ftz.f(float %195) #5, !dbg !29
  %634 = tail call float @llvm.nvvm.fabs.f(float %195) #5, !dbg !29
  %.01.i458 = select i1 %.not.i457, float %634, float %633, !dbg !29
  %635 = fcmp ult float %.01.i458, 0x3FE3333340000000, !dbg !29
  br i1 %635, label %__internal_fmad.exit3.i464, label %__internal_fmad.exit1.i459, !dbg !29

__internal_fmad.exit1.i459:                       ; preds = %__nv_tanhf.exit456
  %636 = fmul float %.01.i458, 0x4007154760000000, !dbg !29
  %637 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %636) #5, !dbg !29
  %638 = fadd float %637, 1.000000e+00, !dbg !29
  %639 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %638) #6, !dbg !29, !srcloc !30
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i460 = icmp eq i32 %640, 0, !dbg !29
  %641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %639, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %642 = tail call float @llvm.nvvm.fma.rn.f(float %639, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i461 = select i1 %.not6.i460, float %642, float %641, !dbg !29
  %643 = fcmp oge float %.01.i458, 0x4022059680000000, !dbg !29
  %s.0.i462 = select i1 %643, float 1.000000e+00, float %.03.i461, !dbg !29
  %644 = bitcast float %s.0.i462 to i32, !dbg !29
  %645 = bitcast float %195 to i32, !dbg !29
  %646 = and i32 %645, -2147483648, !dbg !29
  %647 = or i32 %646, %644, !dbg !29
  %648 = bitcast i32 %647 to float, !dbg !29
  br label %__nv_tanhf.exit475, !dbg !29

__internal_fmad.exit3.i464:                       ; preds = %__nv_tanhf.exit456
  %649 = fmul float %195, %195, !dbg !29
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i465 = icmp eq i32 %650, 0, !dbg !29
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %649, float 0xBFAAC795C0000000) #5, !dbg !29
  %652 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %649, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i466 = select i1 %.not1.i465, float %652, float %651, !dbg !29
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i467 = icmp eq i32 %653, 0, !dbg !29
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i466, float %649, float 0x3FC10B2820000000) #5, !dbg !29
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i466, float %649, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i468 = select i1 %.not2.i467, float %655, float %654, !dbg !29
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i469 = icmp eq i32 %656, 0, !dbg !29
  %657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i468, float %649, float 0xBFD5553DA0000000) #5, !dbg !29
  %658 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i468, float %649, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i470 = select i1 %.not3.i469, float %658, float %657, !dbg !29
  %659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i471 = icmp eq i32 %659, 0, !dbg !29
  %660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i470, float %649, float 0.000000e+00) #5, !dbg !29
  %661 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i470, float %649, float 0.000000e+00) #5, !dbg !29
  %.04.i472 = select i1 %.not4.i471, float %661, float %660, !dbg !29
  %662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i473 = icmp eq i32 %662, 0, !dbg !29
  %663 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i472, float %195, float %195) #5, !dbg !29
  %664 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i472, float %195, float %195) #5, !dbg !29
  %.02.i474 = select i1 %.not5.i473, float %664, float %663, !dbg !29
  br label %__nv_tanhf.exit475, !dbg !29

__nv_tanhf.exit475:                               ; preds = %__internal_fmad.exit1.i459, %__internal_fmad.exit3.i464
  %s.1.i463 = phi float [ %648, %__internal_fmad.exit1.i459 ], [ %.02.i474, %__internal_fmad.exit3.i464 ], !dbg !29
  %665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i476 = icmp eq i32 %665, 0, !dbg !29
  %666 = tail call float @llvm.nvvm.fabs.ftz.f(float %197) #5, !dbg !29
  %667 = tail call float @llvm.nvvm.fabs.f(float %197) #5, !dbg !29
  %.01.i477 = select i1 %.not.i476, float %667, float %666, !dbg !29
  %668 = fcmp ult float %.01.i477, 0x3FE3333340000000, !dbg !29
  br i1 %668, label %__internal_fmad.exit3.i483, label %__internal_fmad.exit1.i478, !dbg !29

__internal_fmad.exit1.i478:                       ; preds = %__nv_tanhf.exit475
  %669 = fmul float %.01.i477, 0x4007154760000000, !dbg !29
  %670 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %669) #5, !dbg !29
  %671 = fadd float %670, 1.000000e+00, !dbg !29
  %672 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %671) #6, !dbg !29, !srcloc !30
  %673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i479 = icmp eq i32 %673, 0, !dbg !29
  %674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %672, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %675 = tail call float @llvm.nvvm.fma.rn.f(float %672, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i480 = select i1 %.not6.i479, float %675, float %674, !dbg !29
  %676 = fcmp oge float %.01.i477, 0x4022059680000000, !dbg !29
  %s.0.i481 = select i1 %676, float 1.000000e+00, float %.03.i480, !dbg !29
  %677 = bitcast float %s.0.i481 to i32, !dbg !29
  %678 = bitcast float %197 to i32, !dbg !29
  %679 = and i32 %678, -2147483648, !dbg !29
  %680 = or i32 %679, %677, !dbg !29
  %681 = bitcast i32 %680 to float, !dbg !29
  br label %__nv_tanhf.exit494, !dbg !29

__internal_fmad.exit3.i483:                       ; preds = %__nv_tanhf.exit475
  %682 = fmul float %197, %197, !dbg !29
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i484 = icmp eq i32 %683, 0, !dbg !29
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %682, float 0xBFAAC795C0000000) #5, !dbg !29
  %685 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %682, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i485 = select i1 %.not1.i484, float %685, float %684, !dbg !29
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i486 = icmp eq i32 %686, 0, !dbg !29
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i485, float %682, float 0x3FC10B2820000000) #5, !dbg !29
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i485, float %682, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i487 = select i1 %.not2.i486, float %688, float %687, !dbg !29
  %689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i488 = icmp eq i32 %689, 0, !dbg !29
  %690 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i487, float %682, float 0xBFD5553DA0000000) #5, !dbg !29
  %691 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i487, float %682, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i489 = select i1 %.not3.i488, float %691, float %690, !dbg !29
  %692 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i490 = icmp eq i32 %692, 0, !dbg !29
  %693 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i489, float %682, float 0.000000e+00) #5, !dbg !29
  %694 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i489, float %682, float 0.000000e+00) #5, !dbg !29
  %.04.i491 = select i1 %.not4.i490, float %694, float %693, !dbg !29
  %695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i492 = icmp eq i32 %695, 0, !dbg !29
  %696 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i491, float %197, float %197) #5, !dbg !29
  %697 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i491, float %197, float %197) #5, !dbg !29
  %.02.i493 = select i1 %.not5.i492, float %697, float %696, !dbg !29
  br label %__nv_tanhf.exit494, !dbg !29

__nv_tanhf.exit494:                               ; preds = %__internal_fmad.exit1.i478, %__internal_fmad.exit3.i483
  %s.1.i482 = phi float [ %681, %__internal_fmad.exit1.i478 ], [ %.02.i493, %__internal_fmad.exit3.i483 ], !dbg !29
  %698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i495 = icmp eq i32 %698, 0, !dbg !29
  %699 = tail call float @llvm.nvvm.fabs.ftz.f(float %199) #5, !dbg !29
  %700 = tail call float @llvm.nvvm.fabs.f(float %199) #5, !dbg !29
  %.01.i496 = select i1 %.not.i495, float %700, float %699, !dbg !29
  %701 = fcmp ult float %.01.i496, 0x3FE3333340000000, !dbg !29
  br i1 %701, label %__internal_fmad.exit3.i502, label %__internal_fmad.exit1.i497, !dbg !29

__internal_fmad.exit1.i497:                       ; preds = %__nv_tanhf.exit494
  %702 = fmul float %.01.i496, 0x4007154760000000, !dbg !29
  %703 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %702) #5, !dbg !29
  %704 = fadd float %703, 1.000000e+00, !dbg !29
  %705 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %704) #6, !dbg !29, !srcloc !30
  %706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i498 = icmp eq i32 %706, 0, !dbg !29
  %707 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %705, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %708 = tail call float @llvm.nvvm.fma.rn.f(float %705, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i499 = select i1 %.not6.i498, float %708, float %707, !dbg !29
  %709 = fcmp oge float %.01.i496, 0x4022059680000000, !dbg !29
  %s.0.i500 = select i1 %709, float 1.000000e+00, float %.03.i499, !dbg !29
  %710 = bitcast float %s.0.i500 to i32, !dbg !29
  %711 = bitcast float %199 to i32, !dbg !29
  %712 = and i32 %711, -2147483648, !dbg !29
  %713 = or i32 %712, %710, !dbg !29
  %714 = bitcast i32 %713 to float, !dbg !29
  br label %__nv_tanhf.exit513, !dbg !29

__internal_fmad.exit3.i502:                       ; preds = %__nv_tanhf.exit494
  %715 = fmul float %199, %199, !dbg !29
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i503 = icmp eq i32 %716, 0, !dbg !29
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %715, float 0xBFAAC795C0000000) #5, !dbg !29
  %718 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %715, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i504 = select i1 %.not1.i503, float %718, float %717, !dbg !29
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i505 = icmp eq i32 %719, 0, !dbg !29
  %720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i504, float %715, float 0x3FC10B2820000000) #5, !dbg !29
  %721 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i504, float %715, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i506 = select i1 %.not2.i505, float %721, float %720, !dbg !29
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i507 = icmp eq i32 %722, 0, !dbg !29
  %723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i506, float %715, float 0xBFD5553DA0000000) #5, !dbg !29
  %724 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i506, float %715, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i508 = select i1 %.not3.i507, float %724, float %723, !dbg !29
  %725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i509 = icmp eq i32 %725, 0, !dbg !29
  %726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i508, float %715, float 0.000000e+00) #5, !dbg !29
  %727 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i508, float %715, float 0.000000e+00) #5, !dbg !29
  %.04.i510 = select i1 %.not4.i509, float %727, float %726, !dbg !29
  %728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i511 = icmp eq i32 %728, 0, !dbg !29
  %729 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i510, float %199, float %199) #5, !dbg !29
  %730 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i510, float %199, float %199) #5, !dbg !29
  %.02.i512 = select i1 %.not5.i511, float %730, float %729, !dbg !29
  br label %__nv_tanhf.exit513, !dbg !29

__nv_tanhf.exit513:                               ; preds = %__internal_fmad.exit1.i497, %__internal_fmad.exit3.i502
  %s.1.i501 = phi float [ %714, %__internal_fmad.exit1.i497 ], [ %.02.i512, %__internal_fmad.exit3.i502 ], !dbg !29
  %731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i514 = icmp eq i32 %731, 0, !dbg !29
  %732 = tail call float @llvm.nvvm.fabs.ftz.f(float %201) #5, !dbg !29
  %733 = tail call float @llvm.nvvm.fabs.f(float %201) #5, !dbg !29
  %.01.i515 = select i1 %.not.i514, float %733, float %732, !dbg !29
  %734 = fcmp ult float %.01.i515, 0x3FE3333340000000, !dbg !29
  br i1 %734, label %__internal_fmad.exit3.i521, label %__internal_fmad.exit1.i516, !dbg !29

__internal_fmad.exit1.i516:                       ; preds = %__nv_tanhf.exit513
  %735 = fmul float %.01.i515, 0x4007154760000000, !dbg !29
  %736 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %735) #5, !dbg !29
  %737 = fadd float %736, 1.000000e+00, !dbg !29
  %738 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %737) #6, !dbg !29, !srcloc !30
  %739 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i517 = icmp eq i32 %739, 0, !dbg !29
  %740 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %738, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %741 = tail call float @llvm.nvvm.fma.rn.f(float %738, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i518 = select i1 %.not6.i517, float %741, float %740, !dbg !29
  %742 = fcmp oge float %.01.i515, 0x4022059680000000, !dbg !29
  %s.0.i519 = select i1 %742, float 1.000000e+00, float %.03.i518, !dbg !29
  %743 = bitcast float %s.0.i519 to i32, !dbg !29
  %744 = bitcast float %201 to i32, !dbg !29
  %745 = and i32 %744, -2147483648, !dbg !29
  %746 = or i32 %745, %743, !dbg !29
  %747 = bitcast i32 %746 to float, !dbg !29
  br label %__nv_tanhf.exit532, !dbg !29

__internal_fmad.exit3.i521:                       ; preds = %__nv_tanhf.exit513
  %748 = fmul float %201, %201, !dbg !29
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i522 = icmp eq i32 %749, 0, !dbg !29
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %748, float 0xBFAAC795C0000000) #5, !dbg !29
  %751 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %748, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i523 = select i1 %.not1.i522, float %751, float %750, !dbg !29
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i524 = icmp eq i32 %752, 0, !dbg !29
  %753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i523, float %748, float 0x3FC10B2820000000) #5, !dbg !29
  %754 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i523, float %748, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i525 = select i1 %.not2.i524, float %754, float %753, !dbg !29
  %755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i526 = icmp eq i32 %755, 0, !dbg !29
  %756 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i525, float %748, float 0xBFD5553DA0000000) #5, !dbg !29
  %757 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i525, float %748, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i527 = select i1 %.not3.i526, float %757, float %756, !dbg !29
  %758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i528 = icmp eq i32 %758, 0, !dbg !29
  %759 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i527, float %748, float 0.000000e+00) #5, !dbg !29
  %760 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i527, float %748, float 0.000000e+00) #5, !dbg !29
  %.04.i529 = select i1 %.not4.i528, float %760, float %759, !dbg !29
  %761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i530 = icmp eq i32 %761, 0, !dbg !29
  %762 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i529, float %201, float %201) #5, !dbg !29
  %763 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i529, float %201, float %201) #5, !dbg !29
  %.02.i531 = select i1 %.not5.i530, float %763, float %762, !dbg !29
  br label %__nv_tanhf.exit532, !dbg !29

__nv_tanhf.exit532:                               ; preds = %__internal_fmad.exit1.i516, %__internal_fmad.exit3.i521
  %s.1.i520 = phi float [ %747, %__internal_fmad.exit1.i516 ], [ %.02.i531, %__internal_fmad.exit3.i521 ], !dbg !29
  %764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i533 = icmp eq i32 %764, 0, !dbg !29
  %765 = tail call float @llvm.nvvm.fabs.ftz.f(float %203) #5, !dbg !29
  %766 = tail call float @llvm.nvvm.fabs.f(float %203) #5, !dbg !29
  %.01.i534 = select i1 %.not.i533, float %766, float %765, !dbg !29
  %767 = fcmp ult float %.01.i534, 0x3FE3333340000000, !dbg !29
  br i1 %767, label %__internal_fmad.exit3.i540, label %__internal_fmad.exit1.i535, !dbg !29

__internal_fmad.exit1.i535:                       ; preds = %__nv_tanhf.exit532
  %768 = fmul float %.01.i534, 0x4007154760000000, !dbg !29
  %769 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %768) #5, !dbg !29
  %770 = fadd float %769, 1.000000e+00, !dbg !29
  %771 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %770) #6, !dbg !29, !srcloc !30
  %772 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i536 = icmp eq i32 %772, 0, !dbg !29
  %773 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %771, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %774 = tail call float @llvm.nvvm.fma.rn.f(float %771, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i537 = select i1 %.not6.i536, float %774, float %773, !dbg !29
  %775 = fcmp oge float %.01.i534, 0x4022059680000000, !dbg !29
  %s.0.i538 = select i1 %775, float 1.000000e+00, float %.03.i537, !dbg !29
  %776 = bitcast float %s.0.i538 to i32, !dbg !29
  %777 = bitcast float %203 to i32, !dbg !29
  %778 = and i32 %777, -2147483648, !dbg !29
  %779 = or i32 %778, %776, !dbg !29
  %780 = bitcast i32 %779 to float, !dbg !29
  br label %__nv_tanhf.exit551, !dbg !29

__internal_fmad.exit3.i540:                       ; preds = %__nv_tanhf.exit532
  %781 = fmul float %203, %203, !dbg !29
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i541 = icmp eq i32 %782, 0, !dbg !29
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %781, float 0xBFAAC795C0000000) #5, !dbg !29
  %784 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %781, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i542 = select i1 %.not1.i541, float %784, float %783, !dbg !29
  %785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i543 = icmp eq i32 %785, 0, !dbg !29
  %786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i542, float %781, float 0x3FC10B2820000000) #5, !dbg !29
  %787 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i542, float %781, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i544 = select i1 %.not2.i543, float %787, float %786, !dbg !29
  %788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i545 = icmp eq i32 %788, 0, !dbg !29
  %789 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i544, float %781, float 0xBFD5553DA0000000) #5, !dbg !29
  %790 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i544, float %781, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i546 = select i1 %.not3.i545, float %790, float %789, !dbg !29
  %791 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i547 = icmp eq i32 %791, 0, !dbg !29
  %792 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i546, float %781, float 0.000000e+00) #5, !dbg !29
  %793 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i546, float %781, float 0.000000e+00) #5, !dbg !29
  %.04.i548 = select i1 %.not4.i547, float %793, float %792, !dbg !29
  %794 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i549 = icmp eq i32 %794, 0, !dbg !29
  %795 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i548, float %203, float %203) #5, !dbg !29
  %796 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i548, float %203, float %203) #5, !dbg !29
  %.02.i550 = select i1 %.not5.i549, float %796, float %795, !dbg !29
  br label %__nv_tanhf.exit551, !dbg !29

__nv_tanhf.exit551:                               ; preds = %__internal_fmad.exit1.i535, %__internal_fmad.exit3.i540
  %s.1.i539 = phi float [ %780, %__internal_fmad.exit1.i535 ], [ %.02.i550, %__internal_fmad.exit3.i540 ], !dbg !29
  %797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i552 = icmp eq i32 %797, 0, !dbg !29
  %798 = tail call float @llvm.nvvm.fabs.ftz.f(float %205) #5, !dbg !29
  %799 = tail call float @llvm.nvvm.fabs.f(float %205) #5, !dbg !29
  %.01.i553 = select i1 %.not.i552, float %799, float %798, !dbg !29
  %800 = fcmp ult float %.01.i553, 0x3FE3333340000000, !dbg !29
  br i1 %800, label %__internal_fmad.exit3.i559, label %__internal_fmad.exit1.i554, !dbg !29

__internal_fmad.exit1.i554:                       ; preds = %__nv_tanhf.exit551
  %801 = fmul float %.01.i553, 0x4007154760000000, !dbg !29
  %802 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %801) #5, !dbg !29
  %803 = fadd float %802, 1.000000e+00, !dbg !29
  %804 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %803) #6, !dbg !29, !srcloc !30
  %805 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i555 = icmp eq i32 %805, 0, !dbg !29
  %806 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %804, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %807 = tail call float @llvm.nvvm.fma.rn.f(float %804, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i556 = select i1 %.not6.i555, float %807, float %806, !dbg !29
  %808 = fcmp oge float %.01.i553, 0x4022059680000000, !dbg !29
  %s.0.i557 = select i1 %808, float 1.000000e+00, float %.03.i556, !dbg !29
  %809 = bitcast float %s.0.i557 to i32, !dbg !29
  %810 = bitcast float %205 to i32, !dbg !29
  %811 = and i32 %810, -2147483648, !dbg !29
  %812 = or i32 %811, %809, !dbg !29
  %813 = bitcast i32 %812 to float, !dbg !29
  br label %__nv_tanhf.exit570, !dbg !29

__internal_fmad.exit3.i559:                       ; preds = %__nv_tanhf.exit551
  %814 = fmul float %205, %205, !dbg !29
  %815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i560 = icmp eq i32 %815, 0, !dbg !29
  %816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %814, float 0xBFAAC795C0000000) #5, !dbg !29
  %817 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %814, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i561 = select i1 %.not1.i560, float %817, float %816, !dbg !29
  %818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i562 = icmp eq i32 %818, 0, !dbg !29
  %819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i561, float %814, float 0x3FC10B2820000000) #5, !dbg !29
  %820 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i561, float %814, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i563 = select i1 %.not2.i562, float %820, float %819, !dbg !29
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i564 = icmp eq i32 %821, 0, !dbg !29
  %822 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i563, float %814, float 0xBFD5553DA0000000) #5, !dbg !29
  %823 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i563, float %814, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i565 = select i1 %.not3.i564, float %823, float %822, !dbg !29
  %824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i566 = icmp eq i32 %824, 0, !dbg !29
  %825 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i565, float %814, float 0.000000e+00) #5, !dbg !29
  %826 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i565, float %814, float 0.000000e+00) #5, !dbg !29
  %.04.i567 = select i1 %.not4.i566, float %826, float %825, !dbg !29
  %827 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i568 = icmp eq i32 %827, 0, !dbg !29
  %828 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i567, float %205, float %205) #5, !dbg !29
  %829 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i567, float %205, float %205) #5, !dbg !29
  %.02.i569 = select i1 %.not5.i568, float %829, float %828, !dbg !29
  br label %__nv_tanhf.exit570, !dbg !29

__nv_tanhf.exit570:                               ; preds = %__internal_fmad.exit1.i554, %__internal_fmad.exit3.i559
  %s.1.i558 = phi float [ %813, %__internal_fmad.exit1.i554 ], [ %.02.i569, %__internal_fmad.exit3.i559 ], !dbg !29
  %830 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i571 = icmp eq i32 %830, 0, !dbg !29
  %831 = tail call float @llvm.nvvm.fabs.ftz.f(float %207) #5, !dbg !29
  %832 = tail call float @llvm.nvvm.fabs.f(float %207) #5, !dbg !29
  %.01.i572 = select i1 %.not.i571, float %832, float %831, !dbg !29
  %833 = fcmp ult float %.01.i572, 0x3FE3333340000000, !dbg !29
  br i1 %833, label %__internal_fmad.exit3.i578, label %__internal_fmad.exit1.i573, !dbg !29

__internal_fmad.exit1.i573:                       ; preds = %__nv_tanhf.exit570
  %834 = fmul float %.01.i572, 0x4007154760000000, !dbg !29
  %835 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %834) #5, !dbg !29
  %836 = fadd float %835, 1.000000e+00, !dbg !29
  %837 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %836) #6, !dbg !29, !srcloc !30
  %838 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i574 = icmp eq i32 %838, 0, !dbg !29
  %839 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %837, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %840 = tail call float @llvm.nvvm.fma.rn.f(float %837, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i575 = select i1 %.not6.i574, float %840, float %839, !dbg !29
  %841 = fcmp oge float %.01.i572, 0x4022059680000000, !dbg !29
  %s.0.i576 = select i1 %841, float 1.000000e+00, float %.03.i575, !dbg !29
  %842 = bitcast float %s.0.i576 to i32, !dbg !29
  %843 = bitcast float %207 to i32, !dbg !29
  %844 = and i32 %843, -2147483648, !dbg !29
  %845 = or i32 %844, %842, !dbg !29
  %846 = bitcast i32 %845 to float, !dbg !29
  br label %__nv_tanhf.exit589, !dbg !29

__internal_fmad.exit3.i578:                       ; preds = %__nv_tanhf.exit570
  %847 = fmul float %207, %207, !dbg !29
  %848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i579 = icmp eq i32 %848, 0, !dbg !29
  %849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %847, float 0xBFAAC795C0000000) #5, !dbg !29
  %850 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %847, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i580 = select i1 %.not1.i579, float %850, float %849, !dbg !29
  %851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i581 = icmp eq i32 %851, 0, !dbg !29
  %852 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i580, float %847, float 0x3FC10B2820000000) #5, !dbg !29
  %853 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i580, float %847, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i582 = select i1 %.not2.i581, float %853, float %852, !dbg !29
  %854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i583 = icmp eq i32 %854, 0, !dbg !29
  %855 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i582, float %847, float 0xBFD5553DA0000000) #5, !dbg !29
  %856 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i582, float %847, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i584 = select i1 %.not3.i583, float %856, float %855, !dbg !29
  %857 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i585 = icmp eq i32 %857, 0, !dbg !29
  %858 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i584, float %847, float 0.000000e+00) #5, !dbg !29
  %859 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i584, float %847, float 0.000000e+00) #5, !dbg !29
  %.04.i586 = select i1 %.not4.i585, float %859, float %858, !dbg !29
  %860 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i587 = icmp eq i32 %860, 0, !dbg !29
  %861 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i586, float %207, float %207) #5, !dbg !29
  %862 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i586, float %207, float %207) #5, !dbg !29
  %.02.i588 = select i1 %.not5.i587, float %862, float %861, !dbg !29
  br label %__nv_tanhf.exit589, !dbg !29

__nv_tanhf.exit589:                               ; preds = %__internal_fmad.exit1.i573, %__internal_fmad.exit3.i578
  %s.1.i577 = phi float [ %846, %__internal_fmad.exit1.i573 ], [ %.02.i588, %__internal_fmad.exit3.i578 ], !dbg !29
  %863 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i590 = icmp eq i32 %863, 0, !dbg !29
  %864 = tail call float @llvm.nvvm.fabs.ftz.f(float %209) #5, !dbg !29
  %865 = tail call float @llvm.nvvm.fabs.f(float %209) #5, !dbg !29
  %.01.i591 = select i1 %.not.i590, float %865, float %864, !dbg !29
  %866 = fcmp ult float %.01.i591, 0x3FE3333340000000, !dbg !29
  br i1 %866, label %__internal_fmad.exit3.i597, label %__internal_fmad.exit1.i592, !dbg !29

__internal_fmad.exit1.i592:                       ; preds = %__nv_tanhf.exit589
  %867 = fmul float %.01.i591, 0x4007154760000000, !dbg !29
  %868 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %867) #5, !dbg !29
  %869 = fadd float %868, 1.000000e+00, !dbg !29
  %870 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %869) #6, !dbg !29, !srcloc !30
  %871 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i593 = icmp eq i32 %871, 0, !dbg !29
  %872 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %870, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %873 = tail call float @llvm.nvvm.fma.rn.f(float %870, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i594 = select i1 %.not6.i593, float %873, float %872, !dbg !29
  %874 = fcmp oge float %.01.i591, 0x4022059680000000, !dbg !29
  %s.0.i595 = select i1 %874, float 1.000000e+00, float %.03.i594, !dbg !29
  %875 = bitcast float %s.0.i595 to i32, !dbg !29
  %876 = bitcast float %209 to i32, !dbg !29
  %877 = and i32 %876, -2147483648, !dbg !29
  %878 = or i32 %877, %875, !dbg !29
  %879 = bitcast i32 %878 to float, !dbg !29
  br label %__nv_tanhf.exit608, !dbg !29

__internal_fmad.exit3.i597:                       ; preds = %__nv_tanhf.exit589
  %880 = fmul float %209, %209, !dbg !29
  %881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i598 = icmp eq i32 %881, 0, !dbg !29
  %882 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %880, float 0xBFAAC795C0000000) #5, !dbg !29
  %883 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %880, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i599 = select i1 %.not1.i598, float %883, float %882, !dbg !29
  %884 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i600 = icmp eq i32 %884, 0, !dbg !29
  %885 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i599, float %880, float 0x3FC10B2820000000) #5, !dbg !29
  %886 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i599, float %880, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i601 = select i1 %.not2.i600, float %886, float %885, !dbg !29
  %887 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i602 = icmp eq i32 %887, 0, !dbg !29
  %888 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i601, float %880, float 0xBFD5553DA0000000) #5, !dbg !29
  %889 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i601, float %880, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i603 = select i1 %.not3.i602, float %889, float %888, !dbg !29
  %890 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i604 = icmp eq i32 %890, 0, !dbg !29
  %891 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i603, float %880, float 0.000000e+00) #5, !dbg !29
  %892 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i603, float %880, float 0.000000e+00) #5, !dbg !29
  %.04.i605 = select i1 %.not4.i604, float %892, float %891, !dbg !29
  %893 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i606 = icmp eq i32 %893, 0, !dbg !29
  %894 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i605, float %209, float %209) #5, !dbg !29
  %895 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i605, float %209, float %209) #5, !dbg !29
  %.02.i607 = select i1 %.not5.i606, float %895, float %894, !dbg !29
  br label %__nv_tanhf.exit608, !dbg !29

__nv_tanhf.exit608:                               ; preds = %__internal_fmad.exit1.i592, %__internal_fmad.exit3.i597
  %s.1.i596 = phi float [ %879, %__internal_fmad.exit1.i592 ], [ %.02.i607, %__internal_fmad.exit3.i597 ], !dbg !29
  %896 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i609 = icmp eq i32 %896, 0, !dbg !29
  %897 = tail call float @llvm.nvvm.fabs.ftz.f(float %211) #5, !dbg !29
  %898 = tail call float @llvm.nvvm.fabs.f(float %211) #5, !dbg !29
  %.01.i610 = select i1 %.not.i609, float %898, float %897, !dbg !29
  %899 = fcmp ult float %.01.i610, 0x3FE3333340000000, !dbg !29
  br i1 %899, label %__internal_fmad.exit3.i616, label %__internal_fmad.exit1.i611, !dbg !29

__internal_fmad.exit1.i611:                       ; preds = %__nv_tanhf.exit608
  %900 = fmul float %.01.i610, 0x4007154760000000, !dbg !29
  %901 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %900) #5, !dbg !29
  %902 = fadd float %901, 1.000000e+00, !dbg !29
  %903 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %902) #6, !dbg !29, !srcloc !30
  %904 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i612 = icmp eq i32 %904, 0, !dbg !29
  %905 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %903, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %906 = tail call float @llvm.nvvm.fma.rn.f(float %903, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i613 = select i1 %.not6.i612, float %906, float %905, !dbg !29
  %907 = fcmp oge float %.01.i610, 0x4022059680000000, !dbg !29
  %s.0.i614 = select i1 %907, float 1.000000e+00, float %.03.i613, !dbg !29
  %908 = bitcast float %s.0.i614 to i32, !dbg !29
  %909 = bitcast float %211 to i32, !dbg !29
  %910 = and i32 %909, -2147483648, !dbg !29
  %911 = or i32 %910, %908, !dbg !29
  %912 = bitcast i32 %911 to float, !dbg !29
  br label %__nv_tanhf.exit627, !dbg !29

__internal_fmad.exit3.i616:                       ; preds = %__nv_tanhf.exit608
  %913 = fmul float %211, %211, !dbg !29
  %914 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i617 = icmp eq i32 %914, 0, !dbg !29
  %915 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %913, float 0xBFAAC795C0000000) #5, !dbg !29
  %916 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %913, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i618 = select i1 %.not1.i617, float %916, float %915, !dbg !29
  %917 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i619 = icmp eq i32 %917, 0, !dbg !29
  %918 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i618, float %913, float 0x3FC10B2820000000) #5, !dbg !29
  %919 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i618, float %913, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i620 = select i1 %.not2.i619, float %919, float %918, !dbg !29
  %920 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i621 = icmp eq i32 %920, 0, !dbg !29
  %921 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i620, float %913, float 0xBFD5553DA0000000) #5, !dbg !29
  %922 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i620, float %913, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i622 = select i1 %.not3.i621, float %922, float %921, !dbg !29
  %923 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i623 = icmp eq i32 %923, 0, !dbg !29
  %924 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i622, float %913, float 0.000000e+00) #5, !dbg !29
  %925 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i622, float %913, float 0.000000e+00) #5, !dbg !29
  %.04.i624 = select i1 %.not4.i623, float %925, float %924, !dbg !29
  %926 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i625 = icmp eq i32 %926, 0, !dbg !29
  %927 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i624, float %211, float %211) #5, !dbg !29
  %928 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i624, float %211, float %211) #5, !dbg !29
  %.02.i626 = select i1 %.not5.i625, float %928, float %927, !dbg !29
  br label %__nv_tanhf.exit627, !dbg !29

__nv_tanhf.exit627:                               ; preds = %__internal_fmad.exit1.i611, %__internal_fmad.exit3.i616
  %s.1.i615 = phi float [ %912, %__internal_fmad.exit1.i611 ], [ %.02.i626, %__internal_fmad.exit3.i616 ], !dbg !29
  %929 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i628 = icmp eq i32 %929, 0, !dbg !29
  %930 = tail call float @llvm.nvvm.fabs.ftz.f(float %213) #5, !dbg !29
  %931 = tail call float @llvm.nvvm.fabs.f(float %213) #5, !dbg !29
  %.01.i629 = select i1 %.not.i628, float %931, float %930, !dbg !29
  %932 = fcmp ult float %.01.i629, 0x3FE3333340000000, !dbg !29
  br i1 %932, label %__internal_fmad.exit3.i635, label %__internal_fmad.exit1.i630, !dbg !29

__internal_fmad.exit1.i630:                       ; preds = %__nv_tanhf.exit627
  %933 = fmul float %.01.i629, 0x4007154760000000, !dbg !29
  %934 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %933) #5, !dbg !29
  %935 = fadd float %934, 1.000000e+00, !dbg !29
  %936 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %935) #6, !dbg !29, !srcloc !30
  %937 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i631 = icmp eq i32 %937, 0, !dbg !29
  %938 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %936, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %939 = tail call float @llvm.nvvm.fma.rn.f(float %936, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i632 = select i1 %.not6.i631, float %939, float %938, !dbg !29
  %940 = fcmp oge float %.01.i629, 0x4022059680000000, !dbg !29
  %s.0.i633 = select i1 %940, float 1.000000e+00, float %.03.i632, !dbg !29
  %941 = bitcast float %s.0.i633 to i32, !dbg !29
  %942 = bitcast float %213 to i32, !dbg !29
  %943 = and i32 %942, -2147483648, !dbg !29
  %944 = or i32 %943, %941, !dbg !29
  %945 = bitcast i32 %944 to float, !dbg !29
  br label %__nv_tanhf.exit646, !dbg !29

__internal_fmad.exit3.i635:                       ; preds = %__nv_tanhf.exit627
  %946 = fmul float %213, %213, !dbg !29
  %947 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i636 = icmp eq i32 %947, 0, !dbg !29
  %948 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %946, float 0xBFAAC795C0000000) #5, !dbg !29
  %949 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %946, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i637 = select i1 %.not1.i636, float %949, float %948, !dbg !29
  %950 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i638 = icmp eq i32 %950, 0, !dbg !29
  %951 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i637, float %946, float 0x3FC10B2820000000) #5, !dbg !29
  %952 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i637, float %946, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i639 = select i1 %.not2.i638, float %952, float %951, !dbg !29
  %953 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i640 = icmp eq i32 %953, 0, !dbg !29
  %954 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i639, float %946, float 0xBFD5553DA0000000) #5, !dbg !29
  %955 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i639, float %946, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i641 = select i1 %.not3.i640, float %955, float %954, !dbg !29
  %956 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i642 = icmp eq i32 %956, 0, !dbg !29
  %957 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i641, float %946, float 0.000000e+00) #5, !dbg !29
  %958 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i641, float %946, float 0.000000e+00) #5, !dbg !29
  %.04.i643 = select i1 %.not4.i642, float %958, float %957, !dbg !29
  %959 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i644 = icmp eq i32 %959, 0, !dbg !29
  %960 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i643, float %213, float %213) #5, !dbg !29
  %961 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i643, float %213, float %213) #5, !dbg !29
  %.02.i645 = select i1 %.not5.i644, float %961, float %960, !dbg !29
  br label %__nv_tanhf.exit646, !dbg !29

__nv_tanhf.exit646:                               ; preds = %__internal_fmad.exit1.i630, %__internal_fmad.exit3.i635
  %s.1.i634 = phi float [ %945, %__internal_fmad.exit1.i630 ], [ %.02.i645, %__internal_fmad.exit3.i635 ], !dbg !29
  %962 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i647 = icmp eq i32 %962, 0, !dbg !29
  %963 = tail call float @llvm.nvvm.fabs.ftz.f(float %215) #5, !dbg !29
  %964 = tail call float @llvm.nvvm.fabs.f(float %215) #5, !dbg !29
  %.01.i648 = select i1 %.not.i647, float %964, float %963, !dbg !29
  %965 = fcmp ult float %.01.i648, 0x3FE3333340000000, !dbg !29
  br i1 %965, label %__internal_fmad.exit3.i654, label %__internal_fmad.exit1.i649, !dbg !29

__internal_fmad.exit1.i649:                       ; preds = %__nv_tanhf.exit646
  %966 = fmul float %.01.i648, 0x4007154760000000, !dbg !29
  %967 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %966) #5, !dbg !29
  %968 = fadd float %967, 1.000000e+00, !dbg !29
  %969 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %968) #6, !dbg !29, !srcloc !30
  %970 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i650 = icmp eq i32 %970, 0, !dbg !29
  %971 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %969, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %972 = tail call float @llvm.nvvm.fma.rn.f(float %969, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i651 = select i1 %.not6.i650, float %972, float %971, !dbg !29
  %973 = fcmp oge float %.01.i648, 0x4022059680000000, !dbg !29
  %s.0.i652 = select i1 %973, float 1.000000e+00, float %.03.i651, !dbg !29
  %974 = bitcast float %s.0.i652 to i32, !dbg !29
  %975 = bitcast float %215 to i32, !dbg !29
  %976 = and i32 %975, -2147483648, !dbg !29
  %977 = or i32 %976, %974, !dbg !29
  %978 = bitcast i32 %977 to float, !dbg !29
  br label %__nv_tanhf.exit665, !dbg !29

__internal_fmad.exit3.i654:                       ; preds = %__nv_tanhf.exit646
  %979 = fmul float %215, %215, !dbg !29
  %980 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i655 = icmp eq i32 %980, 0, !dbg !29
  %981 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %979, float 0xBFAAC795C0000000) #5, !dbg !29
  %982 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %979, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i656 = select i1 %.not1.i655, float %982, float %981, !dbg !29
  %983 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i657 = icmp eq i32 %983, 0, !dbg !29
  %984 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i656, float %979, float 0x3FC10B2820000000) #5, !dbg !29
  %985 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i656, float %979, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i658 = select i1 %.not2.i657, float %985, float %984, !dbg !29
  %986 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i659 = icmp eq i32 %986, 0, !dbg !29
  %987 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i658, float %979, float 0xBFD5553DA0000000) #5, !dbg !29
  %988 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i658, float %979, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i660 = select i1 %.not3.i659, float %988, float %987, !dbg !29
  %989 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i661 = icmp eq i32 %989, 0, !dbg !29
  %990 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i660, float %979, float 0.000000e+00) #5, !dbg !29
  %991 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i660, float %979, float 0.000000e+00) #5, !dbg !29
  %.04.i662 = select i1 %.not4.i661, float %991, float %990, !dbg !29
  %992 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i663 = icmp eq i32 %992, 0, !dbg !29
  %993 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i662, float %215, float %215) #5, !dbg !29
  %994 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i662, float %215, float %215) #5, !dbg !29
  %.02.i664 = select i1 %.not5.i663, float %994, float %993, !dbg !29
  br label %__nv_tanhf.exit665, !dbg !29

__nv_tanhf.exit665:                               ; preds = %__internal_fmad.exit1.i649, %__internal_fmad.exit3.i654
  %s.1.i653 = phi float [ %978, %__internal_fmad.exit1.i649 ], [ %.02.i664, %__internal_fmad.exit3.i654 ], !dbg !29
  %995 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i666 = icmp eq i32 %995, 0, !dbg !29
  %996 = tail call float @llvm.nvvm.fabs.ftz.f(float %217) #5, !dbg !29
  %997 = tail call float @llvm.nvvm.fabs.f(float %217) #5, !dbg !29
  %.01.i667 = select i1 %.not.i666, float %997, float %996, !dbg !29
  %998 = fcmp ult float %.01.i667, 0x3FE3333340000000, !dbg !29
  br i1 %998, label %__internal_fmad.exit3.i673, label %__internal_fmad.exit1.i668, !dbg !29

__internal_fmad.exit1.i668:                       ; preds = %__nv_tanhf.exit665
  %999 = fmul float %.01.i667, 0x4007154760000000, !dbg !29
  %1000 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %999) #5, !dbg !29
  %1001 = fadd float %1000, 1.000000e+00, !dbg !29
  %1002 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1001) #6, !dbg !29, !srcloc !30
  %1003 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i669 = icmp eq i32 %1003, 0, !dbg !29
  %1004 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1002, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1005 = tail call float @llvm.nvvm.fma.rn.f(float %1002, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i670 = select i1 %.not6.i669, float %1005, float %1004, !dbg !29
  %1006 = fcmp oge float %.01.i667, 0x4022059680000000, !dbg !29
  %s.0.i671 = select i1 %1006, float 1.000000e+00, float %.03.i670, !dbg !29
  %1007 = bitcast float %s.0.i671 to i32, !dbg !29
  %1008 = bitcast float %217 to i32, !dbg !29
  %1009 = and i32 %1008, -2147483648, !dbg !29
  %1010 = or i32 %1009, %1007, !dbg !29
  %1011 = bitcast i32 %1010 to float, !dbg !29
  br label %__nv_tanhf.exit684, !dbg !29

__internal_fmad.exit3.i673:                       ; preds = %__nv_tanhf.exit665
  %1012 = fmul float %217, %217, !dbg !29
  %1013 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i674 = icmp eq i32 %1013, 0, !dbg !29
  %1014 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1012, float 0xBFAAC795C0000000) #5, !dbg !29
  %1015 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1012, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i675 = select i1 %.not1.i674, float %1015, float %1014, !dbg !29
  %1016 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i676 = icmp eq i32 %1016, 0, !dbg !29
  %1017 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i675, float %1012, float 0x3FC10B2820000000) #5, !dbg !29
  %1018 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i675, float %1012, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i677 = select i1 %.not2.i676, float %1018, float %1017, !dbg !29
  %1019 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i678 = icmp eq i32 %1019, 0, !dbg !29
  %1020 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i677, float %1012, float 0xBFD5553DA0000000) #5, !dbg !29
  %1021 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i677, float %1012, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i679 = select i1 %.not3.i678, float %1021, float %1020, !dbg !29
  %1022 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i680 = icmp eq i32 %1022, 0, !dbg !29
  %1023 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i679, float %1012, float 0.000000e+00) #5, !dbg !29
  %1024 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i679, float %1012, float 0.000000e+00) #5, !dbg !29
  %.04.i681 = select i1 %.not4.i680, float %1024, float %1023, !dbg !29
  %1025 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i682 = icmp eq i32 %1025, 0, !dbg !29
  %1026 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i681, float %217, float %217) #5, !dbg !29
  %1027 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i681, float %217, float %217) #5, !dbg !29
  %.02.i683 = select i1 %.not5.i682, float %1027, float %1026, !dbg !29
  br label %__nv_tanhf.exit684, !dbg !29

__nv_tanhf.exit684:                               ; preds = %__internal_fmad.exit1.i668, %__internal_fmad.exit3.i673
  %s.1.i672 = phi float [ %1011, %__internal_fmad.exit1.i668 ], [ %.02.i683, %__internal_fmad.exit3.i673 ], !dbg !29
  %1028 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i685 = icmp eq i32 %1028, 0, !dbg !29
  %1029 = tail call float @llvm.nvvm.fabs.ftz.f(float %219) #5, !dbg !29
  %1030 = tail call float @llvm.nvvm.fabs.f(float %219) #5, !dbg !29
  %.01.i686 = select i1 %.not.i685, float %1030, float %1029, !dbg !29
  %1031 = fcmp ult float %.01.i686, 0x3FE3333340000000, !dbg !29
  br i1 %1031, label %__internal_fmad.exit3.i692, label %__internal_fmad.exit1.i687, !dbg !29

__internal_fmad.exit1.i687:                       ; preds = %__nv_tanhf.exit684
  %1032 = fmul float %.01.i686, 0x4007154760000000, !dbg !29
  %1033 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1032) #5, !dbg !29
  %1034 = fadd float %1033, 1.000000e+00, !dbg !29
  %1035 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1034) #6, !dbg !29, !srcloc !30
  %1036 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i688 = icmp eq i32 %1036, 0, !dbg !29
  %1037 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1035, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1038 = tail call float @llvm.nvvm.fma.rn.f(float %1035, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i689 = select i1 %.not6.i688, float %1038, float %1037, !dbg !29
  %1039 = fcmp oge float %.01.i686, 0x4022059680000000, !dbg !29
  %s.0.i690 = select i1 %1039, float 1.000000e+00, float %.03.i689, !dbg !29
  %1040 = bitcast float %s.0.i690 to i32, !dbg !29
  %1041 = bitcast float %219 to i32, !dbg !29
  %1042 = and i32 %1041, -2147483648, !dbg !29
  %1043 = or i32 %1042, %1040, !dbg !29
  %1044 = bitcast i32 %1043 to float, !dbg !29
  br label %__nv_tanhf.exit703, !dbg !29

__internal_fmad.exit3.i692:                       ; preds = %__nv_tanhf.exit684
  %1045 = fmul float %219, %219, !dbg !29
  %1046 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i693 = icmp eq i32 %1046, 0, !dbg !29
  %1047 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1045, float 0xBFAAC795C0000000) #5, !dbg !29
  %1048 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1045, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i694 = select i1 %.not1.i693, float %1048, float %1047, !dbg !29
  %1049 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i695 = icmp eq i32 %1049, 0, !dbg !29
  %1050 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i694, float %1045, float 0x3FC10B2820000000) #5, !dbg !29
  %1051 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i694, float %1045, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i696 = select i1 %.not2.i695, float %1051, float %1050, !dbg !29
  %1052 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i697 = icmp eq i32 %1052, 0, !dbg !29
  %1053 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i696, float %1045, float 0xBFD5553DA0000000) #5, !dbg !29
  %1054 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i696, float %1045, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i698 = select i1 %.not3.i697, float %1054, float %1053, !dbg !29
  %1055 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i699 = icmp eq i32 %1055, 0, !dbg !29
  %1056 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i698, float %1045, float 0.000000e+00) #5, !dbg !29
  %1057 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i698, float %1045, float 0.000000e+00) #5, !dbg !29
  %.04.i700 = select i1 %.not4.i699, float %1057, float %1056, !dbg !29
  %1058 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i701 = icmp eq i32 %1058, 0, !dbg !29
  %1059 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i700, float %219, float %219) #5, !dbg !29
  %1060 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i700, float %219, float %219) #5, !dbg !29
  %.02.i702 = select i1 %.not5.i701, float %1060, float %1059, !dbg !29
  br label %__nv_tanhf.exit703, !dbg !29

__nv_tanhf.exit703:                               ; preds = %__internal_fmad.exit1.i687, %__internal_fmad.exit3.i692
  %s.1.i691 = phi float [ %1044, %__internal_fmad.exit1.i687 ], [ %.02.i702, %__internal_fmad.exit3.i692 ], !dbg !29
  %1061 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i704 = icmp eq i32 %1061, 0, !dbg !29
  %1062 = tail call float @llvm.nvvm.fabs.ftz.f(float %221) #5, !dbg !29
  %1063 = tail call float @llvm.nvvm.fabs.f(float %221) #5, !dbg !29
  %.01.i705 = select i1 %.not.i704, float %1063, float %1062, !dbg !29
  %1064 = fcmp ult float %.01.i705, 0x3FE3333340000000, !dbg !29
  br i1 %1064, label %__internal_fmad.exit3.i711, label %__internal_fmad.exit1.i706, !dbg !29

__internal_fmad.exit1.i706:                       ; preds = %__nv_tanhf.exit703
  %1065 = fmul float %.01.i705, 0x4007154760000000, !dbg !29
  %1066 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1065) #5, !dbg !29
  %1067 = fadd float %1066, 1.000000e+00, !dbg !29
  %1068 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1067) #6, !dbg !29, !srcloc !30
  %1069 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i707 = icmp eq i32 %1069, 0, !dbg !29
  %1070 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1068, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1071 = tail call float @llvm.nvvm.fma.rn.f(float %1068, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i708 = select i1 %.not6.i707, float %1071, float %1070, !dbg !29
  %1072 = fcmp oge float %.01.i705, 0x4022059680000000, !dbg !29
  %s.0.i709 = select i1 %1072, float 1.000000e+00, float %.03.i708, !dbg !29
  %1073 = bitcast float %s.0.i709 to i32, !dbg !29
  %1074 = bitcast float %221 to i32, !dbg !29
  %1075 = and i32 %1074, -2147483648, !dbg !29
  %1076 = or i32 %1075, %1073, !dbg !29
  %1077 = bitcast i32 %1076 to float, !dbg !29
  br label %__nv_tanhf.exit722, !dbg !29

__internal_fmad.exit3.i711:                       ; preds = %__nv_tanhf.exit703
  %1078 = fmul float %221, %221, !dbg !29
  %1079 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i712 = icmp eq i32 %1079, 0, !dbg !29
  %1080 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1078, float 0xBFAAC795C0000000) #5, !dbg !29
  %1081 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1078, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i713 = select i1 %.not1.i712, float %1081, float %1080, !dbg !29
  %1082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i714 = icmp eq i32 %1082, 0, !dbg !29
  %1083 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i713, float %1078, float 0x3FC10B2820000000) #5, !dbg !29
  %1084 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i713, float %1078, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i715 = select i1 %.not2.i714, float %1084, float %1083, !dbg !29
  %1085 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i716 = icmp eq i32 %1085, 0, !dbg !29
  %1086 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i715, float %1078, float 0xBFD5553DA0000000) #5, !dbg !29
  %1087 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i715, float %1078, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i717 = select i1 %.not3.i716, float %1087, float %1086, !dbg !29
  %1088 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i718 = icmp eq i32 %1088, 0, !dbg !29
  %1089 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i717, float %1078, float 0.000000e+00) #5, !dbg !29
  %1090 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i717, float %1078, float 0.000000e+00) #5, !dbg !29
  %.04.i719 = select i1 %.not4.i718, float %1090, float %1089, !dbg !29
  %1091 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i720 = icmp eq i32 %1091, 0, !dbg !29
  %1092 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i719, float %221, float %221) #5, !dbg !29
  %1093 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i719, float %221, float %221) #5, !dbg !29
  %.02.i721 = select i1 %.not5.i720, float %1093, float %1092, !dbg !29
  br label %__nv_tanhf.exit722, !dbg !29

__nv_tanhf.exit722:                               ; preds = %__internal_fmad.exit1.i706, %__internal_fmad.exit3.i711
  %s.1.i710 = phi float [ %1077, %__internal_fmad.exit1.i706 ], [ %.02.i721, %__internal_fmad.exit3.i711 ], !dbg !29
  %1094 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i723 = icmp eq i32 %1094, 0, !dbg !29
  %1095 = tail call float @llvm.nvvm.fabs.ftz.f(float %223) #5, !dbg !29
  %1096 = tail call float @llvm.nvvm.fabs.f(float %223) #5, !dbg !29
  %.01.i724 = select i1 %.not.i723, float %1096, float %1095, !dbg !29
  %1097 = fcmp ult float %.01.i724, 0x3FE3333340000000, !dbg !29
  br i1 %1097, label %__internal_fmad.exit3.i730, label %__internal_fmad.exit1.i725, !dbg !29

__internal_fmad.exit1.i725:                       ; preds = %__nv_tanhf.exit722
  %1098 = fmul float %.01.i724, 0x4007154760000000, !dbg !29
  %1099 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1098) #5, !dbg !29
  %1100 = fadd float %1099, 1.000000e+00, !dbg !29
  %1101 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1100) #6, !dbg !29, !srcloc !30
  %1102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i726 = icmp eq i32 %1102, 0, !dbg !29
  %1103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1101, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1104 = tail call float @llvm.nvvm.fma.rn.f(float %1101, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i727 = select i1 %.not6.i726, float %1104, float %1103, !dbg !29
  %1105 = fcmp oge float %.01.i724, 0x4022059680000000, !dbg !29
  %s.0.i728 = select i1 %1105, float 1.000000e+00, float %.03.i727, !dbg !29
  %1106 = bitcast float %s.0.i728 to i32, !dbg !29
  %1107 = bitcast float %223 to i32, !dbg !29
  %1108 = and i32 %1107, -2147483648, !dbg !29
  %1109 = or i32 %1108, %1106, !dbg !29
  %1110 = bitcast i32 %1109 to float, !dbg !29
  br label %__nv_tanhf.exit741, !dbg !29

__internal_fmad.exit3.i730:                       ; preds = %__nv_tanhf.exit722
  %1111 = fmul float %223, %223, !dbg !29
  %1112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i731 = icmp eq i32 %1112, 0, !dbg !29
  %1113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1111, float 0xBFAAC795C0000000) #5, !dbg !29
  %1114 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1111, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i732 = select i1 %.not1.i731, float %1114, float %1113, !dbg !29
  %1115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i733 = icmp eq i32 %1115, 0, !dbg !29
  %1116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i732, float %1111, float 0x3FC10B2820000000) #5, !dbg !29
  %1117 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i732, float %1111, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i734 = select i1 %.not2.i733, float %1117, float %1116, !dbg !29
  %1118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i735 = icmp eq i32 %1118, 0, !dbg !29
  %1119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i734, float %1111, float 0xBFD5553DA0000000) #5, !dbg !29
  %1120 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i734, float %1111, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i736 = select i1 %.not3.i735, float %1120, float %1119, !dbg !29
  %1121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i737 = icmp eq i32 %1121, 0, !dbg !29
  %1122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i736, float %1111, float 0.000000e+00) #5, !dbg !29
  %1123 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i736, float %1111, float 0.000000e+00) #5, !dbg !29
  %.04.i738 = select i1 %.not4.i737, float %1123, float %1122, !dbg !29
  %1124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i739 = icmp eq i32 %1124, 0, !dbg !29
  %1125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i738, float %223, float %223) #5, !dbg !29
  %1126 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i738, float %223, float %223) #5, !dbg !29
  %.02.i740 = select i1 %.not5.i739, float %1126, float %1125, !dbg !29
  br label %__nv_tanhf.exit741, !dbg !29

__nv_tanhf.exit741:                               ; preds = %__internal_fmad.exit1.i725, %__internal_fmad.exit3.i730
  %s.1.i729 = phi float [ %1110, %__internal_fmad.exit1.i725 ], [ %.02.i740, %__internal_fmad.exit3.i730 ], !dbg !29
  %1127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i742 = icmp eq i32 %1127, 0, !dbg !29
  %1128 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #5, !dbg !29
  %1129 = tail call float @llvm.nvvm.fabs.f(float %225) #5, !dbg !29
  %.01.i743 = select i1 %.not.i742, float %1129, float %1128, !dbg !29
  %1130 = fcmp ult float %.01.i743, 0x3FE3333340000000, !dbg !29
  br i1 %1130, label %__internal_fmad.exit3.i749, label %__internal_fmad.exit1.i744, !dbg !29

__internal_fmad.exit1.i744:                       ; preds = %__nv_tanhf.exit741
  %1131 = fmul float %.01.i743, 0x4007154760000000, !dbg !29
  %1132 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1131) #5, !dbg !29
  %1133 = fadd float %1132, 1.000000e+00, !dbg !29
  %1134 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1133) #6, !dbg !29, !srcloc !30
  %1135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i745 = icmp eq i32 %1135, 0, !dbg !29
  %1136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1134, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1137 = tail call float @llvm.nvvm.fma.rn.f(float %1134, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i746 = select i1 %.not6.i745, float %1137, float %1136, !dbg !29
  %1138 = fcmp oge float %.01.i743, 0x4022059680000000, !dbg !29
  %s.0.i747 = select i1 %1138, float 1.000000e+00, float %.03.i746, !dbg !29
  %1139 = bitcast float %s.0.i747 to i32, !dbg !29
  %1140 = bitcast float %225 to i32, !dbg !29
  %1141 = and i32 %1140, -2147483648, !dbg !29
  %1142 = or i32 %1141, %1139, !dbg !29
  %1143 = bitcast i32 %1142 to float, !dbg !29
  br label %__nv_tanhf.exit760, !dbg !29

__internal_fmad.exit3.i749:                       ; preds = %__nv_tanhf.exit741
  %1144 = fmul float %225, %225, !dbg !29
  %1145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i750 = icmp eq i32 %1145, 0, !dbg !29
  %1146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1144, float 0xBFAAC795C0000000) #5, !dbg !29
  %1147 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1144, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i751 = select i1 %.not1.i750, float %1147, float %1146, !dbg !29
  %1148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i752 = icmp eq i32 %1148, 0, !dbg !29
  %1149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i751, float %1144, float 0x3FC10B2820000000) #5, !dbg !29
  %1150 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i751, float %1144, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i753 = select i1 %.not2.i752, float %1150, float %1149, !dbg !29
  %1151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i754 = icmp eq i32 %1151, 0, !dbg !29
  %1152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i753, float %1144, float 0xBFD5553DA0000000) #5, !dbg !29
  %1153 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i753, float %1144, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i755 = select i1 %.not3.i754, float %1153, float %1152, !dbg !29
  %1154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i756 = icmp eq i32 %1154, 0, !dbg !29
  %1155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i755, float %1144, float 0.000000e+00) #5, !dbg !29
  %1156 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i755, float %1144, float 0.000000e+00) #5, !dbg !29
  %.04.i757 = select i1 %.not4.i756, float %1156, float %1155, !dbg !29
  %1157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i758 = icmp eq i32 %1157, 0, !dbg !29
  %1158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i757, float %225, float %225) #5, !dbg !29
  %1159 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i757, float %225, float %225) #5, !dbg !29
  %.02.i759 = select i1 %.not5.i758, float %1159, float %1158, !dbg !29
  br label %__nv_tanhf.exit760, !dbg !29

__nv_tanhf.exit760:                               ; preds = %__internal_fmad.exit1.i744, %__internal_fmad.exit3.i749
  %s.1.i748 = phi float [ %1143, %__internal_fmad.exit1.i744 ], [ %.02.i759, %__internal_fmad.exit3.i749 ], !dbg !29
  %1160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i761 = icmp eq i32 %1160, 0, !dbg !29
  %1161 = tail call float @llvm.nvvm.fabs.ftz.f(float %227) #5, !dbg !29
  %1162 = tail call float @llvm.nvvm.fabs.f(float %227) #5, !dbg !29
  %.01.i762 = select i1 %.not.i761, float %1162, float %1161, !dbg !29
  %1163 = fcmp ult float %.01.i762, 0x3FE3333340000000, !dbg !29
  br i1 %1163, label %__internal_fmad.exit3.i768, label %__internal_fmad.exit1.i763, !dbg !29

__internal_fmad.exit1.i763:                       ; preds = %__nv_tanhf.exit760
  %1164 = fmul float %.01.i762, 0x4007154760000000, !dbg !29
  %1165 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1164) #5, !dbg !29
  %1166 = fadd float %1165, 1.000000e+00, !dbg !29
  %1167 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1166) #6, !dbg !29, !srcloc !30
  %1168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i764 = icmp eq i32 %1168, 0, !dbg !29
  %1169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1167, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1170 = tail call float @llvm.nvvm.fma.rn.f(float %1167, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i765 = select i1 %.not6.i764, float %1170, float %1169, !dbg !29
  %1171 = fcmp oge float %.01.i762, 0x4022059680000000, !dbg !29
  %s.0.i766 = select i1 %1171, float 1.000000e+00, float %.03.i765, !dbg !29
  %1172 = bitcast float %s.0.i766 to i32, !dbg !29
  %1173 = bitcast float %227 to i32, !dbg !29
  %1174 = and i32 %1173, -2147483648, !dbg !29
  %1175 = or i32 %1174, %1172, !dbg !29
  %1176 = bitcast i32 %1175 to float, !dbg !29
  br label %__nv_tanhf.exit779, !dbg !29

__internal_fmad.exit3.i768:                       ; preds = %__nv_tanhf.exit760
  %1177 = fmul float %227, %227, !dbg !29
  %1178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i769 = icmp eq i32 %1178, 0, !dbg !29
  %1179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1177, float 0xBFAAC795C0000000) #5, !dbg !29
  %1180 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1177, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i770 = select i1 %.not1.i769, float %1180, float %1179, !dbg !29
  %1181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i771 = icmp eq i32 %1181, 0, !dbg !29
  %1182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i770, float %1177, float 0x3FC10B2820000000) #5, !dbg !29
  %1183 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i770, float %1177, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i772 = select i1 %.not2.i771, float %1183, float %1182, !dbg !29
  %1184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i773 = icmp eq i32 %1184, 0, !dbg !29
  %1185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i772, float %1177, float 0xBFD5553DA0000000) #5, !dbg !29
  %1186 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i772, float %1177, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i774 = select i1 %.not3.i773, float %1186, float %1185, !dbg !29
  %1187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i775 = icmp eq i32 %1187, 0, !dbg !29
  %1188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i774, float %1177, float 0.000000e+00) #5, !dbg !29
  %1189 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i774, float %1177, float 0.000000e+00) #5, !dbg !29
  %.04.i776 = select i1 %.not4.i775, float %1189, float %1188, !dbg !29
  %1190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i777 = icmp eq i32 %1190, 0, !dbg !29
  %1191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i776, float %227, float %227) #5, !dbg !29
  %1192 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i776, float %227, float %227) #5, !dbg !29
  %.02.i778 = select i1 %.not5.i777, float %1192, float %1191, !dbg !29
  br label %__nv_tanhf.exit779, !dbg !29

__nv_tanhf.exit779:                               ; preds = %__internal_fmad.exit1.i763, %__internal_fmad.exit3.i768
  %s.1.i767 = phi float [ %1176, %__internal_fmad.exit1.i763 ], [ %.02.i778, %__internal_fmad.exit3.i768 ], !dbg !29
  %1193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i780 = icmp eq i32 %1193, 0, !dbg !29
  %1194 = tail call float @llvm.nvvm.fabs.ftz.f(float %229) #5, !dbg !29
  %1195 = tail call float @llvm.nvvm.fabs.f(float %229) #5, !dbg !29
  %.01.i781 = select i1 %.not.i780, float %1195, float %1194, !dbg !29
  %1196 = fcmp ult float %.01.i781, 0x3FE3333340000000, !dbg !29
  br i1 %1196, label %__internal_fmad.exit3.i787, label %__internal_fmad.exit1.i782, !dbg !29

__internal_fmad.exit1.i782:                       ; preds = %__nv_tanhf.exit779
  %1197 = fmul float %.01.i781, 0x4007154760000000, !dbg !29
  %1198 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1197) #5, !dbg !29
  %1199 = fadd float %1198, 1.000000e+00, !dbg !29
  %1200 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1199) #6, !dbg !29, !srcloc !30
  %1201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i783 = icmp eq i32 %1201, 0, !dbg !29
  %1202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1200, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1203 = tail call float @llvm.nvvm.fma.rn.f(float %1200, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i784 = select i1 %.not6.i783, float %1203, float %1202, !dbg !29
  %1204 = fcmp oge float %.01.i781, 0x4022059680000000, !dbg !29
  %s.0.i785 = select i1 %1204, float 1.000000e+00, float %.03.i784, !dbg !29
  %1205 = bitcast float %s.0.i785 to i32, !dbg !29
  %1206 = bitcast float %229 to i32, !dbg !29
  %1207 = and i32 %1206, -2147483648, !dbg !29
  %1208 = or i32 %1207, %1205, !dbg !29
  %1209 = bitcast i32 %1208 to float, !dbg !29
  br label %__nv_tanhf.exit798, !dbg !29

__internal_fmad.exit3.i787:                       ; preds = %__nv_tanhf.exit779
  %1210 = fmul float %229, %229, !dbg !29
  %1211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i788 = icmp eq i32 %1211, 0, !dbg !29
  %1212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1210, float 0xBFAAC795C0000000) #5, !dbg !29
  %1213 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1210, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i789 = select i1 %.not1.i788, float %1213, float %1212, !dbg !29
  %1214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i790 = icmp eq i32 %1214, 0, !dbg !29
  %1215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i789, float %1210, float 0x3FC10B2820000000) #5, !dbg !29
  %1216 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i789, float %1210, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i791 = select i1 %.not2.i790, float %1216, float %1215, !dbg !29
  %1217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i792 = icmp eq i32 %1217, 0, !dbg !29
  %1218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i791, float %1210, float 0xBFD5553DA0000000) #5, !dbg !29
  %1219 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i791, float %1210, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i793 = select i1 %.not3.i792, float %1219, float %1218, !dbg !29
  %1220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i794 = icmp eq i32 %1220, 0, !dbg !29
  %1221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i793, float %1210, float 0.000000e+00) #5, !dbg !29
  %1222 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i793, float %1210, float 0.000000e+00) #5, !dbg !29
  %.04.i795 = select i1 %.not4.i794, float %1222, float %1221, !dbg !29
  %1223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i796 = icmp eq i32 %1223, 0, !dbg !29
  %1224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i795, float %229, float %229) #5, !dbg !29
  %1225 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i795, float %229, float %229) #5, !dbg !29
  %.02.i797 = select i1 %.not5.i796, float %1225, float %1224, !dbg !29
  br label %__nv_tanhf.exit798, !dbg !29

__nv_tanhf.exit798:                               ; preds = %__internal_fmad.exit1.i782, %__internal_fmad.exit3.i787
  %s.1.i786 = phi float [ %1209, %__internal_fmad.exit1.i782 ], [ %.02.i797, %__internal_fmad.exit3.i787 ], !dbg !29
  %1226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i799 = icmp eq i32 %1226, 0, !dbg !29
  %1227 = tail call float @llvm.nvvm.fabs.ftz.f(float %231) #5, !dbg !29
  %1228 = tail call float @llvm.nvvm.fabs.f(float %231) #5, !dbg !29
  %.01.i800 = select i1 %.not.i799, float %1228, float %1227, !dbg !29
  %1229 = fcmp ult float %.01.i800, 0x3FE3333340000000, !dbg !29
  br i1 %1229, label %__internal_fmad.exit3.i806, label %__internal_fmad.exit1.i801, !dbg !29

__internal_fmad.exit1.i801:                       ; preds = %__nv_tanhf.exit798
  %1230 = fmul float %.01.i800, 0x4007154760000000, !dbg !29
  %1231 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1230) #5, !dbg !29
  %1232 = fadd float %1231, 1.000000e+00, !dbg !29
  %1233 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1232) #6, !dbg !29, !srcloc !30
  %1234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i802 = icmp eq i32 %1234, 0, !dbg !29
  %1235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1233, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1236 = tail call float @llvm.nvvm.fma.rn.f(float %1233, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i803 = select i1 %.not6.i802, float %1236, float %1235, !dbg !29
  %1237 = fcmp oge float %.01.i800, 0x4022059680000000, !dbg !29
  %s.0.i804 = select i1 %1237, float 1.000000e+00, float %.03.i803, !dbg !29
  %1238 = bitcast float %s.0.i804 to i32, !dbg !29
  %1239 = bitcast float %231 to i32, !dbg !29
  %1240 = and i32 %1239, -2147483648, !dbg !29
  %1241 = or i32 %1240, %1238, !dbg !29
  %1242 = bitcast i32 %1241 to float, !dbg !29
  br label %__nv_tanhf.exit817, !dbg !29

__internal_fmad.exit3.i806:                       ; preds = %__nv_tanhf.exit798
  %1243 = fmul float %231, %231, !dbg !29
  %1244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i807 = icmp eq i32 %1244, 0, !dbg !29
  %1245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1243, float 0xBFAAC795C0000000) #5, !dbg !29
  %1246 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1243, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i808 = select i1 %.not1.i807, float %1246, float %1245, !dbg !29
  %1247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i809 = icmp eq i32 %1247, 0, !dbg !29
  %1248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i808, float %1243, float 0x3FC10B2820000000) #5, !dbg !29
  %1249 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i808, float %1243, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i810 = select i1 %.not2.i809, float %1249, float %1248, !dbg !29
  %1250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i811 = icmp eq i32 %1250, 0, !dbg !29
  %1251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i810, float %1243, float 0xBFD5553DA0000000) #5, !dbg !29
  %1252 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i810, float %1243, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i812 = select i1 %.not3.i811, float %1252, float %1251, !dbg !29
  %1253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i813 = icmp eq i32 %1253, 0, !dbg !29
  %1254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i812, float %1243, float 0.000000e+00) #5, !dbg !29
  %1255 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i812, float %1243, float 0.000000e+00) #5, !dbg !29
  %.04.i814 = select i1 %.not4.i813, float %1255, float %1254, !dbg !29
  %1256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i815 = icmp eq i32 %1256, 0, !dbg !29
  %1257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i814, float %231, float %231) #5, !dbg !29
  %1258 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i814, float %231, float %231) #5, !dbg !29
  %.02.i816 = select i1 %.not5.i815, float %1258, float %1257, !dbg !29
  br label %__nv_tanhf.exit817, !dbg !29

__nv_tanhf.exit817:                               ; preds = %__internal_fmad.exit1.i801, %__internal_fmad.exit3.i806
  %s.1.i805 = phi float [ %1242, %__internal_fmad.exit1.i801 ], [ %.02.i816, %__internal_fmad.exit3.i806 ], !dbg !29
  %1259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i818 = icmp eq i32 %1259, 0, !dbg !29
  %1260 = tail call float @llvm.nvvm.fabs.ftz.f(float %233) #5, !dbg !29
  %1261 = tail call float @llvm.nvvm.fabs.f(float %233) #5, !dbg !29
  %.01.i819 = select i1 %.not.i818, float %1261, float %1260, !dbg !29
  %1262 = fcmp ult float %.01.i819, 0x3FE3333340000000, !dbg !29
  br i1 %1262, label %__internal_fmad.exit3.i825, label %__internal_fmad.exit1.i820, !dbg !29

__internal_fmad.exit1.i820:                       ; preds = %__nv_tanhf.exit817
  %1263 = fmul float %.01.i819, 0x4007154760000000, !dbg !29
  %1264 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1263) #5, !dbg !29
  %1265 = fadd float %1264, 1.000000e+00, !dbg !29
  %1266 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1265) #6, !dbg !29, !srcloc !30
  %1267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i821 = icmp eq i32 %1267, 0, !dbg !29
  %1268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1266, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1269 = tail call float @llvm.nvvm.fma.rn.f(float %1266, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i822 = select i1 %.not6.i821, float %1269, float %1268, !dbg !29
  %1270 = fcmp oge float %.01.i819, 0x4022059680000000, !dbg !29
  %s.0.i823 = select i1 %1270, float 1.000000e+00, float %.03.i822, !dbg !29
  %1271 = bitcast float %s.0.i823 to i32, !dbg !29
  %1272 = bitcast float %233 to i32, !dbg !29
  %1273 = and i32 %1272, -2147483648, !dbg !29
  %1274 = or i32 %1273, %1271, !dbg !29
  %1275 = bitcast i32 %1274 to float, !dbg !29
  br label %__nv_tanhf.exit836, !dbg !29

__internal_fmad.exit3.i825:                       ; preds = %__nv_tanhf.exit817
  %1276 = fmul float %233, %233, !dbg !29
  %1277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i826 = icmp eq i32 %1277, 0, !dbg !29
  %1278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1276, float 0xBFAAC795C0000000) #5, !dbg !29
  %1279 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1276, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i827 = select i1 %.not1.i826, float %1279, float %1278, !dbg !29
  %1280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i828 = icmp eq i32 %1280, 0, !dbg !29
  %1281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i827, float %1276, float 0x3FC10B2820000000) #5, !dbg !29
  %1282 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i827, float %1276, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i829 = select i1 %.not2.i828, float %1282, float %1281, !dbg !29
  %1283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i830 = icmp eq i32 %1283, 0, !dbg !29
  %1284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i829, float %1276, float 0xBFD5553DA0000000) #5, !dbg !29
  %1285 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i829, float %1276, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i831 = select i1 %.not3.i830, float %1285, float %1284, !dbg !29
  %1286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i832 = icmp eq i32 %1286, 0, !dbg !29
  %1287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i831, float %1276, float 0.000000e+00) #5, !dbg !29
  %1288 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i831, float %1276, float 0.000000e+00) #5, !dbg !29
  %.04.i833 = select i1 %.not4.i832, float %1288, float %1287, !dbg !29
  %1289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i834 = icmp eq i32 %1289, 0, !dbg !29
  %1290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i833, float %233, float %233) #5, !dbg !29
  %1291 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i833, float %233, float %233) #5, !dbg !29
  %.02.i835 = select i1 %.not5.i834, float %1291, float %1290, !dbg !29
  br label %__nv_tanhf.exit836, !dbg !29

__nv_tanhf.exit836:                               ; preds = %__internal_fmad.exit1.i820, %__internal_fmad.exit3.i825
  %s.1.i824 = phi float [ %1275, %__internal_fmad.exit1.i820 ], [ %.02.i835, %__internal_fmad.exit3.i825 ], !dbg !29
  %1292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i837 = icmp eq i32 %1292, 0, !dbg !29
  %1293 = tail call float @llvm.nvvm.fabs.ftz.f(float %235) #5, !dbg !29
  %1294 = tail call float @llvm.nvvm.fabs.f(float %235) #5, !dbg !29
  %.01.i838 = select i1 %.not.i837, float %1294, float %1293, !dbg !29
  %1295 = fcmp ult float %.01.i838, 0x3FE3333340000000, !dbg !29
  br i1 %1295, label %__internal_fmad.exit3.i844, label %__internal_fmad.exit1.i839, !dbg !29

__internal_fmad.exit1.i839:                       ; preds = %__nv_tanhf.exit836
  %1296 = fmul float %.01.i838, 0x4007154760000000, !dbg !29
  %1297 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1296) #5, !dbg !29
  %1298 = fadd float %1297, 1.000000e+00, !dbg !29
  %1299 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1298) #6, !dbg !29, !srcloc !30
  %1300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i840 = icmp eq i32 %1300, 0, !dbg !29
  %1301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1299, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1302 = tail call float @llvm.nvvm.fma.rn.f(float %1299, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i841 = select i1 %.not6.i840, float %1302, float %1301, !dbg !29
  %1303 = fcmp oge float %.01.i838, 0x4022059680000000, !dbg !29
  %s.0.i842 = select i1 %1303, float 1.000000e+00, float %.03.i841, !dbg !29
  %1304 = bitcast float %s.0.i842 to i32, !dbg !29
  %1305 = bitcast float %235 to i32, !dbg !29
  %1306 = and i32 %1305, -2147483648, !dbg !29
  %1307 = or i32 %1306, %1304, !dbg !29
  %1308 = bitcast i32 %1307 to float, !dbg !29
  br label %__nv_tanhf.exit855, !dbg !29

__internal_fmad.exit3.i844:                       ; preds = %__nv_tanhf.exit836
  %1309 = fmul float %235, %235, !dbg !29
  %1310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i845 = icmp eq i32 %1310, 0, !dbg !29
  %1311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1309, float 0xBFAAC795C0000000) #5, !dbg !29
  %1312 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1309, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i846 = select i1 %.not1.i845, float %1312, float %1311, !dbg !29
  %1313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i847 = icmp eq i32 %1313, 0, !dbg !29
  %1314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i846, float %1309, float 0x3FC10B2820000000) #5, !dbg !29
  %1315 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i846, float %1309, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i848 = select i1 %.not2.i847, float %1315, float %1314, !dbg !29
  %1316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i849 = icmp eq i32 %1316, 0, !dbg !29
  %1317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i848, float %1309, float 0xBFD5553DA0000000) #5, !dbg !29
  %1318 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i848, float %1309, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i850 = select i1 %.not3.i849, float %1318, float %1317, !dbg !29
  %1319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i851 = icmp eq i32 %1319, 0, !dbg !29
  %1320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i850, float %1309, float 0.000000e+00) #5, !dbg !29
  %1321 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i850, float %1309, float 0.000000e+00) #5, !dbg !29
  %.04.i852 = select i1 %.not4.i851, float %1321, float %1320, !dbg !29
  %1322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i853 = icmp eq i32 %1322, 0, !dbg !29
  %1323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i852, float %235, float %235) #5, !dbg !29
  %1324 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i852, float %235, float %235) #5, !dbg !29
  %.02.i854 = select i1 %.not5.i853, float %1324, float %1323, !dbg !29
  br label %__nv_tanhf.exit855, !dbg !29

__nv_tanhf.exit855:                               ; preds = %__internal_fmad.exit1.i839, %__internal_fmad.exit3.i844
  %s.1.i843 = phi float [ %1308, %__internal_fmad.exit1.i839 ], [ %.02.i854, %__internal_fmad.exit3.i844 ], !dbg !29
  %1325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i856 = icmp eq i32 %1325, 0, !dbg !29
  %1326 = tail call float @llvm.nvvm.fabs.ftz.f(float %237) #5, !dbg !29
  %1327 = tail call float @llvm.nvvm.fabs.f(float %237) #5, !dbg !29
  %.01.i857 = select i1 %.not.i856, float %1327, float %1326, !dbg !29
  %1328 = fcmp ult float %.01.i857, 0x3FE3333340000000, !dbg !29
  br i1 %1328, label %__internal_fmad.exit3.i863, label %__internal_fmad.exit1.i858, !dbg !29

__internal_fmad.exit1.i858:                       ; preds = %__nv_tanhf.exit855
  %1329 = fmul float %.01.i857, 0x4007154760000000, !dbg !29
  %1330 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1329) #5, !dbg !29
  %1331 = fadd float %1330, 1.000000e+00, !dbg !29
  %1332 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1331) #6, !dbg !29, !srcloc !30
  %1333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i859 = icmp eq i32 %1333, 0, !dbg !29
  %1334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1332, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1335 = tail call float @llvm.nvvm.fma.rn.f(float %1332, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i860 = select i1 %.not6.i859, float %1335, float %1334, !dbg !29
  %1336 = fcmp oge float %.01.i857, 0x4022059680000000, !dbg !29
  %s.0.i861 = select i1 %1336, float 1.000000e+00, float %.03.i860, !dbg !29
  %1337 = bitcast float %s.0.i861 to i32, !dbg !29
  %1338 = bitcast float %237 to i32, !dbg !29
  %1339 = and i32 %1338, -2147483648, !dbg !29
  %1340 = or i32 %1339, %1337, !dbg !29
  %1341 = bitcast i32 %1340 to float, !dbg !29
  br label %__nv_tanhf.exit874, !dbg !29

__internal_fmad.exit3.i863:                       ; preds = %__nv_tanhf.exit855
  %1342 = fmul float %237, %237, !dbg !29
  %1343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i864 = icmp eq i32 %1343, 0, !dbg !29
  %1344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1342, float 0xBFAAC795C0000000) #5, !dbg !29
  %1345 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1342, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i865 = select i1 %.not1.i864, float %1345, float %1344, !dbg !29
  %1346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i866 = icmp eq i32 %1346, 0, !dbg !29
  %1347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i865, float %1342, float 0x3FC10B2820000000) #5, !dbg !29
  %1348 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i865, float %1342, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i867 = select i1 %.not2.i866, float %1348, float %1347, !dbg !29
  %1349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i868 = icmp eq i32 %1349, 0, !dbg !29
  %1350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i867, float %1342, float 0xBFD5553DA0000000) #5, !dbg !29
  %1351 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i867, float %1342, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i869 = select i1 %.not3.i868, float %1351, float %1350, !dbg !29
  %1352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i870 = icmp eq i32 %1352, 0, !dbg !29
  %1353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i869, float %1342, float 0.000000e+00) #5, !dbg !29
  %1354 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i869, float %1342, float 0.000000e+00) #5, !dbg !29
  %.04.i871 = select i1 %.not4.i870, float %1354, float %1353, !dbg !29
  %1355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i872 = icmp eq i32 %1355, 0, !dbg !29
  %1356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i871, float %237, float %237) #5, !dbg !29
  %1357 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i871, float %237, float %237) #5, !dbg !29
  %.02.i873 = select i1 %.not5.i872, float %1357, float %1356, !dbg !29
  br label %__nv_tanhf.exit874, !dbg !29

__nv_tanhf.exit874:                               ; preds = %__internal_fmad.exit1.i858, %__internal_fmad.exit3.i863
  %s.1.i862 = phi float [ %1341, %__internal_fmad.exit1.i858 ], [ %.02.i873, %__internal_fmad.exit3.i863 ], !dbg !29
  %1358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i875 = icmp eq i32 %1358, 0, !dbg !29
  %1359 = tail call float @llvm.nvvm.fabs.ftz.f(float %239) #5, !dbg !29
  %1360 = tail call float @llvm.nvvm.fabs.f(float %239) #5, !dbg !29
  %.01.i876 = select i1 %.not.i875, float %1360, float %1359, !dbg !29
  %1361 = fcmp ult float %.01.i876, 0x3FE3333340000000, !dbg !29
  br i1 %1361, label %__internal_fmad.exit3.i882, label %__internal_fmad.exit1.i877, !dbg !29

__internal_fmad.exit1.i877:                       ; preds = %__nv_tanhf.exit874
  %1362 = fmul float %.01.i876, 0x4007154760000000, !dbg !29
  %1363 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1362) #5, !dbg !29
  %1364 = fadd float %1363, 1.000000e+00, !dbg !29
  %1365 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1364) #6, !dbg !29, !srcloc !30
  %1366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i878 = icmp eq i32 %1366, 0, !dbg !29
  %1367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1368 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i879 = select i1 %.not6.i878, float %1368, float %1367, !dbg !29
  %1369 = fcmp oge float %.01.i876, 0x4022059680000000, !dbg !29
  %s.0.i880 = select i1 %1369, float 1.000000e+00, float %.03.i879, !dbg !29
  %1370 = bitcast float %s.0.i880 to i32, !dbg !29
  %1371 = bitcast float %239 to i32, !dbg !29
  %1372 = and i32 %1371, -2147483648, !dbg !29
  %1373 = or i32 %1372, %1370, !dbg !29
  %1374 = bitcast i32 %1373 to float, !dbg !29
  br label %__nv_tanhf.exit893, !dbg !29

__internal_fmad.exit3.i882:                       ; preds = %__nv_tanhf.exit874
  %1375 = fmul float %239, %239, !dbg !29
  %1376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i883 = icmp eq i32 %1376, 0, !dbg !29
  %1377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1375, float 0xBFAAC795C0000000) #5, !dbg !29
  %1378 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1375, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i884 = select i1 %.not1.i883, float %1378, float %1377, !dbg !29
  %1379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i885 = icmp eq i32 %1379, 0, !dbg !29
  %1380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i884, float %1375, float 0x3FC10B2820000000) #5, !dbg !29
  %1381 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i884, float %1375, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i886 = select i1 %.not2.i885, float %1381, float %1380, !dbg !29
  %1382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i887 = icmp eq i32 %1382, 0, !dbg !29
  %1383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i886, float %1375, float 0xBFD5553DA0000000) #5, !dbg !29
  %1384 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i886, float %1375, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i888 = select i1 %.not3.i887, float %1384, float %1383, !dbg !29
  %1385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i889 = icmp eq i32 %1385, 0, !dbg !29
  %1386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i888, float %1375, float 0.000000e+00) #5, !dbg !29
  %1387 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i888, float %1375, float 0.000000e+00) #5, !dbg !29
  %.04.i890 = select i1 %.not4.i889, float %1387, float %1386, !dbg !29
  %1388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i891 = icmp eq i32 %1388, 0, !dbg !29
  %1389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i890, float %239, float %239) #5, !dbg !29
  %1390 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i890, float %239, float %239) #5, !dbg !29
  %.02.i892 = select i1 %.not5.i891, float %1390, float %1389, !dbg !29
  br label %__nv_tanhf.exit893, !dbg !29

__nv_tanhf.exit893:                               ; preds = %__internal_fmad.exit1.i877, %__internal_fmad.exit3.i882
  %s.1.i881 = phi float [ %1374, %__internal_fmad.exit1.i877 ], [ %.02.i892, %__internal_fmad.exit3.i882 ], !dbg !29
  %1391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i894 = icmp eq i32 %1391, 0, !dbg !29
  %1392 = tail call float @llvm.nvvm.fabs.ftz.f(float %241) #5, !dbg !29
  %1393 = tail call float @llvm.nvvm.fabs.f(float %241) #5, !dbg !29
  %.01.i895 = select i1 %.not.i894, float %1393, float %1392, !dbg !29
  %1394 = fcmp ult float %.01.i895, 0x3FE3333340000000, !dbg !29
  br i1 %1394, label %__internal_fmad.exit3.i901, label %__internal_fmad.exit1.i896, !dbg !29

__internal_fmad.exit1.i896:                       ; preds = %__nv_tanhf.exit893
  %1395 = fmul float %.01.i895, 0x4007154760000000, !dbg !29
  %1396 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1395) #5, !dbg !29
  %1397 = fadd float %1396, 1.000000e+00, !dbg !29
  %1398 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1397) #6, !dbg !29, !srcloc !30
  %1399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i897 = icmp eq i32 %1399, 0, !dbg !29
  %1400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1398, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1401 = tail call float @llvm.nvvm.fma.rn.f(float %1398, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i898 = select i1 %.not6.i897, float %1401, float %1400, !dbg !29
  %1402 = fcmp oge float %.01.i895, 0x4022059680000000, !dbg !29
  %s.0.i899 = select i1 %1402, float 1.000000e+00, float %.03.i898, !dbg !29
  %1403 = bitcast float %s.0.i899 to i32, !dbg !29
  %1404 = bitcast float %241 to i32, !dbg !29
  %1405 = and i32 %1404, -2147483648, !dbg !29
  %1406 = or i32 %1405, %1403, !dbg !29
  %1407 = bitcast i32 %1406 to float, !dbg !29
  br label %__nv_tanhf.exit912, !dbg !29

__internal_fmad.exit3.i901:                       ; preds = %__nv_tanhf.exit893
  %1408 = fmul float %241, %241, !dbg !29
  %1409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i902 = icmp eq i32 %1409, 0, !dbg !29
  %1410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1408, float 0xBFAAC795C0000000) #5, !dbg !29
  %1411 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1408, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i903 = select i1 %.not1.i902, float %1411, float %1410, !dbg !29
  %1412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i904 = icmp eq i32 %1412, 0, !dbg !29
  %1413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i903, float %1408, float 0x3FC10B2820000000) #5, !dbg !29
  %1414 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i903, float %1408, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i905 = select i1 %.not2.i904, float %1414, float %1413, !dbg !29
  %1415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i906 = icmp eq i32 %1415, 0, !dbg !29
  %1416 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i905, float %1408, float 0xBFD5553DA0000000) #5, !dbg !29
  %1417 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i905, float %1408, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i907 = select i1 %.not3.i906, float %1417, float %1416, !dbg !29
  %1418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i908 = icmp eq i32 %1418, 0, !dbg !29
  %1419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i907, float %1408, float 0.000000e+00) #5, !dbg !29
  %1420 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i907, float %1408, float 0.000000e+00) #5, !dbg !29
  %.04.i909 = select i1 %.not4.i908, float %1420, float %1419, !dbg !29
  %1421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i910 = icmp eq i32 %1421, 0, !dbg !29
  %1422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i909, float %241, float %241) #5, !dbg !29
  %1423 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i909, float %241, float %241) #5, !dbg !29
  %.02.i911 = select i1 %.not5.i910, float %1423, float %1422, !dbg !29
  br label %__nv_tanhf.exit912, !dbg !29

__nv_tanhf.exit912:                               ; preds = %__internal_fmad.exit1.i896, %__internal_fmad.exit3.i901
  %s.1.i900 = phi float [ %1407, %__internal_fmad.exit1.i896 ], [ %.02.i911, %__internal_fmad.exit3.i901 ], !dbg !29
  %1424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i913 = icmp eq i32 %1424, 0, !dbg !29
  %1425 = tail call float @llvm.nvvm.fabs.ftz.f(float %243) #5, !dbg !29
  %1426 = tail call float @llvm.nvvm.fabs.f(float %243) #5, !dbg !29
  %.01.i914 = select i1 %.not.i913, float %1426, float %1425, !dbg !29
  %1427 = fcmp ult float %.01.i914, 0x3FE3333340000000, !dbg !29
  br i1 %1427, label %__internal_fmad.exit3.i920, label %__internal_fmad.exit1.i915, !dbg !29

__internal_fmad.exit1.i915:                       ; preds = %__nv_tanhf.exit912
  %1428 = fmul float %.01.i914, 0x4007154760000000, !dbg !29
  %1429 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1428) #5, !dbg !29
  %1430 = fadd float %1429, 1.000000e+00, !dbg !29
  %1431 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1430) #6, !dbg !29, !srcloc !30
  %1432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i916 = icmp eq i32 %1432, 0, !dbg !29
  %1433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1431, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1434 = tail call float @llvm.nvvm.fma.rn.f(float %1431, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i917 = select i1 %.not6.i916, float %1434, float %1433, !dbg !29
  %1435 = fcmp oge float %.01.i914, 0x4022059680000000, !dbg !29
  %s.0.i918 = select i1 %1435, float 1.000000e+00, float %.03.i917, !dbg !29
  %1436 = bitcast float %s.0.i918 to i32, !dbg !29
  %1437 = bitcast float %243 to i32, !dbg !29
  %1438 = and i32 %1437, -2147483648, !dbg !29
  %1439 = or i32 %1438, %1436, !dbg !29
  %1440 = bitcast i32 %1439 to float, !dbg !29
  br label %__nv_tanhf.exit931, !dbg !29

__internal_fmad.exit3.i920:                       ; preds = %__nv_tanhf.exit912
  %1441 = fmul float %243, %243, !dbg !29
  %1442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i921 = icmp eq i32 %1442, 0, !dbg !29
  %1443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1441, float 0xBFAAC795C0000000) #5, !dbg !29
  %1444 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1441, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i922 = select i1 %.not1.i921, float %1444, float %1443, !dbg !29
  %1445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i923 = icmp eq i32 %1445, 0, !dbg !29
  %1446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i922, float %1441, float 0x3FC10B2820000000) #5, !dbg !29
  %1447 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i922, float %1441, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i924 = select i1 %.not2.i923, float %1447, float %1446, !dbg !29
  %1448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i925 = icmp eq i32 %1448, 0, !dbg !29
  %1449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i924, float %1441, float 0xBFD5553DA0000000) #5, !dbg !29
  %1450 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i924, float %1441, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i926 = select i1 %.not3.i925, float %1450, float %1449, !dbg !29
  %1451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i927 = icmp eq i32 %1451, 0, !dbg !29
  %1452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i926, float %1441, float 0.000000e+00) #5, !dbg !29
  %1453 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i926, float %1441, float 0.000000e+00) #5, !dbg !29
  %.04.i928 = select i1 %.not4.i927, float %1453, float %1452, !dbg !29
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i929 = icmp eq i32 %1454, 0, !dbg !29
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i928, float %243, float %243) #5, !dbg !29
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i928, float %243, float %243) #5, !dbg !29
  %.02.i930 = select i1 %.not5.i929, float %1456, float %1455, !dbg !29
  br label %__nv_tanhf.exit931, !dbg !29

__nv_tanhf.exit931:                               ; preds = %__internal_fmad.exit1.i915, %__internal_fmad.exit3.i920
  %s.1.i919 = phi float [ %1440, %__internal_fmad.exit1.i915 ], [ %.02.i930, %__internal_fmad.exit3.i920 ], !dbg !29
  %1457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i932 = icmp eq i32 %1457, 0, !dbg !29
  %1458 = tail call float @llvm.nvvm.fabs.ftz.f(float %245) #5, !dbg !29
  %1459 = tail call float @llvm.nvvm.fabs.f(float %245) #5, !dbg !29
  %.01.i933 = select i1 %.not.i932, float %1459, float %1458, !dbg !29
  %1460 = fcmp ult float %.01.i933, 0x3FE3333340000000, !dbg !29
  br i1 %1460, label %__internal_fmad.exit3.i939, label %__internal_fmad.exit1.i934, !dbg !29

__internal_fmad.exit1.i934:                       ; preds = %__nv_tanhf.exit931
  %1461 = fmul float %.01.i933, 0x4007154760000000, !dbg !29
  %1462 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1461) #5, !dbg !29
  %1463 = fadd float %1462, 1.000000e+00, !dbg !29
  %1464 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1463) #6, !dbg !29, !srcloc !30
  %1465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i935 = icmp eq i32 %1465, 0, !dbg !29
  %1466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1464, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1467 = tail call float @llvm.nvvm.fma.rn.f(float %1464, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i936 = select i1 %.not6.i935, float %1467, float %1466, !dbg !29
  %1468 = fcmp oge float %.01.i933, 0x4022059680000000, !dbg !29
  %s.0.i937 = select i1 %1468, float 1.000000e+00, float %.03.i936, !dbg !29
  %1469 = bitcast float %s.0.i937 to i32, !dbg !29
  %1470 = bitcast float %245 to i32, !dbg !29
  %1471 = and i32 %1470, -2147483648, !dbg !29
  %1472 = or i32 %1471, %1469, !dbg !29
  %1473 = bitcast i32 %1472 to float, !dbg !29
  br label %__nv_tanhf.exit950, !dbg !29

__internal_fmad.exit3.i939:                       ; preds = %__nv_tanhf.exit931
  %1474 = fmul float %245, %245, !dbg !29
  %1475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i940 = icmp eq i32 %1475, 0, !dbg !29
  %1476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1474, float 0xBFAAC795C0000000) #5, !dbg !29
  %1477 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1474, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i941 = select i1 %.not1.i940, float %1477, float %1476, !dbg !29
  %1478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i942 = icmp eq i32 %1478, 0, !dbg !29
  %1479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i941, float %1474, float 0x3FC10B2820000000) #5, !dbg !29
  %1480 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i941, float %1474, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i943 = select i1 %.not2.i942, float %1480, float %1479, !dbg !29
  %1481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i944 = icmp eq i32 %1481, 0, !dbg !29
  %1482 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i943, float %1474, float 0xBFD5553DA0000000) #5, !dbg !29
  %1483 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i943, float %1474, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i945 = select i1 %.not3.i944, float %1483, float %1482, !dbg !29
  %1484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i946 = icmp eq i32 %1484, 0, !dbg !29
  %1485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i945, float %1474, float 0.000000e+00) #5, !dbg !29
  %1486 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i945, float %1474, float 0.000000e+00) #5, !dbg !29
  %.04.i947 = select i1 %.not4.i946, float %1486, float %1485, !dbg !29
  %1487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i948 = icmp eq i32 %1487, 0, !dbg !29
  %1488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i947, float %245, float %245) #5, !dbg !29
  %1489 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i947, float %245, float %245) #5, !dbg !29
  %.02.i949 = select i1 %.not5.i948, float %1489, float %1488, !dbg !29
  br label %__nv_tanhf.exit950, !dbg !29

__nv_tanhf.exit950:                               ; preds = %__internal_fmad.exit1.i934, %__internal_fmad.exit3.i939
  %s.1.i938 = phi float [ %1473, %__internal_fmad.exit1.i934 ], [ %.02.i949, %__internal_fmad.exit3.i939 ], !dbg !29
  %1490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i951 = icmp eq i32 %1490, 0, !dbg !29
  %1491 = tail call float @llvm.nvvm.fabs.ftz.f(float %247) #5, !dbg !29
  %1492 = tail call float @llvm.nvvm.fabs.f(float %247) #5, !dbg !29
  %.01.i952 = select i1 %.not.i951, float %1492, float %1491, !dbg !29
  %1493 = fcmp ult float %.01.i952, 0x3FE3333340000000, !dbg !29
  br i1 %1493, label %__internal_fmad.exit3.i958, label %__internal_fmad.exit1.i953, !dbg !29

__internal_fmad.exit1.i953:                       ; preds = %__nv_tanhf.exit950
  %1494 = fmul float %.01.i952, 0x4007154760000000, !dbg !29
  %1495 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1494) #5, !dbg !29
  %1496 = fadd float %1495, 1.000000e+00, !dbg !29
  %1497 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1496) #6, !dbg !29, !srcloc !30
  %1498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i954 = icmp eq i32 %1498, 0, !dbg !29
  %1499 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1497, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1500 = tail call float @llvm.nvvm.fma.rn.f(float %1497, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i955 = select i1 %.not6.i954, float %1500, float %1499, !dbg !29
  %1501 = fcmp oge float %.01.i952, 0x4022059680000000, !dbg !29
  %s.0.i956 = select i1 %1501, float 1.000000e+00, float %.03.i955, !dbg !29
  %1502 = bitcast float %s.0.i956 to i32, !dbg !29
  %1503 = bitcast float %247 to i32, !dbg !29
  %1504 = and i32 %1503, -2147483648, !dbg !29
  %1505 = or i32 %1504, %1502, !dbg !29
  %1506 = bitcast i32 %1505 to float, !dbg !29
  br label %__nv_tanhf.exit969, !dbg !29

__internal_fmad.exit3.i958:                       ; preds = %__nv_tanhf.exit950
  %1507 = fmul float %247, %247, !dbg !29
  %1508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i959 = icmp eq i32 %1508, 0, !dbg !29
  %1509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1507, float 0xBFAAC795C0000000) #5, !dbg !29
  %1510 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1507, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i960 = select i1 %.not1.i959, float %1510, float %1509, !dbg !29
  %1511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i961 = icmp eq i32 %1511, 0, !dbg !29
  %1512 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i960, float %1507, float 0x3FC10B2820000000) #5, !dbg !29
  %1513 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i960, float %1507, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i962 = select i1 %.not2.i961, float %1513, float %1512, !dbg !29
  %1514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i963 = icmp eq i32 %1514, 0, !dbg !29
  %1515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i962, float %1507, float 0xBFD5553DA0000000) #5, !dbg !29
  %1516 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i962, float %1507, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i964 = select i1 %.not3.i963, float %1516, float %1515, !dbg !29
  %1517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i965 = icmp eq i32 %1517, 0, !dbg !29
  %1518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i964, float %1507, float 0.000000e+00) #5, !dbg !29
  %1519 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i964, float %1507, float 0.000000e+00) #5, !dbg !29
  %.04.i966 = select i1 %.not4.i965, float %1519, float %1518, !dbg !29
  %1520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i967 = icmp eq i32 %1520, 0, !dbg !29
  %1521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i966, float %247, float %247) #5, !dbg !29
  %1522 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i966, float %247, float %247) #5, !dbg !29
  %.02.i968 = select i1 %.not5.i967, float %1522, float %1521, !dbg !29
  br label %__nv_tanhf.exit969, !dbg !29

__nv_tanhf.exit969:                               ; preds = %__internal_fmad.exit1.i953, %__internal_fmad.exit3.i958
  %s.1.i957 = phi float [ %1506, %__internal_fmad.exit1.i953 ], [ %.02.i968, %__internal_fmad.exit3.i958 ], !dbg !29
  %1523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i970 = icmp eq i32 %1523, 0, !dbg !29
  %1524 = tail call float @llvm.nvvm.fabs.ftz.f(float %249) #5, !dbg !29
  %1525 = tail call float @llvm.nvvm.fabs.f(float %249) #5, !dbg !29
  %.01.i971 = select i1 %.not.i970, float %1525, float %1524, !dbg !29
  %1526 = fcmp ult float %.01.i971, 0x3FE3333340000000, !dbg !29
  br i1 %1526, label %__internal_fmad.exit3.i977, label %__internal_fmad.exit1.i972, !dbg !29

__internal_fmad.exit1.i972:                       ; preds = %__nv_tanhf.exit969
  %1527 = fmul float %.01.i971, 0x4007154760000000, !dbg !29
  %1528 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1527) #5, !dbg !29
  %1529 = fadd float %1528, 1.000000e+00, !dbg !29
  %1530 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1529) #6, !dbg !29, !srcloc !30
  %1531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i973 = icmp eq i32 %1531, 0, !dbg !29
  %1532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1530, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1533 = tail call float @llvm.nvvm.fma.rn.f(float %1530, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i974 = select i1 %.not6.i973, float %1533, float %1532, !dbg !29
  %1534 = fcmp oge float %.01.i971, 0x4022059680000000, !dbg !29
  %s.0.i975 = select i1 %1534, float 1.000000e+00, float %.03.i974, !dbg !29
  %1535 = bitcast float %s.0.i975 to i32, !dbg !29
  %1536 = bitcast float %249 to i32, !dbg !29
  %1537 = and i32 %1536, -2147483648, !dbg !29
  %1538 = or i32 %1537, %1535, !dbg !29
  %1539 = bitcast i32 %1538 to float, !dbg !29
  br label %__nv_tanhf.exit988, !dbg !29

__internal_fmad.exit3.i977:                       ; preds = %__nv_tanhf.exit969
  %1540 = fmul float %249, %249, !dbg !29
  %1541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i978 = icmp eq i32 %1541, 0, !dbg !29
  %1542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1540, float 0xBFAAC795C0000000) #5, !dbg !29
  %1543 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1540, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i979 = select i1 %.not1.i978, float %1543, float %1542, !dbg !29
  %1544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i980 = icmp eq i32 %1544, 0, !dbg !29
  %1545 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i979, float %1540, float 0x3FC10B2820000000) #5, !dbg !29
  %1546 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i979, float %1540, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i981 = select i1 %.not2.i980, float %1546, float %1545, !dbg !29
  %1547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i982 = icmp eq i32 %1547, 0, !dbg !29
  %1548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i981, float %1540, float 0xBFD5553DA0000000) #5, !dbg !29
  %1549 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i981, float %1540, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i983 = select i1 %.not3.i982, float %1549, float %1548, !dbg !29
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i984 = icmp eq i32 %1550, 0, !dbg !29
  %1551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i983, float %1540, float 0.000000e+00) #5, !dbg !29
  %1552 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i983, float %1540, float 0.000000e+00) #5, !dbg !29
  %.04.i985 = select i1 %.not4.i984, float %1552, float %1551, !dbg !29
  %1553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i986 = icmp eq i32 %1553, 0, !dbg !29
  %1554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i985, float %249, float %249) #5, !dbg !29
  %1555 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i985, float %249, float %249) #5, !dbg !29
  %.02.i987 = select i1 %.not5.i986, float %1555, float %1554, !dbg !29
  br label %__nv_tanhf.exit988, !dbg !29

__nv_tanhf.exit988:                               ; preds = %__internal_fmad.exit1.i972, %__internal_fmad.exit3.i977
  %s.1.i976 = phi float [ %1539, %__internal_fmad.exit1.i972 ], [ %.02.i987, %__internal_fmad.exit3.i977 ], !dbg !29
  %1556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i989 = icmp eq i32 %1556, 0, !dbg !29
  %1557 = tail call float @llvm.nvvm.fabs.ftz.f(float %251) #5, !dbg !29
  %1558 = tail call float @llvm.nvvm.fabs.f(float %251) #5, !dbg !29
  %.01.i990 = select i1 %.not.i989, float %1558, float %1557, !dbg !29
  %1559 = fcmp ult float %.01.i990, 0x3FE3333340000000, !dbg !29
  br i1 %1559, label %__internal_fmad.exit3.i996, label %__internal_fmad.exit1.i991, !dbg !29

__internal_fmad.exit1.i991:                       ; preds = %__nv_tanhf.exit988
  %1560 = fmul float %.01.i990, 0x4007154760000000, !dbg !29
  %1561 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1560) #5, !dbg !29
  %1562 = fadd float %1561, 1.000000e+00, !dbg !29
  %1563 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1562) #6, !dbg !29, !srcloc !30
  %1564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i992 = icmp eq i32 %1564, 0, !dbg !29
  %1565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1563, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1566 = tail call float @llvm.nvvm.fma.rn.f(float %1563, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i993 = select i1 %.not6.i992, float %1566, float %1565, !dbg !29
  %1567 = fcmp oge float %.01.i990, 0x4022059680000000, !dbg !29
  %s.0.i994 = select i1 %1567, float 1.000000e+00, float %.03.i993, !dbg !29
  %1568 = bitcast float %s.0.i994 to i32, !dbg !29
  %1569 = bitcast float %251 to i32, !dbg !29
  %1570 = and i32 %1569, -2147483648, !dbg !29
  %1571 = or i32 %1570, %1568, !dbg !29
  %1572 = bitcast i32 %1571 to float, !dbg !29
  br label %__nv_tanhf.exit1007, !dbg !29

__internal_fmad.exit3.i996:                       ; preds = %__nv_tanhf.exit988
  %1573 = fmul float %251, %251, !dbg !29
  %1574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i997 = icmp eq i32 %1574, 0, !dbg !29
  %1575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1573, float 0xBFAAC795C0000000) #5, !dbg !29
  %1576 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1573, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i998 = select i1 %.not1.i997, float %1576, float %1575, !dbg !29
  %1577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i999 = icmp eq i32 %1577, 0, !dbg !29
  %1578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i998, float %1573, float 0x3FC10B2820000000) #5, !dbg !29
  %1579 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i998, float %1573, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1000 = select i1 %.not2.i999, float %1579, float %1578, !dbg !29
  %1580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1001 = icmp eq i32 %1580, 0, !dbg !29
  %1581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1000, float %1573, float 0xBFD5553DA0000000) #5, !dbg !29
  %1582 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1000, float %1573, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1002 = select i1 %.not3.i1001, float %1582, float %1581, !dbg !29
  %1583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1003 = icmp eq i32 %1583, 0, !dbg !29
  %1584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1002, float %1573, float 0.000000e+00) #5, !dbg !29
  %1585 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1002, float %1573, float 0.000000e+00) #5, !dbg !29
  %.04.i1004 = select i1 %.not4.i1003, float %1585, float %1584, !dbg !29
  %1586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1005 = icmp eq i32 %1586, 0, !dbg !29
  %1587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1004, float %251, float %251) #5, !dbg !29
  %1588 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1004, float %251, float %251) #5, !dbg !29
  %.02.i1006 = select i1 %.not5.i1005, float %1588, float %1587, !dbg !29
  br label %__nv_tanhf.exit1007, !dbg !29

__nv_tanhf.exit1007:                              ; preds = %__internal_fmad.exit1.i991, %__internal_fmad.exit3.i996
  %s.1.i995 = phi float [ %1572, %__internal_fmad.exit1.i991 ], [ %.02.i1006, %__internal_fmad.exit3.i996 ], !dbg !29
  %1589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1008 = icmp eq i32 %1589, 0, !dbg !29
  %1590 = tail call float @llvm.nvvm.fabs.ftz.f(float %253) #5, !dbg !29
  %1591 = tail call float @llvm.nvvm.fabs.f(float %253) #5, !dbg !29
  %.01.i1009 = select i1 %.not.i1008, float %1591, float %1590, !dbg !29
  %1592 = fcmp ult float %.01.i1009, 0x3FE3333340000000, !dbg !29
  br i1 %1592, label %__internal_fmad.exit3.i1015, label %__internal_fmad.exit1.i1010, !dbg !29

__internal_fmad.exit1.i1010:                      ; preds = %__nv_tanhf.exit1007
  %1593 = fmul float %.01.i1009, 0x4007154760000000, !dbg !29
  %1594 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1593) #5, !dbg !29
  %1595 = fadd float %1594, 1.000000e+00, !dbg !29
  %1596 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1595) #6, !dbg !29, !srcloc !30
  %1597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1011 = icmp eq i32 %1597, 0, !dbg !29
  %1598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1596, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1599 = tail call float @llvm.nvvm.fma.rn.f(float %1596, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1012 = select i1 %.not6.i1011, float %1599, float %1598, !dbg !29
  %1600 = fcmp oge float %.01.i1009, 0x4022059680000000, !dbg !29
  %s.0.i1013 = select i1 %1600, float 1.000000e+00, float %.03.i1012, !dbg !29
  %1601 = bitcast float %s.0.i1013 to i32, !dbg !29
  %1602 = bitcast float %253 to i32, !dbg !29
  %1603 = and i32 %1602, -2147483648, !dbg !29
  %1604 = or i32 %1603, %1601, !dbg !29
  %1605 = bitcast i32 %1604 to float, !dbg !29
  br label %__nv_tanhf.exit1026, !dbg !29

__internal_fmad.exit3.i1015:                      ; preds = %__nv_tanhf.exit1007
  %1606 = fmul float %253, %253, !dbg !29
  %1607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1016 = icmp eq i32 %1607, 0, !dbg !29
  %1608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1606, float 0xBFAAC795C0000000) #5, !dbg !29
  %1609 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1606, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1017 = select i1 %.not1.i1016, float %1609, float %1608, !dbg !29
  %1610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1018 = icmp eq i32 %1610, 0, !dbg !29
  %1611 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1017, float %1606, float 0x3FC10B2820000000) #5, !dbg !29
  %1612 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1017, float %1606, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1019 = select i1 %.not2.i1018, float %1612, float %1611, !dbg !29
  %1613 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1020 = icmp eq i32 %1613, 0, !dbg !29
  %1614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1019, float %1606, float 0xBFD5553DA0000000) #5, !dbg !29
  %1615 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1019, float %1606, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1021 = select i1 %.not3.i1020, float %1615, float %1614, !dbg !29
  %1616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1022 = icmp eq i32 %1616, 0, !dbg !29
  %1617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1021, float %1606, float 0.000000e+00) #5, !dbg !29
  %1618 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1021, float %1606, float 0.000000e+00) #5, !dbg !29
  %.04.i1023 = select i1 %.not4.i1022, float %1618, float %1617, !dbg !29
  %1619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1024 = icmp eq i32 %1619, 0, !dbg !29
  %1620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1023, float %253, float %253) #5, !dbg !29
  %1621 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1023, float %253, float %253) #5, !dbg !29
  %.02.i1025 = select i1 %.not5.i1024, float %1621, float %1620, !dbg !29
  br label %__nv_tanhf.exit1026, !dbg !29

__nv_tanhf.exit1026:                              ; preds = %__internal_fmad.exit1.i1010, %__internal_fmad.exit3.i1015
  %s.1.i1014 = phi float [ %1605, %__internal_fmad.exit1.i1010 ], [ %.02.i1025, %__internal_fmad.exit3.i1015 ], !dbg !29
  %1622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1027 = icmp eq i32 %1622, 0, !dbg !29
  %1623 = tail call float @llvm.nvvm.fabs.ftz.f(float %255) #5, !dbg !29
  %1624 = tail call float @llvm.nvvm.fabs.f(float %255) #5, !dbg !29
  %.01.i1028 = select i1 %.not.i1027, float %1624, float %1623, !dbg !29
  %1625 = fcmp ult float %.01.i1028, 0x3FE3333340000000, !dbg !29
  br i1 %1625, label %__internal_fmad.exit3.i1034, label %__internal_fmad.exit1.i1029, !dbg !29

__internal_fmad.exit1.i1029:                      ; preds = %__nv_tanhf.exit1026
  %1626 = fmul float %.01.i1028, 0x4007154760000000, !dbg !29
  %1627 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1626) #5, !dbg !29
  %1628 = fadd float %1627, 1.000000e+00, !dbg !29
  %1629 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1628) #6, !dbg !29, !srcloc !30
  %1630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1030 = icmp eq i32 %1630, 0, !dbg !29
  %1631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1629, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1632 = tail call float @llvm.nvvm.fma.rn.f(float %1629, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1031 = select i1 %.not6.i1030, float %1632, float %1631, !dbg !29
  %1633 = fcmp oge float %.01.i1028, 0x4022059680000000, !dbg !29
  %s.0.i1032 = select i1 %1633, float 1.000000e+00, float %.03.i1031, !dbg !29
  %1634 = bitcast float %s.0.i1032 to i32, !dbg !29
  %1635 = bitcast float %255 to i32, !dbg !29
  %1636 = and i32 %1635, -2147483648, !dbg !29
  %1637 = or i32 %1636, %1634, !dbg !29
  %1638 = bitcast i32 %1637 to float, !dbg !29
  br label %__nv_tanhf.exit1045, !dbg !29

__internal_fmad.exit3.i1034:                      ; preds = %__nv_tanhf.exit1026
  %1639 = fmul float %255, %255, !dbg !29
  %1640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1035 = icmp eq i32 %1640, 0, !dbg !29
  %1641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1639, float 0xBFAAC795C0000000) #5, !dbg !29
  %1642 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1639, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1036 = select i1 %.not1.i1035, float %1642, float %1641, !dbg !29
  %1643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1037 = icmp eq i32 %1643, 0, !dbg !29
  %1644 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1036, float %1639, float 0x3FC10B2820000000) #5, !dbg !29
  %1645 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1036, float %1639, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1038 = select i1 %.not2.i1037, float %1645, float %1644, !dbg !29
  %1646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1039 = icmp eq i32 %1646, 0, !dbg !29
  %1647 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1038, float %1639, float 0xBFD5553DA0000000) #5, !dbg !29
  %1648 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1038, float %1639, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1040 = select i1 %.not3.i1039, float %1648, float %1647, !dbg !29
  %1649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1041 = icmp eq i32 %1649, 0, !dbg !29
  %1650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1040, float %1639, float 0.000000e+00) #5, !dbg !29
  %1651 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1040, float %1639, float 0.000000e+00) #5, !dbg !29
  %.04.i1042 = select i1 %.not4.i1041, float %1651, float %1650, !dbg !29
  %1652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1043 = icmp eq i32 %1652, 0, !dbg !29
  %1653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1042, float %255, float %255) #5, !dbg !29
  %1654 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1042, float %255, float %255) #5, !dbg !29
  %.02.i1044 = select i1 %.not5.i1043, float %1654, float %1653, !dbg !29
  br label %__nv_tanhf.exit1045, !dbg !29

__nv_tanhf.exit1045:                              ; preds = %__internal_fmad.exit1.i1029, %__internal_fmad.exit3.i1034
  %s.1.i1033 = phi float [ %1638, %__internal_fmad.exit1.i1029 ], [ %.02.i1044, %__internal_fmad.exit3.i1034 ], !dbg !29
  %1655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1046 = icmp eq i32 %1655, 0, !dbg !29
  %1656 = tail call float @llvm.nvvm.fabs.ftz.f(float %257) #5, !dbg !29
  %1657 = tail call float @llvm.nvvm.fabs.f(float %257) #5, !dbg !29
  %.01.i1047 = select i1 %.not.i1046, float %1657, float %1656, !dbg !29
  %1658 = fcmp ult float %.01.i1047, 0x3FE3333340000000, !dbg !29
  br i1 %1658, label %__internal_fmad.exit3.i1053, label %__internal_fmad.exit1.i1048, !dbg !29

__internal_fmad.exit1.i1048:                      ; preds = %__nv_tanhf.exit1045
  %1659 = fmul float %.01.i1047, 0x4007154760000000, !dbg !29
  %1660 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1659) #5, !dbg !29
  %1661 = fadd float %1660, 1.000000e+00, !dbg !29
  %1662 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1661) #6, !dbg !29, !srcloc !30
  %1663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1049 = icmp eq i32 %1663, 0, !dbg !29
  %1664 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1662, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1665 = tail call float @llvm.nvvm.fma.rn.f(float %1662, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1050 = select i1 %.not6.i1049, float %1665, float %1664, !dbg !29
  %1666 = fcmp oge float %.01.i1047, 0x4022059680000000, !dbg !29
  %s.0.i1051 = select i1 %1666, float 1.000000e+00, float %.03.i1050, !dbg !29
  %1667 = bitcast float %s.0.i1051 to i32, !dbg !29
  %1668 = bitcast float %257 to i32, !dbg !29
  %1669 = and i32 %1668, -2147483648, !dbg !29
  %1670 = or i32 %1669, %1667, !dbg !29
  %1671 = bitcast i32 %1670 to float, !dbg !29
  br label %__nv_tanhf.exit1064, !dbg !29

__internal_fmad.exit3.i1053:                      ; preds = %__nv_tanhf.exit1045
  %1672 = fmul float %257, %257, !dbg !29
  %1673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1054 = icmp eq i32 %1673, 0, !dbg !29
  %1674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1672, float 0xBFAAC795C0000000) #5, !dbg !29
  %1675 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1672, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1055 = select i1 %.not1.i1054, float %1675, float %1674, !dbg !29
  %1676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1056 = icmp eq i32 %1676, 0, !dbg !29
  %1677 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1055, float %1672, float 0x3FC10B2820000000) #5, !dbg !29
  %1678 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1055, float %1672, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1057 = select i1 %.not2.i1056, float %1678, float %1677, !dbg !29
  %1679 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1058 = icmp eq i32 %1679, 0, !dbg !29
  %1680 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1057, float %1672, float 0xBFD5553DA0000000) #5, !dbg !29
  %1681 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1057, float %1672, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1059 = select i1 %.not3.i1058, float %1681, float %1680, !dbg !29
  %1682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1060 = icmp eq i32 %1682, 0, !dbg !29
  %1683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1059, float %1672, float 0.000000e+00) #5, !dbg !29
  %1684 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1059, float %1672, float 0.000000e+00) #5, !dbg !29
  %.04.i1061 = select i1 %.not4.i1060, float %1684, float %1683, !dbg !29
  %1685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1062 = icmp eq i32 %1685, 0, !dbg !29
  %1686 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1061, float %257, float %257) #5, !dbg !29
  %1687 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1061, float %257, float %257) #5, !dbg !29
  %.02.i1063 = select i1 %.not5.i1062, float %1687, float %1686, !dbg !29
  br label %__nv_tanhf.exit1064, !dbg !29

__nv_tanhf.exit1064:                              ; preds = %__internal_fmad.exit1.i1048, %__internal_fmad.exit3.i1053
  %s.1.i1052 = phi float [ %1671, %__internal_fmad.exit1.i1048 ], [ %.02.i1063, %__internal_fmad.exit3.i1053 ], !dbg !29
  %1688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1065 = icmp eq i32 %1688, 0, !dbg !29
  %1689 = tail call float @llvm.nvvm.fabs.ftz.f(float %259) #5, !dbg !29
  %1690 = tail call float @llvm.nvvm.fabs.f(float %259) #5, !dbg !29
  %.01.i1066 = select i1 %.not.i1065, float %1690, float %1689, !dbg !29
  %1691 = fcmp ult float %.01.i1066, 0x3FE3333340000000, !dbg !29
  br i1 %1691, label %__internal_fmad.exit3.i1072, label %__internal_fmad.exit1.i1067, !dbg !29

__internal_fmad.exit1.i1067:                      ; preds = %__nv_tanhf.exit1064
  %1692 = fmul float %.01.i1066, 0x4007154760000000, !dbg !29
  %1693 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1692) #5, !dbg !29
  %1694 = fadd float %1693, 1.000000e+00, !dbg !29
  %1695 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1694) #6, !dbg !29, !srcloc !30
  %1696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1068 = icmp eq i32 %1696, 0, !dbg !29
  %1697 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1695, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1698 = tail call float @llvm.nvvm.fma.rn.f(float %1695, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1069 = select i1 %.not6.i1068, float %1698, float %1697, !dbg !29
  %1699 = fcmp oge float %.01.i1066, 0x4022059680000000, !dbg !29
  %s.0.i1070 = select i1 %1699, float 1.000000e+00, float %.03.i1069, !dbg !29
  %1700 = bitcast float %s.0.i1070 to i32, !dbg !29
  %1701 = bitcast float %259 to i32, !dbg !29
  %1702 = and i32 %1701, -2147483648, !dbg !29
  %1703 = or i32 %1702, %1700, !dbg !29
  %1704 = bitcast i32 %1703 to float, !dbg !29
  br label %__nv_tanhf.exit1083, !dbg !29

__internal_fmad.exit3.i1072:                      ; preds = %__nv_tanhf.exit1064
  %1705 = fmul float %259, %259, !dbg !29
  %1706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1073 = icmp eq i32 %1706, 0, !dbg !29
  %1707 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1705, float 0xBFAAC795C0000000) #5, !dbg !29
  %1708 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1705, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1074 = select i1 %.not1.i1073, float %1708, float %1707, !dbg !29
  %1709 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1075 = icmp eq i32 %1709, 0, !dbg !29
  %1710 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1074, float %1705, float 0x3FC10B2820000000) #5, !dbg !29
  %1711 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1074, float %1705, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1076 = select i1 %.not2.i1075, float %1711, float %1710, !dbg !29
  %1712 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1077 = icmp eq i32 %1712, 0, !dbg !29
  %1713 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1076, float %1705, float 0xBFD5553DA0000000) #5, !dbg !29
  %1714 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1076, float %1705, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1078 = select i1 %.not3.i1077, float %1714, float %1713, !dbg !29
  %1715 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1079 = icmp eq i32 %1715, 0, !dbg !29
  %1716 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1078, float %1705, float 0.000000e+00) #5, !dbg !29
  %1717 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1078, float %1705, float 0.000000e+00) #5, !dbg !29
  %.04.i1080 = select i1 %.not4.i1079, float %1717, float %1716, !dbg !29
  %1718 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1081 = icmp eq i32 %1718, 0, !dbg !29
  %1719 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1080, float %259, float %259) #5, !dbg !29
  %1720 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1080, float %259, float %259) #5, !dbg !29
  %.02.i1082 = select i1 %.not5.i1081, float %1720, float %1719, !dbg !29
  br label %__nv_tanhf.exit1083, !dbg !29

__nv_tanhf.exit1083:                              ; preds = %__internal_fmad.exit1.i1067, %__internal_fmad.exit3.i1072
  %s.1.i1071 = phi float [ %1704, %__internal_fmad.exit1.i1067 ], [ %.02.i1082, %__internal_fmad.exit3.i1072 ], !dbg !29
  %1721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1084 = icmp eq i32 %1721, 0, !dbg !29
  %1722 = tail call float @llvm.nvvm.fabs.ftz.f(float %261) #5, !dbg !29
  %1723 = tail call float @llvm.nvvm.fabs.f(float %261) #5, !dbg !29
  %.01.i1085 = select i1 %.not.i1084, float %1723, float %1722, !dbg !29
  %1724 = fcmp ult float %.01.i1085, 0x3FE3333340000000, !dbg !29
  br i1 %1724, label %__internal_fmad.exit3.i1091, label %__internal_fmad.exit1.i1086, !dbg !29

__internal_fmad.exit1.i1086:                      ; preds = %__nv_tanhf.exit1083
  %1725 = fmul float %.01.i1085, 0x4007154760000000, !dbg !29
  %1726 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1725) #5, !dbg !29
  %1727 = fadd float %1726, 1.000000e+00, !dbg !29
  %1728 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1727) #6, !dbg !29, !srcloc !30
  %1729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1087 = icmp eq i32 %1729, 0, !dbg !29
  %1730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1728, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1731 = tail call float @llvm.nvvm.fma.rn.f(float %1728, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1088 = select i1 %.not6.i1087, float %1731, float %1730, !dbg !29
  %1732 = fcmp oge float %.01.i1085, 0x4022059680000000, !dbg !29
  %s.0.i1089 = select i1 %1732, float 1.000000e+00, float %.03.i1088, !dbg !29
  %1733 = bitcast float %s.0.i1089 to i32, !dbg !29
  %1734 = bitcast float %261 to i32, !dbg !29
  %1735 = and i32 %1734, -2147483648, !dbg !29
  %1736 = or i32 %1735, %1733, !dbg !29
  %1737 = bitcast i32 %1736 to float, !dbg !29
  br label %__nv_tanhf.exit1102, !dbg !29

__internal_fmad.exit3.i1091:                      ; preds = %__nv_tanhf.exit1083
  %1738 = fmul float %261, %261, !dbg !29
  %1739 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1092 = icmp eq i32 %1739, 0, !dbg !29
  %1740 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1738, float 0xBFAAC795C0000000) #5, !dbg !29
  %1741 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1738, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1093 = select i1 %.not1.i1092, float %1741, float %1740, !dbg !29
  %1742 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1094 = icmp eq i32 %1742, 0, !dbg !29
  %1743 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1093, float %1738, float 0x3FC10B2820000000) #5, !dbg !29
  %1744 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1093, float %1738, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1095 = select i1 %.not2.i1094, float %1744, float %1743, !dbg !29
  %1745 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1096 = icmp eq i32 %1745, 0, !dbg !29
  %1746 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1095, float %1738, float 0xBFD5553DA0000000) #5, !dbg !29
  %1747 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1095, float %1738, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1097 = select i1 %.not3.i1096, float %1747, float %1746, !dbg !29
  %1748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1098 = icmp eq i32 %1748, 0, !dbg !29
  %1749 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1097, float %1738, float 0.000000e+00) #5, !dbg !29
  %1750 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1097, float %1738, float 0.000000e+00) #5, !dbg !29
  %.04.i1099 = select i1 %.not4.i1098, float %1750, float %1749, !dbg !29
  %1751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1100 = icmp eq i32 %1751, 0, !dbg !29
  %1752 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1099, float %261, float %261) #5, !dbg !29
  %1753 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1099, float %261, float %261) #5, !dbg !29
  %.02.i1101 = select i1 %.not5.i1100, float %1753, float %1752, !dbg !29
  br label %__nv_tanhf.exit1102, !dbg !29

__nv_tanhf.exit1102:                              ; preds = %__internal_fmad.exit1.i1086, %__internal_fmad.exit3.i1091
  %s.1.i1090 = phi float [ %1737, %__internal_fmad.exit1.i1086 ], [ %.02.i1101, %__internal_fmad.exit3.i1091 ], !dbg !29
  %1754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1103 = icmp eq i32 %1754, 0, !dbg !29
  %1755 = tail call float @llvm.nvvm.fabs.ftz.f(float %263) #5, !dbg !29
  %1756 = tail call float @llvm.nvvm.fabs.f(float %263) #5, !dbg !29
  %.01.i1104 = select i1 %.not.i1103, float %1756, float %1755, !dbg !29
  %1757 = fcmp ult float %.01.i1104, 0x3FE3333340000000, !dbg !29
  br i1 %1757, label %__internal_fmad.exit3.i1110, label %__internal_fmad.exit1.i1105, !dbg !29

__internal_fmad.exit1.i1105:                      ; preds = %__nv_tanhf.exit1102
  %1758 = fmul float %.01.i1104, 0x4007154760000000, !dbg !29
  %1759 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1758) #5, !dbg !29
  %1760 = fadd float %1759, 1.000000e+00, !dbg !29
  %1761 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1760) #6, !dbg !29, !srcloc !30
  %1762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1106 = icmp eq i32 %1762, 0, !dbg !29
  %1763 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1761, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1764 = tail call float @llvm.nvvm.fma.rn.f(float %1761, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1107 = select i1 %.not6.i1106, float %1764, float %1763, !dbg !29
  %1765 = fcmp oge float %.01.i1104, 0x4022059680000000, !dbg !29
  %s.0.i1108 = select i1 %1765, float 1.000000e+00, float %.03.i1107, !dbg !29
  %1766 = bitcast float %s.0.i1108 to i32, !dbg !29
  %1767 = bitcast float %263 to i32, !dbg !29
  %1768 = and i32 %1767, -2147483648, !dbg !29
  %1769 = or i32 %1768, %1766, !dbg !29
  %1770 = bitcast i32 %1769 to float, !dbg !29
  br label %__nv_tanhf.exit1121, !dbg !29

__internal_fmad.exit3.i1110:                      ; preds = %__nv_tanhf.exit1102
  %1771 = fmul float %263, %263, !dbg !29
  %1772 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1111 = icmp eq i32 %1772, 0, !dbg !29
  %1773 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1771, float 0xBFAAC795C0000000) #5, !dbg !29
  %1774 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1771, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1112 = select i1 %.not1.i1111, float %1774, float %1773, !dbg !29
  %1775 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1113 = icmp eq i32 %1775, 0, !dbg !29
  %1776 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1112, float %1771, float 0x3FC10B2820000000) #5, !dbg !29
  %1777 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1112, float %1771, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1114 = select i1 %.not2.i1113, float %1777, float %1776, !dbg !29
  %1778 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1115 = icmp eq i32 %1778, 0, !dbg !29
  %1779 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1114, float %1771, float 0xBFD5553DA0000000) #5, !dbg !29
  %1780 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1114, float %1771, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1116 = select i1 %.not3.i1115, float %1780, float %1779, !dbg !29
  %1781 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1117 = icmp eq i32 %1781, 0, !dbg !29
  %1782 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1116, float %1771, float 0.000000e+00) #5, !dbg !29
  %1783 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1116, float %1771, float 0.000000e+00) #5, !dbg !29
  %.04.i1118 = select i1 %.not4.i1117, float %1783, float %1782, !dbg !29
  %1784 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1119 = icmp eq i32 %1784, 0, !dbg !29
  %1785 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1118, float %263, float %263) #5, !dbg !29
  %1786 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1118, float %263, float %263) #5, !dbg !29
  %.02.i1120 = select i1 %.not5.i1119, float %1786, float %1785, !dbg !29
  br label %__nv_tanhf.exit1121, !dbg !29

__nv_tanhf.exit1121:                              ; preds = %__internal_fmad.exit1.i1105, %__internal_fmad.exit3.i1110
  %s.1.i1109 = phi float [ %1770, %__internal_fmad.exit1.i1105 ], [ %.02.i1120, %__internal_fmad.exit3.i1110 ], !dbg !29
  %1787 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1122 = icmp eq i32 %1787, 0, !dbg !29
  %1788 = tail call float @llvm.nvvm.fabs.ftz.f(float %265) #5, !dbg !29
  %1789 = tail call float @llvm.nvvm.fabs.f(float %265) #5, !dbg !29
  %.01.i1123 = select i1 %.not.i1122, float %1789, float %1788, !dbg !29
  %1790 = fcmp ult float %.01.i1123, 0x3FE3333340000000, !dbg !29
  br i1 %1790, label %__internal_fmad.exit3.i1129, label %__internal_fmad.exit1.i1124, !dbg !29

__internal_fmad.exit1.i1124:                      ; preds = %__nv_tanhf.exit1121
  %1791 = fmul float %.01.i1123, 0x4007154760000000, !dbg !29
  %1792 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1791) #5, !dbg !29
  %1793 = fadd float %1792, 1.000000e+00, !dbg !29
  %1794 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1793) #6, !dbg !29, !srcloc !30
  %1795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1125 = icmp eq i32 %1795, 0, !dbg !29
  %1796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1794, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1797 = tail call float @llvm.nvvm.fma.rn.f(float %1794, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1126 = select i1 %.not6.i1125, float %1797, float %1796, !dbg !29
  %1798 = fcmp oge float %.01.i1123, 0x4022059680000000, !dbg !29
  %s.0.i1127 = select i1 %1798, float 1.000000e+00, float %.03.i1126, !dbg !29
  %1799 = bitcast float %s.0.i1127 to i32, !dbg !29
  %1800 = bitcast float %265 to i32, !dbg !29
  %1801 = and i32 %1800, -2147483648, !dbg !29
  %1802 = or i32 %1801, %1799, !dbg !29
  %1803 = bitcast i32 %1802 to float, !dbg !29
  br label %__nv_tanhf.exit1140, !dbg !29

__internal_fmad.exit3.i1129:                      ; preds = %__nv_tanhf.exit1121
  %1804 = fmul float %265, %265, !dbg !29
  %1805 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1130 = icmp eq i32 %1805, 0, !dbg !29
  %1806 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1804, float 0xBFAAC795C0000000) #5, !dbg !29
  %1807 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1804, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1131 = select i1 %.not1.i1130, float %1807, float %1806, !dbg !29
  %1808 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1132 = icmp eq i32 %1808, 0, !dbg !29
  %1809 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1131, float %1804, float 0x3FC10B2820000000) #5, !dbg !29
  %1810 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1131, float %1804, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1133 = select i1 %.not2.i1132, float %1810, float %1809, !dbg !29
  %1811 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1134 = icmp eq i32 %1811, 0, !dbg !29
  %1812 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1133, float %1804, float 0xBFD5553DA0000000) #5, !dbg !29
  %1813 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1133, float %1804, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1135 = select i1 %.not3.i1134, float %1813, float %1812, !dbg !29
  %1814 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1136 = icmp eq i32 %1814, 0, !dbg !29
  %1815 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1135, float %1804, float 0.000000e+00) #5, !dbg !29
  %1816 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1135, float %1804, float 0.000000e+00) #5, !dbg !29
  %.04.i1137 = select i1 %.not4.i1136, float %1816, float %1815, !dbg !29
  %1817 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1138 = icmp eq i32 %1817, 0, !dbg !29
  %1818 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1137, float %265, float %265) #5, !dbg !29
  %1819 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1137, float %265, float %265) #5, !dbg !29
  %.02.i1139 = select i1 %.not5.i1138, float %1819, float %1818, !dbg !29
  br label %__nv_tanhf.exit1140, !dbg !29

__nv_tanhf.exit1140:                              ; preds = %__internal_fmad.exit1.i1124, %__internal_fmad.exit3.i1129
  %s.1.i1128 = phi float [ %1803, %__internal_fmad.exit1.i1124 ], [ %.02.i1139, %__internal_fmad.exit3.i1129 ], !dbg !29
  %1820 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1141 = icmp eq i32 %1820, 0, !dbg !29
  %1821 = tail call float @llvm.nvvm.fabs.ftz.f(float %267) #5, !dbg !29
  %1822 = tail call float @llvm.nvvm.fabs.f(float %267) #5, !dbg !29
  %.01.i1142 = select i1 %.not.i1141, float %1822, float %1821, !dbg !29
  %1823 = fcmp ult float %.01.i1142, 0x3FE3333340000000, !dbg !29
  br i1 %1823, label %__internal_fmad.exit3.i1148, label %__internal_fmad.exit1.i1143, !dbg !29

__internal_fmad.exit1.i1143:                      ; preds = %__nv_tanhf.exit1140
  %1824 = fmul float %.01.i1142, 0x4007154760000000, !dbg !29
  %1825 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1824) #5, !dbg !29
  %1826 = fadd float %1825, 1.000000e+00, !dbg !29
  %1827 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1826) #6, !dbg !29, !srcloc !30
  %1828 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1144 = icmp eq i32 %1828, 0, !dbg !29
  %1829 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1827, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1830 = tail call float @llvm.nvvm.fma.rn.f(float %1827, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1145 = select i1 %.not6.i1144, float %1830, float %1829, !dbg !29
  %1831 = fcmp oge float %.01.i1142, 0x4022059680000000, !dbg !29
  %s.0.i1146 = select i1 %1831, float 1.000000e+00, float %.03.i1145, !dbg !29
  %1832 = bitcast float %s.0.i1146 to i32, !dbg !29
  %1833 = bitcast float %267 to i32, !dbg !29
  %1834 = and i32 %1833, -2147483648, !dbg !29
  %1835 = or i32 %1834, %1832, !dbg !29
  %1836 = bitcast i32 %1835 to float, !dbg !29
  br label %__nv_tanhf.exit1159, !dbg !29

__internal_fmad.exit3.i1148:                      ; preds = %__nv_tanhf.exit1140
  %1837 = fmul float %267, %267, !dbg !29
  %1838 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1149 = icmp eq i32 %1838, 0, !dbg !29
  %1839 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1837, float 0xBFAAC795C0000000) #5, !dbg !29
  %1840 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1837, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1150 = select i1 %.not1.i1149, float %1840, float %1839, !dbg !29
  %1841 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1151 = icmp eq i32 %1841, 0, !dbg !29
  %1842 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1150, float %1837, float 0x3FC10B2820000000) #5, !dbg !29
  %1843 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1150, float %1837, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1152 = select i1 %.not2.i1151, float %1843, float %1842, !dbg !29
  %1844 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1153 = icmp eq i32 %1844, 0, !dbg !29
  %1845 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1152, float %1837, float 0xBFD5553DA0000000) #5, !dbg !29
  %1846 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1152, float %1837, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1154 = select i1 %.not3.i1153, float %1846, float %1845, !dbg !29
  %1847 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1155 = icmp eq i32 %1847, 0, !dbg !29
  %1848 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1154, float %1837, float 0.000000e+00) #5, !dbg !29
  %1849 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1154, float %1837, float 0.000000e+00) #5, !dbg !29
  %.04.i1156 = select i1 %.not4.i1155, float %1849, float %1848, !dbg !29
  %1850 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1157 = icmp eq i32 %1850, 0, !dbg !29
  %1851 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1156, float %267, float %267) #5, !dbg !29
  %1852 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1156, float %267, float %267) #5, !dbg !29
  %.02.i1158 = select i1 %.not5.i1157, float %1852, float %1851, !dbg !29
  br label %__nv_tanhf.exit1159, !dbg !29

__nv_tanhf.exit1159:                              ; preds = %__internal_fmad.exit1.i1143, %__internal_fmad.exit3.i1148
  %s.1.i1147 = phi float [ %1836, %__internal_fmad.exit1.i1143 ], [ %.02.i1158, %__internal_fmad.exit3.i1148 ], !dbg !29
  %1853 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1160 = icmp eq i32 %1853, 0, !dbg !29
  %1854 = tail call float @llvm.nvvm.fabs.ftz.f(float %269) #5, !dbg !29
  %1855 = tail call float @llvm.nvvm.fabs.f(float %269) #5, !dbg !29
  %.01.i1161 = select i1 %.not.i1160, float %1855, float %1854, !dbg !29
  %1856 = fcmp ult float %.01.i1161, 0x3FE3333340000000, !dbg !29
  br i1 %1856, label %__internal_fmad.exit3.i1167, label %__internal_fmad.exit1.i1162, !dbg !29

__internal_fmad.exit1.i1162:                      ; preds = %__nv_tanhf.exit1159
  %1857 = fmul float %.01.i1161, 0x4007154760000000, !dbg !29
  %1858 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1857) #5, !dbg !29
  %1859 = fadd float %1858, 1.000000e+00, !dbg !29
  %1860 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1859) #6, !dbg !29, !srcloc !30
  %1861 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1163 = icmp eq i32 %1861, 0, !dbg !29
  %1862 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1860, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1863 = tail call float @llvm.nvvm.fma.rn.f(float %1860, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1164 = select i1 %.not6.i1163, float %1863, float %1862, !dbg !29
  %1864 = fcmp oge float %.01.i1161, 0x4022059680000000, !dbg !29
  %s.0.i1165 = select i1 %1864, float 1.000000e+00, float %.03.i1164, !dbg !29
  %1865 = bitcast float %s.0.i1165 to i32, !dbg !29
  %1866 = bitcast float %269 to i32, !dbg !29
  %1867 = and i32 %1866, -2147483648, !dbg !29
  %1868 = or i32 %1867, %1865, !dbg !29
  %1869 = bitcast i32 %1868 to float, !dbg !29
  br label %__nv_tanhf.exit1178, !dbg !29

__internal_fmad.exit3.i1167:                      ; preds = %__nv_tanhf.exit1159
  %1870 = fmul float %269, %269, !dbg !29
  %1871 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1168 = icmp eq i32 %1871, 0, !dbg !29
  %1872 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1870, float 0xBFAAC795C0000000) #5, !dbg !29
  %1873 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1870, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1169 = select i1 %.not1.i1168, float %1873, float %1872, !dbg !29
  %1874 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1170 = icmp eq i32 %1874, 0, !dbg !29
  %1875 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1169, float %1870, float 0x3FC10B2820000000) #5, !dbg !29
  %1876 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1169, float %1870, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1171 = select i1 %.not2.i1170, float %1876, float %1875, !dbg !29
  %1877 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1172 = icmp eq i32 %1877, 0, !dbg !29
  %1878 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1171, float %1870, float 0xBFD5553DA0000000) #5, !dbg !29
  %1879 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1171, float %1870, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1173 = select i1 %.not3.i1172, float %1879, float %1878, !dbg !29
  %1880 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1174 = icmp eq i32 %1880, 0, !dbg !29
  %1881 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1173, float %1870, float 0.000000e+00) #5, !dbg !29
  %1882 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1173, float %1870, float 0.000000e+00) #5, !dbg !29
  %.04.i1175 = select i1 %.not4.i1174, float %1882, float %1881, !dbg !29
  %1883 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1176 = icmp eq i32 %1883, 0, !dbg !29
  %1884 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1175, float %269, float %269) #5, !dbg !29
  %1885 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1175, float %269, float %269) #5, !dbg !29
  %.02.i1177 = select i1 %.not5.i1176, float %1885, float %1884, !dbg !29
  br label %__nv_tanhf.exit1178, !dbg !29

__nv_tanhf.exit1178:                              ; preds = %__internal_fmad.exit1.i1162, %__internal_fmad.exit3.i1167
  %s.1.i1166 = phi float [ %1869, %__internal_fmad.exit1.i1162 ], [ %.02.i1177, %__internal_fmad.exit3.i1167 ], !dbg !29
  %1886 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1179 = icmp eq i32 %1886, 0, !dbg !29
  %1887 = tail call float @llvm.nvvm.fabs.ftz.f(float %271) #5, !dbg !29
  %1888 = tail call float @llvm.nvvm.fabs.f(float %271) #5, !dbg !29
  %.01.i1180 = select i1 %.not.i1179, float %1888, float %1887, !dbg !29
  %1889 = fcmp ult float %.01.i1180, 0x3FE3333340000000, !dbg !29
  br i1 %1889, label %__internal_fmad.exit3.i1186, label %__internal_fmad.exit1.i1181, !dbg !29

__internal_fmad.exit1.i1181:                      ; preds = %__nv_tanhf.exit1178
  %1890 = fmul float %.01.i1180, 0x4007154760000000, !dbg !29
  %1891 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1890) #5, !dbg !29
  %1892 = fadd float %1891, 1.000000e+00, !dbg !29
  %1893 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1892) #6, !dbg !29, !srcloc !30
  %1894 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1182 = icmp eq i32 %1894, 0, !dbg !29
  %1895 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1893, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1896 = tail call float @llvm.nvvm.fma.rn.f(float %1893, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1183 = select i1 %.not6.i1182, float %1896, float %1895, !dbg !29
  %1897 = fcmp oge float %.01.i1180, 0x4022059680000000, !dbg !29
  %s.0.i1184 = select i1 %1897, float 1.000000e+00, float %.03.i1183, !dbg !29
  %1898 = bitcast float %s.0.i1184 to i32, !dbg !29
  %1899 = bitcast float %271 to i32, !dbg !29
  %1900 = and i32 %1899, -2147483648, !dbg !29
  %1901 = or i32 %1900, %1898, !dbg !29
  %1902 = bitcast i32 %1901 to float, !dbg !29
  br label %__nv_tanhf.exit1197, !dbg !29

__internal_fmad.exit3.i1186:                      ; preds = %__nv_tanhf.exit1178
  %1903 = fmul float %271, %271, !dbg !29
  %1904 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1187 = icmp eq i32 %1904, 0, !dbg !29
  %1905 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1903, float 0xBFAAC795C0000000) #5, !dbg !29
  %1906 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1903, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1188 = select i1 %.not1.i1187, float %1906, float %1905, !dbg !29
  %1907 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1189 = icmp eq i32 %1907, 0, !dbg !29
  %1908 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1188, float %1903, float 0x3FC10B2820000000) #5, !dbg !29
  %1909 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1188, float %1903, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1190 = select i1 %.not2.i1189, float %1909, float %1908, !dbg !29
  %1910 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1191 = icmp eq i32 %1910, 0, !dbg !29
  %1911 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1190, float %1903, float 0xBFD5553DA0000000) #5, !dbg !29
  %1912 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1190, float %1903, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1192 = select i1 %.not3.i1191, float %1912, float %1911, !dbg !29
  %1913 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1193 = icmp eq i32 %1913, 0, !dbg !29
  %1914 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1192, float %1903, float 0.000000e+00) #5, !dbg !29
  %1915 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1192, float %1903, float 0.000000e+00) #5, !dbg !29
  %.04.i1194 = select i1 %.not4.i1193, float %1915, float %1914, !dbg !29
  %1916 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1195 = icmp eq i32 %1916, 0, !dbg !29
  %1917 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1194, float %271, float %271) #5, !dbg !29
  %1918 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1194, float %271, float %271) #5, !dbg !29
  %.02.i1196 = select i1 %.not5.i1195, float %1918, float %1917, !dbg !29
  br label %__nv_tanhf.exit1197, !dbg !29

__nv_tanhf.exit1197:                              ; preds = %__internal_fmad.exit1.i1181, %__internal_fmad.exit3.i1186
  %s.1.i1185 = phi float [ %1902, %__internal_fmad.exit1.i1181 ], [ %.02.i1196, %__internal_fmad.exit3.i1186 ], !dbg !29
  %1919 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1198 = icmp eq i32 %1919, 0, !dbg !29
  %1920 = tail call float @llvm.nvvm.fabs.ftz.f(float %273) #5, !dbg !29
  %1921 = tail call float @llvm.nvvm.fabs.f(float %273) #5, !dbg !29
  %.01.i1199 = select i1 %.not.i1198, float %1921, float %1920, !dbg !29
  %1922 = fcmp ult float %.01.i1199, 0x3FE3333340000000, !dbg !29
  br i1 %1922, label %__internal_fmad.exit3.i1205, label %__internal_fmad.exit1.i1200, !dbg !29

__internal_fmad.exit1.i1200:                      ; preds = %__nv_tanhf.exit1197
  %1923 = fmul float %.01.i1199, 0x4007154760000000, !dbg !29
  %1924 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1923) #5, !dbg !29
  %1925 = fadd float %1924, 1.000000e+00, !dbg !29
  %1926 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1925) #6, !dbg !29, !srcloc !30
  %1927 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1201 = icmp eq i32 %1927, 0, !dbg !29
  %1928 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1926, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1929 = tail call float @llvm.nvvm.fma.rn.f(float %1926, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1202 = select i1 %.not6.i1201, float %1929, float %1928, !dbg !29
  %1930 = fcmp oge float %.01.i1199, 0x4022059680000000, !dbg !29
  %s.0.i1203 = select i1 %1930, float 1.000000e+00, float %.03.i1202, !dbg !29
  %1931 = bitcast float %s.0.i1203 to i32, !dbg !29
  %1932 = bitcast float %273 to i32, !dbg !29
  %1933 = and i32 %1932, -2147483648, !dbg !29
  %1934 = or i32 %1933, %1931, !dbg !29
  %1935 = bitcast i32 %1934 to float, !dbg !29
  br label %__nv_tanhf.exit1216, !dbg !29

__internal_fmad.exit3.i1205:                      ; preds = %__nv_tanhf.exit1197
  %1936 = fmul float %273, %273, !dbg !29
  %1937 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1206 = icmp eq i32 %1937, 0, !dbg !29
  %1938 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1936, float 0xBFAAC795C0000000) #5, !dbg !29
  %1939 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1936, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1207 = select i1 %.not1.i1206, float %1939, float %1938, !dbg !29
  %1940 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1208 = icmp eq i32 %1940, 0, !dbg !29
  %1941 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1207, float %1936, float 0x3FC10B2820000000) #5, !dbg !29
  %1942 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1207, float %1936, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1209 = select i1 %.not2.i1208, float %1942, float %1941, !dbg !29
  %1943 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1210 = icmp eq i32 %1943, 0, !dbg !29
  %1944 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1209, float %1936, float 0xBFD5553DA0000000) #5, !dbg !29
  %1945 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1209, float %1936, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1211 = select i1 %.not3.i1210, float %1945, float %1944, !dbg !29
  %1946 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1212 = icmp eq i32 %1946, 0, !dbg !29
  %1947 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1211, float %1936, float 0.000000e+00) #5, !dbg !29
  %1948 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1211, float %1936, float 0.000000e+00) #5, !dbg !29
  %.04.i1213 = select i1 %.not4.i1212, float %1948, float %1947, !dbg !29
  %1949 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1214 = icmp eq i32 %1949, 0, !dbg !29
  %1950 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1213, float %273, float %273) #5, !dbg !29
  %1951 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1213, float %273, float %273) #5, !dbg !29
  %.02.i1215 = select i1 %.not5.i1214, float %1951, float %1950, !dbg !29
  br label %__nv_tanhf.exit1216, !dbg !29

__nv_tanhf.exit1216:                              ; preds = %__internal_fmad.exit1.i1200, %__internal_fmad.exit3.i1205
  %s.1.i1204 = phi float [ %1935, %__internal_fmad.exit1.i1200 ], [ %.02.i1215, %__internal_fmad.exit3.i1205 ], !dbg !29
  %1952 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1217 = icmp eq i32 %1952, 0, !dbg !29
  %1953 = tail call float @llvm.nvvm.fabs.ftz.f(float %275) #5, !dbg !29
  %1954 = tail call float @llvm.nvvm.fabs.f(float %275) #5, !dbg !29
  %.01.i1218 = select i1 %.not.i1217, float %1954, float %1953, !dbg !29
  %1955 = fcmp ult float %.01.i1218, 0x3FE3333340000000, !dbg !29
  br i1 %1955, label %__internal_fmad.exit3.i1224, label %__internal_fmad.exit1.i1219, !dbg !29

__internal_fmad.exit1.i1219:                      ; preds = %__nv_tanhf.exit1216
  %1956 = fmul float %.01.i1218, 0x4007154760000000, !dbg !29
  %1957 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1956) #5, !dbg !29
  %1958 = fadd float %1957, 1.000000e+00, !dbg !29
  %1959 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1958) #6, !dbg !29, !srcloc !30
  %1960 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1220 = icmp eq i32 %1960, 0, !dbg !29
  %1961 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1959, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1962 = tail call float @llvm.nvvm.fma.rn.f(float %1959, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1221 = select i1 %.not6.i1220, float %1962, float %1961, !dbg !29
  %1963 = fcmp oge float %.01.i1218, 0x4022059680000000, !dbg !29
  %s.0.i1222 = select i1 %1963, float 1.000000e+00, float %.03.i1221, !dbg !29
  %1964 = bitcast float %s.0.i1222 to i32, !dbg !29
  %1965 = bitcast float %275 to i32, !dbg !29
  %1966 = and i32 %1965, -2147483648, !dbg !29
  %1967 = or i32 %1966, %1964, !dbg !29
  %1968 = bitcast i32 %1967 to float, !dbg !29
  br label %__nv_tanhf.exit1235, !dbg !29

__internal_fmad.exit3.i1224:                      ; preds = %__nv_tanhf.exit1216
  %1969 = fmul float %275, %275, !dbg !29
  %1970 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1225 = icmp eq i32 %1970, 0, !dbg !29
  %1971 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1969, float 0xBFAAC795C0000000) #5, !dbg !29
  %1972 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1969, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1226 = select i1 %.not1.i1225, float %1972, float %1971, !dbg !29
  %1973 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1227 = icmp eq i32 %1973, 0, !dbg !29
  %1974 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1226, float %1969, float 0x3FC10B2820000000) #5, !dbg !29
  %1975 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1226, float %1969, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1228 = select i1 %.not2.i1227, float %1975, float %1974, !dbg !29
  %1976 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1229 = icmp eq i32 %1976, 0, !dbg !29
  %1977 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1228, float %1969, float 0xBFD5553DA0000000) #5, !dbg !29
  %1978 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1228, float %1969, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1230 = select i1 %.not3.i1229, float %1978, float %1977, !dbg !29
  %1979 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1231 = icmp eq i32 %1979, 0, !dbg !29
  %1980 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1230, float %1969, float 0.000000e+00) #5, !dbg !29
  %1981 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1230, float %1969, float 0.000000e+00) #5, !dbg !29
  %.04.i1232 = select i1 %.not4.i1231, float %1981, float %1980, !dbg !29
  %1982 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1233 = icmp eq i32 %1982, 0, !dbg !29
  %1983 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1232, float %275, float %275) #5, !dbg !29
  %1984 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1232, float %275, float %275) #5, !dbg !29
  %.02.i1234 = select i1 %.not5.i1233, float %1984, float %1983, !dbg !29
  br label %__nv_tanhf.exit1235, !dbg !29

__nv_tanhf.exit1235:                              ; preds = %__internal_fmad.exit1.i1219, %__internal_fmad.exit3.i1224
  %s.1.i1223 = phi float [ %1968, %__internal_fmad.exit1.i1219 ], [ %.02.i1234, %__internal_fmad.exit3.i1224 ], !dbg !29
  %1985 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1236 = icmp eq i32 %1985, 0, !dbg !29
  %1986 = tail call float @llvm.nvvm.fabs.ftz.f(float %277) #5, !dbg !29
  %1987 = tail call float @llvm.nvvm.fabs.f(float %277) #5, !dbg !29
  %.01.i1237 = select i1 %.not.i1236, float %1987, float %1986, !dbg !29
  %1988 = fcmp ult float %.01.i1237, 0x3FE3333340000000, !dbg !29
  br i1 %1988, label %__internal_fmad.exit3.i1243, label %__internal_fmad.exit1.i1238, !dbg !29

__internal_fmad.exit1.i1238:                      ; preds = %__nv_tanhf.exit1235
  %1989 = fmul float %.01.i1237, 0x4007154760000000, !dbg !29
  %1990 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1989) #5, !dbg !29
  %1991 = fadd float %1990, 1.000000e+00, !dbg !29
  %1992 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1991) #6, !dbg !29, !srcloc !30
  %1993 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1239 = icmp eq i32 %1993, 0, !dbg !29
  %1994 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1992, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %1995 = tail call float @llvm.nvvm.fma.rn.f(float %1992, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1240 = select i1 %.not6.i1239, float %1995, float %1994, !dbg !29
  %1996 = fcmp oge float %.01.i1237, 0x4022059680000000, !dbg !29
  %s.0.i1241 = select i1 %1996, float 1.000000e+00, float %.03.i1240, !dbg !29
  %1997 = bitcast float %s.0.i1241 to i32, !dbg !29
  %1998 = bitcast float %277 to i32, !dbg !29
  %1999 = and i32 %1998, -2147483648, !dbg !29
  %2000 = or i32 %1999, %1997, !dbg !29
  %2001 = bitcast i32 %2000 to float, !dbg !29
  br label %__nv_tanhf.exit1254, !dbg !29

__internal_fmad.exit3.i1243:                      ; preds = %__nv_tanhf.exit1235
  %2002 = fmul float %277, %277, !dbg !29
  %2003 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1244 = icmp eq i32 %2003, 0, !dbg !29
  %2004 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2002, float 0xBFAAC795C0000000) #5, !dbg !29
  %2005 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2002, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1245 = select i1 %.not1.i1244, float %2005, float %2004, !dbg !29
  %2006 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1246 = icmp eq i32 %2006, 0, !dbg !29
  %2007 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1245, float %2002, float 0x3FC10B2820000000) #5, !dbg !29
  %2008 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1245, float %2002, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1247 = select i1 %.not2.i1246, float %2008, float %2007, !dbg !29
  %2009 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1248 = icmp eq i32 %2009, 0, !dbg !29
  %2010 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1247, float %2002, float 0xBFD5553DA0000000) #5, !dbg !29
  %2011 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1247, float %2002, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1249 = select i1 %.not3.i1248, float %2011, float %2010, !dbg !29
  %2012 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1250 = icmp eq i32 %2012, 0, !dbg !29
  %2013 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1249, float %2002, float 0.000000e+00) #5, !dbg !29
  %2014 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1249, float %2002, float 0.000000e+00) #5, !dbg !29
  %.04.i1251 = select i1 %.not4.i1250, float %2014, float %2013, !dbg !29
  %2015 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1252 = icmp eq i32 %2015, 0, !dbg !29
  %2016 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1251, float %277, float %277) #5, !dbg !29
  %2017 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1251, float %277, float %277) #5, !dbg !29
  %.02.i1253 = select i1 %.not5.i1252, float %2017, float %2016, !dbg !29
  br label %__nv_tanhf.exit1254, !dbg !29

__nv_tanhf.exit1254:                              ; preds = %__internal_fmad.exit1.i1238, %__internal_fmad.exit3.i1243
  %s.1.i1242 = phi float [ %2001, %__internal_fmad.exit1.i1238 ], [ %.02.i1253, %__internal_fmad.exit3.i1243 ], !dbg !29
  %2018 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1255 = icmp eq i32 %2018, 0, !dbg !29
  %2019 = tail call float @llvm.nvvm.fabs.ftz.f(float %279) #5, !dbg !29
  %2020 = tail call float @llvm.nvvm.fabs.f(float %279) #5, !dbg !29
  %.01.i1256 = select i1 %.not.i1255, float %2020, float %2019, !dbg !29
  %2021 = fcmp ult float %.01.i1256, 0x3FE3333340000000, !dbg !29
  br i1 %2021, label %__internal_fmad.exit3.i1262, label %__internal_fmad.exit1.i1257, !dbg !29

__internal_fmad.exit1.i1257:                      ; preds = %__nv_tanhf.exit1254
  %2022 = fmul float %.01.i1256, 0x4007154760000000, !dbg !29
  %2023 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2022) #5, !dbg !29
  %2024 = fadd float %2023, 1.000000e+00, !dbg !29
  %2025 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2024) #6, !dbg !29, !srcloc !30
  %2026 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1258 = icmp eq i32 %2026, 0, !dbg !29
  %2027 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2025, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2028 = tail call float @llvm.nvvm.fma.rn.f(float %2025, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1259 = select i1 %.not6.i1258, float %2028, float %2027, !dbg !29
  %2029 = fcmp oge float %.01.i1256, 0x4022059680000000, !dbg !29
  %s.0.i1260 = select i1 %2029, float 1.000000e+00, float %.03.i1259, !dbg !29
  %2030 = bitcast float %s.0.i1260 to i32, !dbg !29
  %2031 = bitcast float %279 to i32, !dbg !29
  %2032 = and i32 %2031, -2147483648, !dbg !29
  %2033 = or i32 %2032, %2030, !dbg !29
  %2034 = bitcast i32 %2033 to float, !dbg !29
  br label %__nv_tanhf.exit1273, !dbg !29

__internal_fmad.exit3.i1262:                      ; preds = %__nv_tanhf.exit1254
  %2035 = fmul float %279, %279, !dbg !29
  %2036 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1263 = icmp eq i32 %2036, 0, !dbg !29
  %2037 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2035, float 0xBFAAC795C0000000) #5, !dbg !29
  %2038 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2035, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1264 = select i1 %.not1.i1263, float %2038, float %2037, !dbg !29
  %2039 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1265 = icmp eq i32 %2039, 0, !dbg !29
  %2040 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1264, float %2035, float 0x3FC10B2820000000) #5, !dbg !29
  %2041 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1264, float %2035, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1266 = select i1 %.not2.i1265, float %2041, float %2040, !dbg !29
  %2042 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1267 = icmp eq i32 %2042, 0, !dbg !29
  %2043 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1266, float %2035, float 0xBFD5553DA0000000) #5, !dbg !29
  %2044 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1266, float %2035, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1268 = select i1 %.not3.i1267, float %2044, float %2043, !dbg !29
  %2045 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1269 = icmp eq i32 %2045, 0, !dbg !29
  %2046 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1268, float %2035, float 0.000000e+00) #5, !dbg !29
  %2047 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1268, float %2035, float 0.000000e+00) #5, !dbg !29
  %.04.i1270 = select i1 %.not4.i1269, float %2047, float %2046, !dbg !29
  %2048 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1271 = icmp eq i32 %2048, 0, !dbg !29
  %2049 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1270, float %279, float %279) #5, !dbg !29
  %2050 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1270, float %279, float %279) #5, !dbg !29
  %.02.i1272 = select i1 %.not5.i1271, float %2050, float %2049, !dbg !29
  br label %__nv_tanhf.exit1273, !dbg !29

__nv_tanhf.exit1273:                              ; preds = %__internal_fmad.exit1.i1257, %__internal_fmad.exit3.i1262
  %s.1.i1261 = phi float [ %2034, %__internal_fmad.exit1.i1257 ], [ %.02.i1272, %__internal_fmad.exit3.i1262 ], !dbg !29
  %2051 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1274 = icmp eq i32 %2051, 0, !dbg !29
  %2052 = tail call float @llvm.nvvm.fabs.ftz.f(float %281) #5, !dbg !29
  %2053 = tail call float @llvm.nvvm.fabs.f(float %281) #5, !dbg !29
  %.01.i1275 = select i1 %.not.i1274, float %2053, float %2052, !dbg !29
  %2054 = fcmp ult float %.01.i1275, 0x3FE3333340000000, !dbg !29
  br i1 %2054, label %__internal_fmad.exit3.i1281, label %__internal_fmad.exit1.i1276, !dbg !29

__internal_fmad.exit1.i1276:                      ; preds = %__nv_tanhf.exit1273
  %2055 = fmul float %.01.i1275, 0x4007154760000000, !dbg !29
  %2056 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2055) #5, !dbg !29
  %2057 = fadd float %2056, 1.000000e+00, !dbg !29
  %2058 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2057) #6, !dbg !29, !srcloc !30
  %2059 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1277 = icmp eq i32 %2059, 0, !dbg !29
  %2060 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2058, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2061 = tail call float @llvm.nvvm.fma.rn.f(float %2058, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1278 = select i1 %.not6.i1277, float %2061, float %2060, !dbg !29
  %2062 = fcmp oge float %.01.i1275, 0x4022059680000000, !dbg !29
  %s.0.i1279 = select i1 %2062, float 1.000000e+00, float %.03.i1278, !dbg !29
  %2063 = bitcast float %s.0.i1279 to i32, !dbg !29
  %2064 = bitcast float %281 to i32, !dbg !29
  %2065 = and i32 %2064, -2147483648, !dbg !29
  %2066 = or i32 %2065, %2063, !dbg !29
  %2067 = bitcast i32 %2066 to float, !dbg !29
  br label %__nv_tanhf.exit1292, !dbg !29

__internal_fmad.exit3.i1281:                      ; preds = %__nv_tanhf.exit1273
  %2068 = fmul float %281, %281, !dbg !29
  %2069 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1282 = icmp eq i32 %2069, 0, !dbg !29
  %2070 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2068, float 0xBFAAC795C0000000) #5, !dbg !29
  %2071 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2068, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1283 = select i1 %.not1.i1282, float %2071, float %2070, !dbg !29
  %2072 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1284 = icmp eq i32 %2072, 0, !dbg !29
  %2073 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1283, float %2068, float 0x3FC10B2820000000) #5, !dbg !29
  %2074 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1283, float %2068, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1285 = select i1 %.not2.i1284, float %2074, float %2073, !dbg !29
  %2075 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1286 = icmp eq i32 %2075, 0, !dbg !29
  %2076 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1285, float %2068, float 0xBFD5553DA0000000) #5, !dbg !29
  %2077 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1285, float %2068, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1287 = select i1 %.not3.i1286, float %2077, float %2076, !dbg !29
  %2078 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1288 = icmp eq i32 %2078, 0, !dbg !29
  %2079 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1287, float %2068, float 0.000000e+00) #5, !dbg !29
  %2080 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1287, float %2068, float 0.000000e+00) #5, !dbg !29
  %.04.i1289 = select i1 %.not4.i1288, float %2080, float %2079, !dbg !29
  %2081 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1290 = icmp eq i32 %2081, 0, !dbg !29
  %2082 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1289, float %281, float %281) #5, !dbg !29
  %2083 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1289, float %281, float %281) #5, !dbg !29
  %.02.i1291 = select i1 %.not5.i1290, float %2083, float %2082, !dbg !29
  br label %__nv_tanhf.exit1292, !dbg !29

__nv_tanhf.exit1292:                              ; preds = %__internal_fmad.exit1.i1276, %__internal_fmad.exit3.i1281
  %s.1.i1280 = phi float [ %2067, %__internal_fmad.exit1.i1276 ], [ %.02.i1291, %__internal_fmad.exit3.i1281 ], !dbg !29
  %2084 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1293 = icmp eq i32 %2084, 0, !dbg !29
  %2085 = tail call float @llvm.nvvm.fabs.ftz.f(float %283) #5, !dbg !29
  %2086 = tail call float @llvm.nvvm.fabs.f(float %283) #5, !dbg !29
  %.01.i1294 = select i1 %.not.i1293, float %2086, float %2085, !dbg !29
  %2087 = fcmp ult float %.01.i1294, 0x3FE3333340000000, !dbg !29
  br i1 %2087, label %__internal_fmad.exit3.i1300, label %__internal_fmad.exit1.i1295, !dbg !29

__internal_fmad.exit1.i1295:                      ; preds = %__nv_tanhf.exit1292
  %2088 = fmul float %.01.i1294, 0x4007154760000000, !dbg !29
  %2089 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2088) #5, !dbg !29
  %2090 = fadd float %2089, 1.000000e+00, !dbg !29
  %2091 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2090) #6, !dbg !29, !srcloc !30
  %2092 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1296 = icmp eq i32 %2092, 0, !dbg !29
  %2093 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2091, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2094 = tail call float @llvm.nvvm.fma.rn.f(float %2091, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1297 = select i1 %.not6.i1296, float %2094, float %2093, !dbg !29
  %2095 = fcmp oge float %.01.i1294, 0x4022059680000000, !dbg !29
  %s.0.i1298 = select i1 %2095, float 1.000000e+00, float %.03.i1297, !dbg !29
  %2096 = bitcast float %s.0.i1298 to i32, !dbg !29
  %2097 = bitcast float %283 to i32, !dbg !29
  %2098 = and i32 %2097, -2147483648, !dbg !29
  %2099 = or i32 %2098, %2096, !dbg !29
  %2100 = bitcast i32 %2099 to float, !dbg !29
  br label %__nv_tanhf.exit1311, !dbg !29

__internal_fmad.exit3.i1300:                      ; preds = %__nv_tanhf.exit1292
  %2101 = fmul float %283, %283, !dbg !29
  %2102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1301 = icmp eq i32 %2102, 0, !dbg !29
  %2103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2101, float 0xBFAAC795C0000000) #5, !dbg !29
  %2104 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2101, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1302 = select i1 %.not1.i1301, float %2104, float %2103, !dbg !29
  %2105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1303 = icmp eq i32 %2105, 0, !dbg !29
  %2106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1302, float %2101, float 0x3FC10B2820000000) #5, !dbg !29
  %2107 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1302, float %2101, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1304 = select i1 %.not2.i1303, float %2107, float %2106, !dbg !29
  %2108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1305 = icmp eq i32 %2108, 0, !dbg !29
  %2109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1304, float %2101, float 0xBFD5553DA0000000) #5, !dbg !29
  %2110 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1304, float %2101, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1306 = select i1 %.not3.i1305, float %2110, float %2109, !dbg !29
  %2111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1307 = icmp eq i32 %2111, 0, !dbg !29
  %2112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1306, float %2101, float 0.000000e+00) #5, !dbg !29
  %2113 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1306, float %2101, float 0.000000e+00) #5, !dbg !29
  %.04.i1308 = select i1 %.not4.i1307, float %2113, float %2112, !dbg !29
  %2114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1309 = icmp eq i32 %2114, 0, !dbg !29
  %2115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1308, float %283, float %283) #5, !dbg !29
  %2116 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1308, float %283, float %283) #5, !dbg !29
  %.02.i1310 = select i1 %.not5.i1309, float %2116, float %2115, !dbg !29
  br label %__nv_tanhf.exit1311, !dbg !29

__nv_tanhf.exit1311:                              ; preds = %__internal_fmad.exit1.i1295, %__internal_fmad.exit3.i1300
  %s.1.i1299 = phi float [ %2100, %__internal_fmad.exit1.i1295 ], [ %.02.i1310, %__internal_fmad.exit3.i1300 ], !dbg !29
  %2117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1312 = icmp eq i32 %2117, 0, !dbg !29
  %2118 = tail call float @llvm.nvvm.fabs.ftz.f(float %285) #5, !dbg !29
  %2119 = tail call float @llvm.nvvm.fabs.f(float %285) #5, !dbg !29
  %.01.i1313 = select i1 %.not.i1312, float %2119, float %2118, !dbg !29
  %2120 = fcmp ult float %.01.i1313, 0x3FE3333340000000, !dbg !29
  br i1 %2120, label %__internal_fmad.exit3.i1319, label %__internal_fmad.exit1.i1314, !dbg !29

__internal_fmad.exit1.i1314:                      ; preds = %__nv_tanhf.exit1311
  %2121 = fmul float %.01.i1313, 0x4007154760000000, !dbg !29
  %2122 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2121) #5, !dbg !29
  %2123 = fadd float %2122, 1.000000e+00, !dbg !29
  %2124 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2123) #6, !dbg !29, !srcloc !30
  %2125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1315 = icmp eq i32 %2125, 0, !dbg !29
  %2126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2124, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2127 = tail call float @llvm.nvvm.fma.rn.f(float %2124, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1316 = select i1 %.not6.i1315, float %2127, float %2126, !dbg !29
  %2128 = fcmp oge float %.01.i1313, 0x4022059680000000, !dbg !29
  %s.0.i1317 = select i1 %2128, float 1.000000e+00, float %.03.i1316, !dbg !29
  %2129 = bitcast float %s.0.i1317 to i32, !dbg !29
  %2130 = bitcast float %285 to i32, !dbg !29
  %2131 = and i32 %2130, -2147483648, !dbg !29
  %2132 = or i32 %2131, %2129, !dbg !29
  %2133 = bitcast i32 %2132 to float, !dbg !29
  br label %__nv_tanhf.exit1330, !dbg !29

__internal_fmad.exit3.i1319:                      ; preds = %__nv_tanhf.exit1311
  %2134 = fmul float %285, %285, !dbg !29
  %2135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1320 = icmp eq i32 %2135, 0, !dbg !29
  %2136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2134, float 0xBFAAC795C0000000) #5, !dbg !29
  %2137 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2134, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1321 = select i1 %.not1.i1320, float %2137, float %2136, !dbg !29
  %2138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1322 = icmp eq i32 %2138, 0, !dbg !29
  %2139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1321, float %2134, float 0x3FC10B2820000000) #5, !dbg !29
  %2140 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1321, float %2134, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1323 = select i1 %.not2.i1322, float %2140, float %2139, !dbg !29
  %2141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1324 = icmp eq i32 %2141, 0, !dbg !29
  %2142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1323, float %2134, float 0xBFD5553DA0000000) #5, !dbg !29
  %2143 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1323, float %2134, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1325 = select i1 %.not3.i1324, float %2143, float %2142, !dbg !29
  %2144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1326 = icmp eq i32 %2144, 0, !dbg !29
  %2145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1325, float %2134, float 0.000000e+00) #5, !dbg !29
  %2146 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1325, float %2134, float 0.000000e+00) #5, !dbg !29
  %.04.i1327 = select i1 %.not4.i1326, float %2146, float %2145, !dbg !29
  %2147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1328 = icmp eq i32 %2147, 0, !dbg !29
  %2148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1327, float %285, float %285) #5, !dbg !29
  %2149 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1327, float %285, float %285) #5, !dbg !29
  %.02.i1329 = select i1 %.not5.i1328, float %2149, float %2148, !dbg !29
  br label %__nv_tanhf.exit1330, !dbg !29

__nv_tanhf.exit1330:                              ; preds = %__internal_fmad.exit1.i1314, %__internal_fmad.exit3.i1319
  %s.1.i1318 = phi float [ %2133, %__internal_fmad.exit1.i1314 ], [ %.02.i1329, %__internal_fmad.exit3.i1319 ], !dbg !29
  %2150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1331 = icmp eq i32 %2150, 0, !dbg !29
  %2151 = tail call float @llvm.nvvm.fabs.ftz.f(float %287) #5, !dbg !29
  %2152 = tail call float @llvm.nvvm.fabs.f(float %287) #5, !dbg !29
  %.01.i1332 = select i1 %.not.i1331, float %2152, float %2151, !dbg !29
  %2153 = fcmp ult float %.01.i1332, 0x3FE3333340000000, !dbg !29
  br i1 %2153, label %__internal_fmad.exit3.i1338, label %__internal_fmad.exit1.i1333, !dbg !29

__internal_fmad.exit1.i1333:                      ; preds = %__nv_tanhf.exit1330
  %2154 = fmul float %.01.i1332, 0x4007154760000000, !dbg !29
  %2155 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2154) #5, !dbg !29
  %2156 = fadd float %2155, 1.000000e+00, !dbg !29
  %2157 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2156) #6, !dbg !29, !srcloc !30
  %2158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1334 = icmp eq i32 %2158, 0, !dbg !29
  %2159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2157, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2160 = tail call float @llvm.nvvm.fma.rn.f(float %2157, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1335 = select i1 %.not6.i1334, float %2160, float %2159, !dbg !29
  %2161 = fcmp oge float %.01.i1332, 0x4022059680000000, !dbg !29
  %s.0.i1336 = select i1 %2161, float 1.000000e+00, float %.03.i1335, !dbg !29
  %2162 = bitcast float %s.0.i1336 to i32, !dbg !29
  %2163 = bitcast float %287 to i32, !dbg !29
  %2164 = and i32 %2163, -2147483648, !dbg !29
  %2165 = or i32 %2164, %2162, !dbg !29
  %2166 = bitcast i32 %2165 to float, !dbg !29
  br label %__nv_tanhf.exit1349, !dbg !29

__internal_fmad.exit3.i1338:                      ; preds = %__nv_tanhf.exit1330
  %2167 = fmul float %287, %287, !dbg !29
  %2168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1339 = icmp eq i32 %2168, 0, !dbg !29
  %2169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2167, float 0xBFAAC795C0000000) #5, !dbg !29
  %2170 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2167, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1340 = select i1 %.not1.i1339, float %2170, float %2169, !dbg !29
  %2171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1341 = icmp eq i32 %2171, 0, !dbg !29
  %2172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1340, float %2167, float 0x3FC10B2820000000) #5, !dbg !29
  %2173 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1340, float %2167, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1342 = select i1 %.not2.i1341, float %2173, float %2172, !dbg !29
  %2174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1343 = icmp eq i32 %2174, 0, !dbg !29
  %2175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1342, float %2167, float 0xBFD5553DA0000000) #5, !dbg !29
  %2176 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1342, float %2167, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1344 = select i1 %.not3.i1343, float %2176, float %2175, !dbg !29
  %2177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1345 = icmp eq i32 %2177, 0, !dbg !29
  %2178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1344, float %2167, float 0.000000e+00) #5, !dbg !29
  %2179 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1344, float %2167, float 0.000000e+00) #5, !dbg !29
  %.04.i1346 = select i1 %.not4.i1345, float %2179, float %2178, !dbg !29
  %2180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1347 = icmp eq i32 %2180, 0, !dbg !29
  %2181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1346, float %287, float %287) #5, !dbg !29
  %2182 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1346, float %287, float %287) #5, !dbg !29
  %.02.i1348 = select i1 %.not5.i1347, float %2182, float %2181, !dbg !29
  br label %__nv_tanhf.exit1349, !dbg !29

__nv_tanhf.exit1349:                              ; preds = %__internal_fmad.exit1.i1333, %__internal_fmad.exit3.i1338
  %s.1.i1337 = phi float [ %2166, %__internal_fmad.exit1.i1333 ], [ %.02.i1348, %__internal_fmad.exit3.i1338 ], !dbg !29
  %2183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1350 = icmp eq i32 %2183, 0, !dbg !29
  %2184 = tail call float @llvm.nvvm.fabs.ftz.f(float %289) #5, !dbg !29
  %2185 = tail call float @llvm.nvvm.fabs.f(float %289) #5, !dbg !29
  %.01.i1351 = select i1 %.not.i1350, float %2185, float %2184, !dbg !29
  %2186 = fcmp ult float %.01.i1351, 0x3FE3333340000000, !dbg !29
  br i1 %2186, label %__internal_fmad.exit3.i1357, label %__internal_fmad.exit1.i1352, !dbg !29

__internal_fmad.exit1.i1352:                      ; preds = %__nv_tanhf.exit1349
  %2187 = fmul float %.01.i1351, 0x4007154760000000, !dbg !29
  %2188 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2187) #5, !dbg !29
  %2189 = fadd float %2188, 1.000000e+00, !dbg !29
  %2190 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2189) #6, !dbg !29, !srcloc !30
  %2191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1353 = icmp eq i32 %2191, 0, !dbg !29
  %2192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2190, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2193 = tail call float @llvm.nvvm.fma.rn.f(float %2190, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1354 = select i1 %.not6.i1353, float %2193, float %2192, !dbg !29
  %2194 = fcmp oge float %.01.i1351, 0x4022059680000000, !dbg !29
  %s.0.i1355 = select i1 %2194, float 1.000000e+00, float %.03.i1354, !dbg !29
  %2195 = bitcast float %s.0.i1355 to i32, !dbg !29
  %2196 = bitcast float %289 to i32, !dbg !29
  %2197 = and i32 %2196, -2147483648, !dbg !29
  %2198 = or i32 %2197, %2195, !dbg !29
  %2199 = bitcast i32 %2198 to float, !dbg !29
  br label %__nv_tanhf.exit1368, !dbg !29

__internal_fmad.exit3.i1357:                      ; preds = %__nv_tanhf.exit1349
  %2200 = fmul float %289, %289, !dbg !29
  %2201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1358 = icmp eq i32 %2201, 0, !dbg !29
  %2202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2200, float 0xBFAAC795C0000000) #5, !dbg !29
  %2203 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2200, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1359 = select i1 %.not1.i1358, float %2203, float %2202, !dbg !29
  %2204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1360 = icmp eq i32 %2204, 0, !dbg !29
  %2205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1359, float %2200, float 0x3FC10B2820000000) #5, !dbg !29
  %2206 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1359, float %2200, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1361 = select i1 %.not2.i1360, float %2206, float %2205, !dbg !29
  %2207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1362 = icmp eq i32 %2207, 0, !dbg !29
  %2208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1361, float %2200, float 0xBFD5553DA0000000) #5, !dbg !29
  %2209 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1361, float %2200, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1363 = select i1 %.not3.i1362, float %2209, float %2208, !dbg !29
  %2210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1364 = icmp eq i32 %2210, 0, !dbg !29
  %2211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1363, float %2200, float 0.000000e+00) #5, !dbg !29
  %2212 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1363, float %2200, float 0.000000e+00) #5, !dbg !29
  %.04.i1365 = select i1 %.not4.i1364, float %2212, float %2211, !dbg !29
  %2213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1366 = icmp eq i32 %2213, 0, !dbg !29
  %2214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1365, float %289, float %289) #5, !dbg !29
  %2215 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1365, float %289, float %289) #5, !dbg !29
  %.02.i1367 = select i1 %.not5.i1366, float %2215, float %2214, !dbg !29
  br label %__nv_tanhf.exit1368, !dbg !29

__nv_tanhf.exit1368:                              ; preds = %__internal_fmad.exit1.i1352, %__internal_fmad.exit3.i1357
  %s.1.i1356 = phi float [ %2199, %__internal_fmad.exit1.i1352 ], [ %.02.i1367, %__internal_fmad.exit3.i1357 ], !dbg !29
  %2216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1369 = icmp eq i32 %2216, 0, !dbg !29
  %2217 = tail call float @llvm.nvvm.fabs.ftz.f(float %291) #5, !dbg !29
  %2218 = tail call float @llvm.nvvm.fabs.f(float %291) #5, !dbg !29
  %.01.i1370 = select i1 %.not.i1369, float %2218, float %2217, !dbg !29
  %2219 = fcmp ult float %.01.i1370, 0x3FE3333340000000, !dbg !29
  br i1 %2219, label %__internal_fmad.exit3.i1376, label %__internal_fmad.exit1.i1371, !dbg !29

__internal_fmad.exit1.i1371:                      ; preds = %__nv_tanhf.exit1368
  %2220 = fmul float %.01.i1370, 0x4007154760000000, !dbg !29
  %2221 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2220) #5, !dbg !29
  %2222 = fadd float %2221, 1.000000e+00, !dbg !29
  %2223 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2222) #6, !dbg !29, !srcloc !30
  %2224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1372 = icmp eq i32 %2224, 0, !dbg !29
  %2225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2223, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2226 = tail call float @llvm.nvvm.fma.rn.f(float %2223, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1373 = select i1 %.not6.i1372, float %2226, float %2225, !dbg !29
  %2227 = fcmp oge float %.01.i1370, 0x4022059680000000, !dbg !29
  %s.0.i1374 = select i1 %2227, float 1.000000e+00, float %.03.i1373, !dbg !29
  %2228 = bitcast float %s.0.i1374 to i32, !dbg !29
  %2229 = bitcast float %291 to i32, !dbg !29
  %2230 = and i32 %2229, -2147483648, !dbg !29
  %2231 = or i32 %2230, %2228, !dbg !29
  %2232 = bitcast i32 %2231 to float, !dbg !29
  br label %__nv_tanhf.exit1387, !dbg !29

__internal_fmad.exit3.i1376:                      ; preds = %__nv_tanhf.exit1368
  %2233 = fmul float %291, %291, !dbg !29
  %2234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1377 = icmp eq i32 %2234, 0, !dbg !29
  %2235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2233, float 0xBFAAC795C0000000) #5, !dbg !29
  %2236 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2233, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1378 = select i1 %.not1.i1377, float %2236, float %2235, !dbg !29
  %2237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1379 = icmp eq i32 %2237, 0, !dbg !29
  %2238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1378, float %2233, float 0x3FC10B2820000000) #5, !dbg !29
  %2239 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1378, float %2233, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1380 = select i1 %.not2.i1379, float %2239, float %2238, !dbg !29
  %2240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1381 = icmp eq i32 %2240, 0, !dbg !29
  %2241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1380, float %2233, float 0xBFD5553DA0000000) #5, !dbg !29
  %2242 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1380, float %2233, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1382 = select i1 %.not3.i1381, float %2242, float %2241, !dbg !29
  %2243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1383 = icmp eq i32 %2243, 0, !dbg !29
  %2244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1382, float %2233, float 0.000000e+00) #5, !dbg !29
  %2245 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1382, float %2233, float 0.000000e+00) #5, !dbg !29
  %.04.i1384 = select i1 %.not4.i1383, float %2245, float %2244, !dbg !29
  %2246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1385 = icmp eq i32 %2246, 0, !dbg !29
  %2247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1384, float %291, float %291) #5, !dbg !29
  %2248 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1384, float %291, float %291) #5, !dbg !29
  %.02.i1386 = select i1 %.not5.i1385, float %2248, float %2247, !dbg !29
  br label %__nv_tanhf.exit1387, !dbg !29

__nv_tanhf.exit1387:                              ; preds = %__internal_fmad.exit1.i1371, %__internal_fmad.exit3.i1376
  %s.1.i1375 = phi float [ %2232, %__internal_fmad.exit1.i1371 ], [ %.02.i1386, %__internal_fmad.exit3.i1376 ], !dbg !29
  %2249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1388 = icmp eq i32 %2249, 0, !dbg !29
  %2250 = tail call float @llvm.nvvm.fabs.ftz.f(float %293) #5, !dbg !29
  %2251 = tail call float @llvm.nvvm.fabs.f(float %293) #5, !dbg !29
  %.01.i1389 = select i1 %.not.i1388, float %2251, float %2250, !dbg !29
  %2252 = fcmp ult float %.01.i1389, 0x3FE3333340000000, !dbg !29
  br i1 %2252, label %__internal_fmad.exit3.i1395, label %__internal_fmad.exit1.i1390, !dbg !29

__internal_fmad.exit1.i1390:                      ; preds = %__nv_tanhf.exit1387
  %2253 = fmul float %.01.i1389, 0x4007154760000000, !dbg !29
  %2254 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2253) #5, !dbg !29
  %2255 = fadd float %2254, 1.000000e+00, !dbg !29
  %2256 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2255) #6, !dbg !29, !srcloc !30
  %2257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1391 = icmp eq i32 %2257, 0, !dbg !29
  %2258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2256, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2259 = tail call float @llvm.nvvm.fma.rn.f(float %2256, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1392 = select i1 %.not6.i1391, float %2259, float %2258, !dbg !29
  %2260 = fcmp oge float %.01.i1389, 0x4022059680000000, !dbg !29
  %s.0.i1393 = select i1 %2260, float 1.000000e+00, float %.03.i1392, !dbg !29
  %2261 = bitcast float %s.0.i1393 to i32, !dbg !29
  %2262 = bitcast float %293 to i32, !dbg !29
  %2263 = and i32 %2262, -2147483648, !dbg !29
  %2264 = or i32 %2263, %2261, !dbg !29
  %2265 = bitcast i32 %2264 to float, !dbg !29
  br label %__nv_tanhf.exit1406, !dbg !29

__internal_fmad.exit3.i1395:                      ; preds = %__nv_tanhf.exit1387
  %2266 = fmul float %293, %293, !dbg !29
  %2267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1396 = icmp eq i32 %2267, 0, !dbg !29
  %2268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2266, float 0xBFAAC795C0000000) #5, !dbg !29
  %2269 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2266, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1397 = select i1 %.not1.i1396, float %2269, float %2268, !dbg !29
  %2270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1398 = icmp eq i32 %2270, 0, !dbg !29
  %2271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1397, float %2266, float 0x3FC10B2820000000) #5, !dbg !29
  %2272 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1397, float %2266, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1399 = select i1 %.not2.i1398, float %2272, float %2271, !dbg !29
  %2273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1400 = icmp eq i32 %2273, 0, !dbg !29
  %2274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1399, float %2266, float 0xBFD5553DA0000000) #5, !dbg !29
  %2275 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1399, float %2266, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1401 = select i1 %.not3.i1400, float %2275, float %2274, !dbg !29
  %2276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1402 = icmp eq i32 %2276, 0, !dbg !29
  %2277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1401, float %2266, float 0.000000e+00) #5, !dbg !29
  %2278 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1401, float %2266, float 0.000000e+00) #5, !dbg !29
  %.04.i1403 = select i1 %.not4.i1402, float %2278, float %2277, !dbg !29
  %2279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1404 = icmp eq i32 %2279, 0, !dbg !29
  %2280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1403, float %293, float %293) #5, !dbg !29
  %2281 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1403, float %293, float %293) #5, !dbg !29
  %.02.i1405 = select i1 %.not5.i1404, float %2281, float %2280, !dbg !29
  br label %__nv_tanhf.exit1406, !dbg !29

__nv_tanhf.exit1406:                              ; preds = %__internal_fmad.exit1.i1390, %__internal_fmad.exit3.i1395
  %s.1.i1394 = phi float [ %2265, %__internal_fmad.exit1.i1390 ], [ %.02.i1405, %__internal_fmad.exit3.i1395 ], !dbg !29
  %2282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1407 = icmp eq i32 %2282, 0, !dbg !29
  %2283 = tail call float @llvm.nvvm.fabs.ftz.f(float %295) #5, !dbg !29
  %2284 = tail call float @llvm.nvvm.fabs.f(float %295) #5, !dbg !29
  %.01.i1408 = select i1 %.not.i1407, float %2284, float %2283, !dbg !29
  %2285 = fcmp ult float %.01.i1408, 0x3FE3333340000000, !dbg !29
  br i1 %2285, label %__internal_fmad.exit3.i1414, label %__internal_fmad.exit1.i1409, !dbg !29

__internal_fmad.exit1.i1409:                      ; preds = %__nv_tanhf.exit1406
  %2286 = fmul float %.01.i1408, 0x4007154760000000, !dbg !29
  %2287 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2286) #5, !dbg !29
  %2288 = fadd float %2287, 1.000000e+00, !dbg !29
  %2289 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2288) #6, !dbg !29, !srcloc !30
  %2290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1410 = icmp eq i32 %2290, 0, !dbg !29
  %2291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2289, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2292 = tail call float @llvm.nvvm.fma.rn.f(float %2289, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1411 = select i1 %.not6.i1410, float %2292, float %2291, !dbg !29
  %2293 = fcmp oge float %.01.i1408, 0x4022059680000000, !dbg !29
  %s.0.i1412 = select i1 %2293, float 1.000000e+00, float %.03.i1411, !dbg !29
  %2294 = bitcast float %s.0.i1412 to i32, !dbg !29
  %2295 = bitcast float %295 to i32, !dbg !29
  %2296 = and i32 %2295, -2147483648, !dbg !29
  %2297 = or i32 %2296, %2294, !dbg !29
  %2298 = bitcast i32 %2297 to float, !dbg !29
  br label %__nv_tanhf.exit1425, !dbg !29

__internal_fmad.exit3.i1414:                      ; preds = %__nv_tanhf.exit1406
  %2299 = fmul float %295, %295, !dbg !29
  %2300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1415 = icmp eq i32 %2300, 0, !dbg !29
  %2301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2299, float 0xBFAAC795C0000000) #5, !dbg !29
  %2302 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2299, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1416 = select i1 %.not1.i1415, float %2302, float %2301, !dbg !29
  %2303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1417 = icmp eq i32 %2303, 0, !dbg !29
  %2304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1416, float %2299, float 0x3FC10B2820000000) #5, !dbg !29
  %2305 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1416, float %2299, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1418 = select i1 %.not2.i1417, float %2305, float %2304, !dbg !29
  %2306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1419 = icmp eq i32 %2306, 0, !dbg !29
  %2307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1418, float %2299, float 0xBFD5553DA0000000) #5, !dbg !29
  %2308 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1418, float %2299, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1420 = select i1 %.not3.i1419, float %2308, float %2307, !dbg !29
  %2309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1421 = icmp eq i32 %2309, 0, !dbg !29
  %2310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1420, float %2299, float 0.000000e+00) #5, !dbg !29
  %2311 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1420, float %2299, float 0.000000e+00) #5, !dbg !29
  %.04.i1422 = select i1 %.not4.i1421, float %2311, float %2310, !dbg !29
  %2312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1423 = icmp eq i32 %2312, 0, !dbg !29
  %2313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1422, float %295, float %295) #5, !dbg !29
  %2314 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1422, float %295, float %295) #5, !dbg !29
  %.02.i1424 = select i1 %.not5.i1423, float %2314, float %2313, !dbg !29
  br label %__nv_tanhf.exit1425, !dbg !29

__nv_tanhf.exit1425:                              ; preds = %__internal_fmad.exit1.i1409, %__internal_fmad.exit3.i1414
  %s.1.i1413 = phi float [ %2298, %__internal_fmad.exit1.i1409 ], [ %.02.i1424, %__internal_fmad.exit3.i1414 ], !dbg !29
  %2315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1426 = icmp eq i32 %2315, 0, !dbg !29
  %2316 = tail call float @llvm.nvvm.fabs.ftz.f(float %297) #5, !dbg !29
  %2317 = tail call float @llvm.nvvm.fabs.f(float %297) #5, !dbg !29
  %.01.i1427 = select i1 %.not.i1426, float %2317, float %2316, !dbg !29
  %2318 = fcmp ult float %.01.i1427, 0x3FE3333340000000, !dbg !29
  br i1 %2318, label %__internal_fmad.exit3.i1433, label %__internal_fmad.exit1.i1428, !dbg !29

__internal_fmad.exit1.i1428:                      ; preds = %__nv_tanhf.exit1425
  %2319 = fmul float %.01.i1427, 0x4007154760000000, !dbg !29
  %2320 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2319) #5, !dbg !29
  %2321 = fadd float %2320, 1.000000e+00, !dbg !29
  %2322 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2321) #6, !dbg !29, !srcloc !30
  %2323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1429 = icmp eq i32 %2323, 0, !dbg !29
  %2324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2322, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2325 = tail call float @llvm.nvvm.fma.rn.f(float %2322, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1430 = select i1 %.not6.i1429, float %2325, float %2324, !dbg !29
  %2326 = fcmp oge float %.01.i1427, 0x4022059680000000, !dbg !29
  %s.0.i1431 = select i1 %2326, float 1.000000e+00, float %.03.i1430, !dbg !29
  %2327 = bitcast float %s.0.i1431 to i32, !dbg !29
  %2328 = bitcast float %297 to i32, !dbg !29
  %2329 = and i32 %2328, -2147483648, !dbg !29
  %2330 = or i32 %2329, %2327, !dbg !29
  %2331 = bitcast i32 %2330 to float, !dbg !29
  br label %__nv_tanhf.exit1444, !dbg !29

__internal_fmad.exit3.i1433:                      ; preds = %__nv_tanhf.exit1425
  %2332 = fmul float %297, %297, !dbg !29
  %2333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1434 = icmp eq i32 %2333, 0, !dbg !29
  %2334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2332, float 0xBFAAC795C0000000) #5, !dbg !29
  %2335 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2332, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1435 = select i1 %.not1.i1434, float %2335, float %2334, !dbg !29
  %2336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1436 = icmp eq i32 %2336, 0, !dbg !29
  %2337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1435, float %2332, float 0x3FC10B2820000000) #5, !dbg !29
  %2338 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1435, float %2332, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1437 = select i1 %.not2.i1436, float %2338, float %2337, !dbg !29
  %2339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1438 = icmp eq i32 %2339, 0, !dbg !29
  %2340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1437, float %2332, float 0xBFD5553DA0000000) #5, !dbg !29
  %2341 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1437, float %2332, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1439 = select i1 %.not3.i1438, float %2341, float %2340, !dbg !29
  %2342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1440 = icmp eq i32 %2342, 0, !dbg !29
  %2343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1439, float %2332, float 0.000000e+00) #5, !dbg !29
  %2344 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1439, float %2332, float 0.000000e+00) #5, !dbg !29
  %.04.i1441 = select i1 %.not4.i1440, float %2344, float %2343, !dbg !29
  %2345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1442 = icmp eq i32 %2345, 0, !dbg !29
  %2346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1441, float %297, float %297) #5, !dbg !29
  %2347 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1441, float %297, float %297) #5, !dbg !29
  %.02.i1443 = select i1 %.not5.i1442, float %2347, float %2346, !dbg !29
  br label %__nv_tanhf.exit1444, !dbg !29

__nv_tanhf.exit1444:                              ; preds = %__internal_fmad.exit1.i1428, %__internal_fmad.exit3.i1433
  %s.1.i1432 = phi float [ %2331, %__internal_fmad.exit1.i1428 ], [ %.02.i1443, %__internal_fmad.exit3.i1433 ], !dbg !29
  %2348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1445 = icmp eq i32 %2348, 0, !dbg !29
  %2349 = tail call float @llvm.nvvm.fabs.ftz.f(float %299) #5, !dbg !29
  %2350 = tail call float @llvm.nvvm.fabs.f(float %299) #5, !dbg !29
  %.01.i1446 = select i1 %.not.i1445, float %2350, float %2349, !dbg !29
  %2351 = fcmp ult float %.01.i1446, 0x3FE3333340000000, !dbg !29
  br i1 %2351, label %__internal_fmad.exit3.i1452, label %__internal_fmad.exit1.i1447, !dbg !29

__internal_fmad.exit1.i1447:                      ; preds = %__nv_tanhf.exit1444
  %2352 = fmul float %.01.i1446, 0x4007154760000000, !dbg !29
  %2353 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2352) #5, !dbg !29
  %2354 = fadd float %2353, 1.000000e+00, !dbg !29
  %2355 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2354) #6, !dbg !29, !srcloc !30
  %2356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1448 = icmp eq i32 %2356, 0, !dbg !29
  %2357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2355, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2358 = tail call float @llvm.nvvm.fma.rn.f(float %2355, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1449 = select i1 %.not6.i1448, float %2358, float %2357, !dbg !29
  %2359 = fcmp oge float %.01.i1446, 0x4022059680000000, !dbg !29
  %s.0.i1450 = select i1 %2359, float 1.000000e+00, float %.03.i1449, !dbg !29
  %2360 = bitcast float %s.0.i1450 to i32, !dbg !29
  %2361 = bitcast float %299 to i32, !dbg !29
  %2362 = and i32 %2361, -2147483648, !dbg !29
  %2363 = or i32 %2362, %2360, !dbg !29
  %2364 = bitcast i32 %2363 to float, !dbg !29
  br label %__nv_tanhf.exit1463, !dbg !29

__internal_fmad.exit3.i1452:                      ; preds = %__nv_tanhf.exit1444
  %2365 = fmul float %299, %299, !dbg !29
  %2366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1453 = icmp eq i32 %2366, 0, !dbg !29
  %2367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2365, float 0xBFAAC795C0000000) #5, !dbg !29
  %2368 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2365, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1454 = select i1 %.not1.i1453, float %2368, float %2367, !dbg !29
  %2369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1455 = icmp eq i32 %2369, 0, !dbg !29
  %2370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1454, float %2365, float 0x3FC10B2820000000) #5, !dbg !29
  %2371 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1454, float %2365, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1456 = select i1 %.not2.i1455, float %2371, float %2370, !dbg !29
  %2372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1457 = icmp eq i32 %2372, 0, !dbg !29
  %2373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1456, float %2365, float 0xBFD5553DA0000000) #5, !dbg !29
  %2374 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1456, float %2365, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1458 = select i1 %.not3.i1457, float %2374, float %2373, !dbg !29
  %2375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1459 = icmp eq i32 %2375, 0, !dbg !29
  %2376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1458, float %2365, float 0.000000e+00) #5, !dbg !29
  %2377 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1458, float %2365, float 0.000000e+00) #5, !dbg !29
  %.04.i1460 = select i1 %.not4.i1459, float %2377, float %2376, !dbg !29
  %2378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1461 = icmp eq i32 %2378, 0, !dbg !29
  %2379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1460, float %299, float %299) #5, !dbg !29
  %2380 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1460, float %299, float %299) #5, !dbg !29
  %.02.i1462 = select i1 %.not5.i1461, float %2380, float %2379, !dbg !29
  br label %__nv_tanhf.exit1463, !dbg !29

__nv_tanhf.exit1463:                              ; preds = %__internal_fmad.exit1.i1447, %__internal_fmad.exit3.i1452
  %s.1.i1451 = phi float [ %2364, %__internal_fmad.exit1.i1447 ], [ %.02.i1462, %__internal_fmad.exit3.i1452 ], !dbg !29
  %2381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i1464 = icmp eq i32 %2381, 0, !dbg !29
  %2382 = tail call float @llvm.nvvm.fabs.ftz.f(float %301) #5, !dbg !29
  %2383 = tail call float @llvm.nvvm.fabs.f(float %301) #5, !dbg !29
  %.01.i1465 = select i1 %.not.i1464, float %2383, float %2382, !dbg !29
  %2384 = fcmp ult float %.01.i1465, 0x3FE3333340000000, !dbg !29
  br i1 %2384, label %__internal_fmad.exit3.i1471, label %__internal_fmad.exit1.i1466, !dbg !29

__internal_fmad.exit1.i1466:                      ; preds = %__nv_tanhf.exit1463
  %2385 = fmul float %.01.i1465, 0x4007154760000000, !dbg !29
  %2386 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2385) #5, !dbg !29
  %2387 = fadd float %2386, 1.000000e+00, !dbg !29
  %2388 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2387) #6, !dbg !29, !srcloc !30
  %2389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not6.i1467 = icmp eq i32 %2389, 0, !dbg !29
  %2390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2388, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %2391 = tail call float @llvm.nvvm.fma.rn.f(float %2388, float -2.000000e+00, float 1.000000e+00) #5, !dbg !29
  %.03.i1468 = select i1 %.not6.i1467, float %2391, float %2390, !dbg !29
  %2392 = fcmp oge float %.01.i1465, 0x4022059680000000, !dbg !29
  %s.0.i1469 = select i1 %2392, float 1.000000e+00, float %.03.i1468, !dbg !29
  %2393 = bitcast float %s.0.i1469 to i32, !dbg !29
  %2394 = bitcast float %301 to i32, !dbg !29
  %2395 = and i32 %2394, -2147483648, !dbg !29
  %2396 = or i32 %2395, %2393, !dbg !29
  %2397 = bitcast i32 %2396 to float, !dbg !29
  br label %__nv_tanhf.exit1482, !dbg !29

__internal_fmad.exit3.i1471:                      ; preds = %__nv_tanhf.exit1463
  %2398 = fmul float %301, %301, !dbg !29
  %2399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not1.i1472 = icmp eq i32 %2399, 0, !dbg !29
  %2400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2398, float 0xBFAAC795C0000000) #5, !dbg !29
  %2401 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2398, float 0xBFAAC795C0000000) #5, !dbg !29
  %.06.i1473 = select i1 %.not1.i1472, float %2401, float %2400, !dbg !29
  %2402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not2.i1474 = icmp eq i32 %2402, 0, !dbg !29
  %2403 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1473, float %2398, float 0x3FC10B2820000000) #5, !dbg !29
  %2404 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1473, float %2398, float 0x3FC10B2820000000) #5, !dbg !29
  %.05.i1475 = select i1 %.not2.i1474, float %2404, float %2403, !dbg !29
  %2405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not3.i1476 = icmp eq i32 %2405, 0, !dbg !29
  %2406 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1475, float %2398, float 0xBFD5553DA0000000) #5, !dbg !29
  %2407 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1475, float %2398, float 0xBFD5553DA0000000) #5, !dbg !29
  %.0.i1477 = select i1 %.not3.i1476, float %2407, float %2406, !dbg !29
  %2408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not4.i1478 = icmp eq i32 %2408, 0, !dbg !29
  %2409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1477, float %2398, float 0.000000e+00) #5, !dbg !29
  %2410 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1477, float %2398, float 0.000000e+00) #5, !dbg !29
  %.04.i1479 = select i1 %.not4.i1478, float %2410, float %2409, !dbg !29
  %2411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not5.i1480 = icmp eq i32 %2411, 0, !dbg !29
  %2412 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1479, float %301, float %301) #5, !dbg !29
  %2413 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1479, float %301, float %301) #5, !dbg !29
  %.02.i1481 = select i1 %.not5.i1480, float %2413, float %2412, !dbg !29
  br label %__nv_tanhf.exit1482, !dbg !29

__nv_tanhf.exit1482:                              ; preds = %__internal_fmad.exit1.i1466, %__internal_fmad.exit3.i1471
  %s.1.i1470 = phi float [ %2397, %__internal_fmad.exit1.i1466 ], [ %.02.i1481, %__internal_fmad.exit3.i1471 ], !dbg !29
  %2414 = insertelement <64 x float> poison, float %s.1.i, i64 0, !dbg !31
  %2415 = insertelement <64 x float> %2414, float %s.1.i292, i64 1, !dbg !31
  %2416 = insertelement <64 x float> %2415, float %s.1.i311, i64 2, !dbg !31
  %2417 = insertelement <64 x float> %2416, float %s.1.i330, i64 3, !dbg !31
  %2418 = insertelement <64 x float> %2417, float %s.1.i349, i64 4, !dbg !31
  %2419 = insertelement <64 x float> %2418, float %s.1.i368, i64 5, !dbg !31
  %2420 = insertelement <64 x float> %2419, float %s.1.i387, i64 6, !dbg !31
  %2421 = insertelement <64 x float> %2420, float %s.1.i406, i64 7, !dbg !31
  %2422 = insertelement <64 x float> %2421, float %s.1.i425, i64 8, !dbg !31
  %2423 = insertelement <64 x float> %2422, float %s.1.i444, i64 9, !dbg !31
  %2424 = insertelement <64 x float> %2423, float %s.1.i463, i64 10, !dbg !31
  %2425 = insertelement <64 x float> %2424, float %s.1.i482, i64 11, !dbg !31
  %2426 = insertelement <64 x float> %2425, float %s.1.i501, i64 12, !dbg !31
  %2427 = insertelement <64 x float> %2426, float %s.1.i520, i64 13, !dbg !31
  %2428 = insertelement <64 x float> %2427, float %s.1.i539, i64 14, !dbg !31
  %2429 = insertelement <64 x float> %2428, float %s.1.i558, i64 15, !dbg !31
  %2430 = insertelement <64 x float> %2429, float %s.1.i577, i64 16, !dbg !31
  %2431 = insertelement <64 x float> %2430, float %s.1.i596, i64 17, !dbg !31
  %2432 = insertelement <64 x float> %2431, float %s.1.i615, i64 18, !dbg !31
  %2433 = insertelement <64 x float> %2432, float %s.1.i634, i64 19, !dbg !31
  %2434 = insertelement <64 x float> %2433, float %s.1.i653, i64 20, !dbg !31
  %2435 = insertelement <64 x float> %2434, float %s.1.i672, i64 21, !dbg !31
  %2436 = insertelement <64 x float> %2435, float %s.1.i691, i64 22, !dbg !31
  %2437 = insertelement <64 x float> %2436, float %s.1.i710, i64 23, !dbg !31
  %2438 = insertelement <64 x float> %2437, float %s.1.i729, i64 24, !dbg !31
  %2439 = insertelement <64 x float> %2438, float %s.1.i748, i64 25, !dbg !31
  %2440 = insertelement <64 x float> %2439, float %s.1.i767, i64 26, !dbg !31
  %2441 = insertelement <64 x float> %2440, float %s.1.i786, i64 27, !dbg !31
  %2442 = insertelement <64 x float> %2441, float %s.1.i805, i64 28, !dbg !31
  %2443 = insertelement <64 x float> %2442, float %s.1.i824, i64 29, !dbg !31
  %2444 = insertelement <64 x float> %2443, float %s.1.i843, i64 30, !dbg !31
  %2445 = insertelement <64 x float> %2444, float %s.1.i862, i64 31, !dbg !31
  %2446 = insertelement <64 x float> %2445, float %s.1.i881, i64 32, !dbg !31
  %2447 = insertelement <64 x float> %2446, float %s.1.i900, i64 33, !dbg !31
  %2448 = insertelement <64 x float> %2447, float %s.1.i919, i64 34, !dbg !31
  %2449 = insertelement <64 x float> %2448, float %s.1.i938, i64 35, !dbg !31
  %2450 = insertelement <64 x float> %2449, float %s.1.i957, i64 36, !dbg !31
  %2451 = insertelement <64 x float> %2450, float %s.1.i976, i64 37, !dbg !31
  %2452 = insertelement <64 x float> %2451, float %s.1.i995, i64 38, !dbg !31
  %2453 = insertelement <64 x float> %2452, float %s.1.i1014, i64 39, !dbg !31
  %2454 = insertelement <64 x float> %2453, float %s.1.i1033, i64 40, !dbg !31
  %2455 = insertelement <64 x float> %2454, float %s.1.i1052, i64 41, !dbg !31
  %2456 = insertelement <64 x float> %2455, float %s.1.i1071, i64 42, !dbg !31
  %2457 = insertelement <64 x float> %2456, float %s.1.i1090, i64 43, !dbg !31
  %2458 = insertelement <64 x float> %2457, float %s.1.i1109, i64 44, !dbg !31
  %2459 = insertelement <64 x float> %2458, float %s.1.i1128, i64 45, !dbg !31
  %2460 = insertelement <64 x float> %2459, float %s.1.i1147, i64 46, !dbg !31
  %2461 = insertelement <64 x float> %2460, float %s.1.i1166, i64 47, !dbg !31
  %2462 = insertelement <64 x float> %2461, float %s.1.i1185, i64 48, !dbg !31
  %2463 = insertelement <64 x float> %2462, float %s.1.i1204, i64 49, !dbg !31
  %2464 = insertelement <64 x float> %2463, float %s.1.i1223, i64 50, !dbg !31
  %2465 = insertelement <64 x float> %2464, float %s.1.i1242, i64 51, !dbg !31
  %2466 = insertelement <64 x float> %2465, float %s.1.i1261, i64 52, !dbg !31
  %2467 = insertelement <64 x float> %2466, float %s.1.i1280, i64 53, !dbg !31
  %2468 = insertelement <64 x float> %2467, float %s.1.i1299, i64 54, !dbg !31
  %2469 = insertelement <64 x float> %2468, float %s.1.i1318, i64 55, !dbg !31
  %2470 = insertelement <64 x float> %2469, float %s.1.i1337, i64 56, !dbg !31
  %2471 = insertelement <64 x float> %2470, float %s.1.i1356, i64 57, !dbg !31
  %2472 = insertelement <64 x float> %2471, float %s.1.i1375, i64 58, !dbg !31
  %2473 = insertelement <64 x float> %2472, float %s.1.i1394, i64 59, !dbg !31
  %2474 = insertelement <64 x float> %2473, float %s.1.i1413, i64 60, !dbg !31
  %2475 = insertelement <64 x float> %2474, float %s.1.i1432, i64 61, !dbg !31
  %2476 = insertelement <64 x float> %2475, float %s.1.i1451, i64 62, !dbg !31
  %2477 = insertelement <64 x float> %2476, float %s.1.i1470, i64 63, !dbg !31
  %2478 = insertelement <64 x float> poison, float %173, i64 0, !dbg !31
  %2479 = shufflevector <64 x float> %2478, <64 x float> poison, <64 x i32> zeroinitializer, !dbg !31
  %2480 = fmul <64 x float> %2477, %2479, !dbg !31
  br label %2481, !dbg !27

2481:                                             ; preds = %__nv_tanhf.exit1482, %11
  %2482 = phi <64 x float> [ %2480, %__nv_tanhf.exit1482 ], [ %171, %11 ]
  %2483 = extractelement <64 x float> %2482, i64 0, !dbg !32
  %2484 = extractelement <64 x float> %2482, i64 1, !dbg !32
  %2485 = tail call float @llvm.maxnum.f32(float %2483, float %2484), !dbg !32
  %2486 = extractelement <64 x float> %2482, i64 2, !dbg !32
  %2487 = tail call float @llvm.maxnum.f32(float %2485, float %2486), !dbg !32
  %2488 = extractelement <64 x float> %2482, i64 3, !dbg !32
  %2489 = tail call float @llvm.maxnum.f32(float %2487, float %2488), !dbg !32
  %2490 = extractelement <64 x float> %2482, i64 4, !dbg !32
  %2491 = tail call float @llvm.maxnum.f32(float %2489, float %2490), !dbg !32
  %2492 = extractelement <64 x float> %2482, i64 5, !dbg !32
  %2493 = tail call float @llvm.maxnum.f32(float %2491, float %2492), !dbg !32
  %2494 = extractelement <64 x float> %2482, i64 6, !dbg !32
  %2495 = tail call float @llvm.maxnum.f32(float %2493, float %2494), !dbg !32
  %2496 = extractelement <64 x float> %2482, i64 7, !dbg !32
  %2497 = tail call float @llvm.maxnum.f32(float %2495, float %2496), !dbg !32
  %2498 = extractelement <64 x float> %2482, i64 8, !dbg !32
  %2499 = tail call float @llvm.maxnum.f32(float %2497, float %2498), !dbg !32
  %2500 = extractelement <64 x float> %2482, i64 9, !dbg !32
  %2501 = tail call float @llvm.maxnum.f32(float %2499, float %2500), !dbg !32
  %2502 = extractelement <64 x float> %2482, i64 10, !dbg !32
  %2503 = tail call float @llvm.maxnum.f32(float %2501, float %2502), !dbg !32
  %2504 = extractelement <64 x float> %2482, i64 11, !dbg !32
  %2505 = tail call float @llvm.maxnum.f32(float %2503, float %2504), !dbg !32
  %2506 = extractelement <64 x float> %2482, i64 12, !dbg !32
  %2507 = tail call float @llvm.maxnum.f32(float %2505, float %2506), !dbg !32
  %2508 = extractelement <64 x float> %2482, i64 13, !dbg !32
  %2509 = tail call float @llvm.maxnum.f32(float %2507, float %2508), !dbg !32
  %2510 = extractelement <64 x float> %2482, i64 14, !dbg !32
  %2511 = tail call float @llvm.maxnum.f32(float %2509, float %2510), !dbg !32
  %2512 = extractelement <64 x float> %2482, i64 15, !dbg !32
  %2513 = tail call float @llvm.maxnum.f32(float %2511, float %2512), !dbg !32
  %2514 = extractelement <64 x float> %2482, i64 16, !dbg !32
  %2515 = tail call float @llvm.maxnum.f32(float %2513, float %2514), !dbg !32
  %2516 = extractelement <64 x float> %2482, i64 17, !dbg !32
  %2517 = tail call float @llvm.maxnum.f32(float %2515, float %2516), !dbg !32
  %2518 = extractelement <64 x float> %2482, i64 18, !dbg !32
  %2519 = tail call float @llvm.maxnum.f32(float %2517, float %2518), !dbg !32
  %2520 = extractelement <64 x float> %2482, i64 19, !dbg !32
  %2521 = tail call float @llvm.maxnum.f32(float %2519, float %2520), !dbg !32
  %2522 = extractelement <64 x float> %2482, i64 20, !dbg !32
  %2523 = tail call float @llvm.maxnum.f32(float %2521, float %2522), !dbg !32
  %2524 = extractelement <64 x float> %2482, i64 21, !dbg !32
  %2525 = tail call float @llvm.maxnum.f32(float %2523, float %2524), !dbg !32
  %2526 = extractelement <64 x float> %2482, i64 22, !dbg !32
  %2527 = tail call float @llvm.maxnum.f32(float %2525, float %2526), !dbg !32
  %2528 = extractelement <64 x float> %2482, i64 23, !dbg !32
  %2529 = tail call float @llvm.maxnum.f32(float %2527, float %2528), !dbg !32
  %2530 = extractelement <64 x float> %2482, i64 24, !dbg !32
  %2531 = tail call float @llvm.maxnum.f32(float %2529, float %2530), !dbg !32
  %2532 = extractelement <64 x float> %2482, i64 25, !dbg !32
  %2533 = tail call float @llvm.maxnum.f32(float %2531, float %2532), !dbg !32
  %2534 = extractelement <64 x float> %2482, i64 26, !dbg !32
  %2535 = tail call float @llvm.maxnum.f32(float %2533, float %2534), !dbg !32
  %2536 = extractelement <64 x float> %2482, i64 27, !dbg !32
  %2537 = tail call float @llvm.maxnum.f32(float %2535, float %2536), !dbg !32
  %2538 = extractelement <64 x float> %2482, i64 28, !dbg !32
  %2539 = tail call float @llvm.maxnum.f32(float %2537, float %2538), !dbg !32
  %2540 = extractelement <64 x float> %2482, i64 29, !dbg !32
  %2541 = tail call float @llvm.maxnum.f32(float %2539, float %2540), !dbg !32
  %2542 = extractelement <64 x float> %2482, i64 30, !dbg !32
  %2543 = tail call float @llvm.maxnum.f32(float %2541, float %2542), !dbg !32
  %2544 = extractelement <64 x float> %2482, i64 31, !dbg !32
  %2545 = tail call float @llvm.maxnum.f32(float %2543, float %2544), !dbg !32
  %2546 = extractelement <64 x float> %2482, i64 32, !dbg !32
  %2547 = tail call float @llvm.maxnum.f32(float %2545, float %2546), !dbg !32
  %2548 = extractelement <64 x float> %2482, i64 33, !dbg !32
  %2549 = tail call float @llvm.maxnum.f32(float %2547, float %2548), !dbg !32
  %2550 = extractelement <64 x float> %2482, i64 34, !dbg !32
  %2551 = tail call float @llvm.maxnum.f32(float %2549, float %2550), !dbg !32
  %2552 = extractelement <64 x float> %2482, i64 35, !dbg !32
  %2553 = tail call float @llvm.maxnum.f32(float %2551, float %2552), !dbg !32
  %2554 = extractelement <64 x float> %2482, i64 36, !dbg !32
  %2555 = tail call float @llvm.maxnum.f32(float %2553, float %2554), !dbg !32
  %2556 = extractelement <64 x float> %2482, i64 37, !dbg !32
  %2557 = tail call float @llvm.maxnum.f32(float %2555, float %2556), !dbg !32
  %2558 = extractelement <64 x float> %2482, i64 38, !dbg !32
  %2559 = tail call float @llvm.maxnum.f32(float %2557, float %2558), !dbg !32
  %2560 = extractelement <64 x float> %2482, i64 39, !dbg !32
  %2561 = tail call float @llvm.maxnum.f32(float %2559, float %2560), !dbg !32
  %2562 = extractelement <64 x float> %2482, i64 40, !dbg !32
  %2563 = tail call float @llvm.maxnum.f32(float %2561, float %2562), !dbg !32
  %2564 = extractelement <64 x float> %2482, i64 41, !dbg !32
  %2565 = tail call float @llvm.maxnum.f32(float %2563, float %2564), !dbg !32
  %2566 = extractelement <64 x float> %2482, i64 42, !dbg !32
  %2567 = tail call float @llvm.maxnum.f32(float %2565, float %2566), !dbg !32
  %2568 = extractelement <64 x float> %2482, i64 43, !dbg !32
  %2569 = tail call float @llvm.maxnum.f32(float %2567, float %2568), !dbg !32
  %2570 = extractelement <64 x float> %2482, i64 44, !dbg !32
  %2571 = tail call float @llvm.maxnum.f32(float %2569, float %2570), !dbg !32
  %2572 = extractelement <64 x float> %2482, i64 45, !dbg !32
  %2573 = tail call float @llvm.maxnum.f32(float %2571, float %2572), !dbg !32
  %2574 = extractelement <64 x float> %2482, i64 46, !dbg !32
  %2575 = tail call float @llvm.maxnum.f32(float %2573, float %2574), !dbg !32
  %2576 = extractelement <64 x float> %2482, i64 47, !dbg !32
  %2577 = tail call float @llvm.maxnum.f32(float %2575, float %2576), !dbg !32
  %2578 = extractelement <64 x float> %2482, i64 48, !dbg !32
  %2579 = tail call float @llvm.maxnum.f32(float %2577, float %2578), !dbg !32
  %2580 = extractelement <64 x float> %2482, i64 49, !dbg !32
  %2581 = tail call float @llvm.maxnum.f32(float %2579, float %2580), !dbg !32
  %2582 = extractelement <64 x float> %2482, i64 50, !dbg !32
  %2583 = tail call float @llvm.maxnum.f32(float %2581, float %2582), !dbg !32
  %2584 = extractelement <64 x float> %2482, i64 51, !dbg !32
  %2585 = tail call float @llvm.maxnum.f32(float %2583, float %2584), !dbg !32
  %2586 = extractelement <64 x float> %2482, i64 52, !dbg !32
  %2587 = tail call float @llvm.maxnum.f32(float %2585, float %2586), !dbg !32
  %2588 = extractelement <64 x float> %2482, i64 53, !dbg !32
  %2589 = tail call float @llvm.maxnum.f32(float %2587, float %2588), !dbg !32
  %2590 = extractelement <64 x float> %2482, i64 54, !dbg !32
  %2591 = tail call float @llvm.maxnum.f32(float %2589, float %2590), !dbg !32
  %2592 = extractelement <64 x float> %2482, i64 55, !dbg !32
  %2593 = tail call float @llvm.maxnum.f32(float %2591, float %2592), !dbg !32
  %2594 = extractelement <64 x float> %2482, i64 56, !dbg !32
  %2595 = tail call float @llvm.maxnum.f32(float %2593, float %2594), !dbg !32
  %2596 = extractelement <64 x float> %2482, i64 57, !dbg !32
  %2597 = tail call float @llvm.maxnum.f32(float %2595, float %2596), !dbg !32
  %2598 = extractelement <64 x float> %2482, i64 58, !dbg !32
  %2599 = tail call float @llvm.maxnum.f32(float %2597, float %2598), !dbg !32
  %2600 = extractelement <64 x float> %2482, i64 59, !dbg !32
  %2601 = tail call float @llvm.maxnum.f32(float %2599, float %2600), !dbg !32
  %2602 = extractelement <64 x float> %2482, i64 60, !dbg !32
  %2603 = tail call float @llvm.maxnum.f32(float %2601, float %2602), !dbg !32
  %2604 = extractelement <64 x float> %2482, i64 61, !dbg !32
  %2605 = tail call float @llvm.maxnum.f32(float %2603, float %2604), !dbg !32
  %2606 = extractelement <64 x float> %2482, i64 62, !dbg !32
  %2607 = tail call float @llvm.maxnum.f32(float %2605, float %2606), !dbg !32
  %2608 = extractelement <64 x float> %2482, i64 63, !dbg !32
  %2609 = tail call float @llvm.maxnum.f32(float %2607, float %2608), !dbg !32
  %2610 = bitcast float %2609 to i32, !dbg !37
  %2611 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2610, i32 16, i32 31), !dbg !37
  %2612 = bitcast i32 %2611 to float, !dbg !37
  %2613 = tail call float @llvm.maxnum.f32(float %2609, float %2612), !dbg !32
  %2614 = bitcast float %2613 to i32, !dbg !37
  %2615 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2614, i32 8, i32 31), !dbg !37
  %2616 = bitcast i32 %2615 to float, !dbg !37
  %2617 = tail call float @llvm.maxnum.f32(float %2613, float %2616), !dbg !32
  %2618 = bitcast float %2617 to i32, !dbg !37
  %2619 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2618, i32 4, i32 31), !dbg !37
  %2620 = bitcast i32 %2619 to float, !dbg !37
  %2621 = tail call float @llvm.maxnum.f32(float %2617, float %2620), !dbg !32
  %2622 = bitcast float %2621 to i32, !dbg !37
  %2623 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2622, i32 2, i32 31), !dbg !37
  %2624 = bitcast i32 %2623 to float, !dbg !37
  %2625 = tail call float @llvm.maxnum.f32(float %2621, float %2624), !dbg !32
  %2626 = bitcast float %2625 to i32, !dbg !37
  %2627 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2626, i32 1, i32 31), !dbg !37
  %2628 = bitcast i32 %2627 to float, !dbg !37
  %2629 = tail call float @llvm.maxnum.f32(float %2625, float %2628), !dbg !32
  %2630 = icmp eq i32 %22, 0, !dbg !37
  %2631 = and i32 %23, 31, !dbg !37
  %2632 = zext nneg i32 %2631 to i64, !dbg !37
  %2633 = getelementptr float, ptr addrspace(3) @global_smem, i64 %2632, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2633, float %2629, i1 %2630) #5, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %2634 = icmp slt i32 %21, 32, !dbg !37
  %2635 = sext i32 %21 to i64, !dbg !37
  %2636 = getelementptr float, ptr addrspace(3) @global_smem, i64 %2635, !dbg !37
  %2637 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %2636, i1 %2634) #5, !dbg !37
  %2638 = bitcast float %2637 to i32, !dbg !37
  %2639 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2638, i32 16, i32 31), !dbg !37
  %2640 = bitcast i32 %2639 to float, !dbg !37
  %2641 = tail call float @llvm.maxnum.f32(float %2637, float %2640), !dbg !32
  %2642 = bitcast float %2641 to i32, !dbg !37
  %2643 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2642, i32 8, i32 31), !dbg !37
  %2644 = bitcast i32 %2643 to float, !dbg !37
  %2645 = tail call float @llvm.maxnum.f32(float %2641, float %2644), !dbg !32
  %2646 = bitcast float %2645 to i32, !dbg !37
  %2647 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2646, i32 4, i32 31), !dbg !37
  %2648 = bitcast i32 %2647 to float, !dbg !37
  %2649 = tail call float @llvm.maxnum.f32(float %2645, float %2648), !dbg !32
  %2650 = bitcast float %2649 to i32, !dbg !37
  %2651 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2650, i32 2, i32 31), !dbg !37
  %2652 = bitcast i32 %2651 to float, !dbg !37
  %2653 = tail call float @llvm.maxnum.f32(float %2649, float %2652), !dbg !32
  %2654 = bitcast float %2653 to i32, !dbg !37
  %2655 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2654, i32 1, i32 31), !dbg !37
  %2656 = bitcast i32 %2655 to float, !dbg !37
  %2657 = tail call float @llvm.maxnum.f32(float %2653, float %2656), !dbg !32
  %2658 = and i1 %2634, %2630, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2636, float %2657, i1 %2658) #5, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %2659 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !37
  %2660 = fsub float %2483, %2659, !dbg !38
  %2661 = fsub float %2484, %2659, !dbg !38
  %2662 = fsub float %2486, %2659, !dbg !38
  %2663 = fsub float %2488, %2659, !dbg !38
  %2664 = fsub float %2490, %2659, !dbg !38
  %2665 = fsub float %2492, %2659, !dbg !38
  %2666 = fsub float %2494, %2659, !dbg !38
  %2667 = fsub float %2496, %2659, !dbg !38
  %2668 = fsub float %2498, %2659, !dbg !38
  %2669 = fsub float %2500, %2659, !dbg !38
  %2670 = fsub float %2502, %2659, !dbg !38
  %2671 = fsub float %2504, %2659, !dbg !38
  %2672 = fsub float %2506, %2659, !dbg !38
  %2673 = fsub float %2508, %2659, !dbg !38
  %2674 = fsub float %2510, %2659, !dbg !38
  %2675 = fsub float %2512, %2659, !dbg !38
  %2676 = fsub float %2514, %2659, !dbg !38
  %2677 = fsub float %2516, %2659, !dbg !38
  %2678 = fsub float %2518, %2659, !dbg !38
  %2679 = fsub float %2520, %2659, !dbg !38
  %2680 = fsub float %2522, %2659, !dbg !38
  %2681 = fsub float %2524, %2659, !dbg !38
  %2682 = fsub float %2526, %2659, !dbg !38
  %2683 = fsub float %2528, %2659, !dbg !38
  %2684 = fsub float %2530, %2659, !dbg !38
  %2685 = fsub float %2532, %2659, !dbg !38
  %2686 = fsub float %2534, %2659, !dbg !38
  %2687 = fsub float %2536, %2659, !dbg !38
  %2688 = fsub float %2538, %2659, !dbg !38
  %2689 = fsub float %2540, %2659, !dbg !38
  %2690 = fsub float %2542, %2659, !dbg !38
  %2691 = fsub float %2544, %2659, !dbg !38
  %2692 = fsub float %2546, %2659, !dbg !38
  %2693 = fsub float %2548, %2659, !dbg !38
  %2694 = fsub float %2550, %2659, !dbg !38
  %2695 = fsub float %2552, %2659, !dbg !38
  %2696 = fsub float %2554, %2659, !dbg !38
  %2697 = fsub float %2556, %2659, !dbg !38
  %2698 = fsub float %2558, %2659, !dbg !38
  %2699 = fsub float %2560, %2659, !dbg !38
  %2700 = fsub float %2562, %2659, !dbg !38
  %2701 = fsub float %2564, %2659, !dbg !38
  %2702 = fsub float %2566, %2659, !dbg !38
  %2703 = fsub float %2568, %2659, !dbg !38
  %2704 = fsub float %2570, %2659, !dbg !38
  %2705 = fsub float %2572, %2659, !dbg !38
  %2706 = fsub float %2574, %2659, !dbg !38
  %2707 = fsub float %2576, %2659, !dbg !38
  %2708 = fsub float %2578, %2659, !dbg !38
  %2709 = fsub float %2580, %2659, !dbg !38
  %2710 = fsub float %2582, %2659, !dbg !38
  %2711 = fsub float %2584, %2659, !dbg !38
  %2712 = fsub float %2586, %2659, !dbg !38
  %2713 = fsub float %2588, %2659, !dbg !38
  %2714 = fsub float %2590, %2659, !dbg !38
  %2715 = fsub float %2592, %2659, !dbg !38
  %2716 = fsub float %2594, %2659, !dbg !38
  %2717 = fsub float %2596, %2659, !dbg !38
  %2718 = fsub float %2598, %2659, !dbg !38
  %2719 = fsub float %2600, %2659, !dbg !38
  %2720 = fsub float %2602, %2659, !dbg !38
  %2721 = fsub float %2604, %2659, !dbg !38
  %2722 = fsub float %2606, %2659, !dbg !38
  %2723 = fsub float %2608, %2659, !dbg !38
  %2724 = fmul float %2660, 0x3FF7154760000000, !dbg !39
  %2725 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2724) #5, !dbg !39
  %2726 = fmul float %2661, 0x3FF7154760000000, !dbg !39
  %2727 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2726) #5, !dbg !39
  %2728 = fmul float %2662, 0x3FF7154760000000, !dbg !39
  %2729 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2728) #5, !dbg !39
  %2730 = fmul float %2663, 0x3FF7154760000000, !dbg !39
  %2731 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2730) #5, !dbg !39
  %2732 = fmul float %2664, 0x3FF7154760000000, !dbg !39
  %2733 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2732) #5, !dbg !39
  %2734 = fmul float %2665, 0x3FF7154760000000, !dbg !39
  %2735 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2734) #5, !dbg !39
  %2736 = fmul float %2666, 0x3FF7154760000000, !dbg !39
  %2737 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2736) #5, !dbg !39
  %2738 = fmul float %2667, 0x3FF7154760000000, !dbg !39
  %2739 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2738) #5, !dbg !39
  %2740 = fmul float %2668, 0x3FF7154760000000, !dbg !39
  %2741 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2740) #5, !dbg !39
  %2742 = fmul float %2669, 0x3FF7154760000000, !dbg !39
  %2743 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2742) #5, !dbg !39
  %2744 = fmul float %2670, 0x3FF7154760000000, !dbg !39
  %2745 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2744) #5, !dbg !39
  %2746 = fmul float %2671, 0x3FF7154760000000, !dbg !39
  %2747 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2746) #5, !dbg !39
  %2748 = fmul float %2672, 0x3FF7154760000000, !dbg !39
  %2749 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2748) #5, !dbg !39
  %2750 = fmul float %2673, 0x3FF7154760000000, !dbg !39
  %2751 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2750) #5, !dbg !39
  %2752 = fmul float %2674, 0x3FF7154760000000, !dbg !39
  %2753 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2752) #5, !dbg !39
  %2754 = fmul float %2675, 0x3FF7154760000000, !dbg !39
  %2755 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2754) #5, !dbg !39
  %2756 = fmul float %2676, 0x3FF7154760000000, !dbg !39
  %2757 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2756) #5, !dbg !39
  %2758 = fmul float %2677, 0x3FF7154760000000, !dbg !39
  %2759 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2758) #5, !dbg !39
  %2760 = fmul float %2678, 0x3FF7154760000000, !dbg !39
  %2761 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2760) #5, !dbg !39
  %2762 = fmul float %2679, 0x3FF7154760000000, !dbg !39
  %2763 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2762) #5, !dbg !39
  %2764 = fmul float %2680, 0x3FF7154760000000, !dbg !39
  %2765 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2764) #5, !dbg !39
  %2766 = fmul float %2681, 0x3FF7154760000000, !dbg !39
  %2767 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2766) #5, !dbg !39
  %2768 = fmul float %2682, 0x3FF7154760000000, !dbg !39
  %2769 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2768) #5, !dbg !39
  %2770 = fmul float %2683, 0x3FF7154760000000, !dbg !39
  %2771 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2770) #5, !dbg !39
  %2772 = fmul float %2684, 0x3FF7154760000000, !dbg !39
  %2773 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2772) #5, !dbg !39
  %2774 = fmul float %2685, 0x3FF7154760000000, !dbg !39
  %2775 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2774) #5, !dbg !39
  %2776 = fmul float %2686, 0x3FF7154760000000, !dbg !39
  %2777 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2776) #5, !dbg !39
  %2778 = fmul float %2687, 0x3FF7154760000000, !dbg !39
  %2779 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2778) #5, !dbg !39
  %2780 = fmul float %2688, 0x3FF7154760000000, !dbg !39
  %2781 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2780) #5, !dbg !39
  %2782 = fmul float %2689, 0x3FF7154760000000, !dbg !39
  %2783 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2782) #5, !dbg !39
  %2784 = fmul float %2690, 0x3FF7154760000000, !dbg !39
  %2785 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2784) #5, !dbg !39
  %2786 = fmul float %2691, 0x3FF7154760000000, !dbg !39
  %2787 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2786) #5, !dbg !39
  %2788 = fmul float %2692, 0x3FF7154760000000, !dbg !39
  %2789 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2788) #5, !dbg !39
  %2790 = fmul float %2693, 0x3FF7154760000000, !dbg !39
  %2791 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2790) #5, !dbg !39
  %2792 = fmul float %2694, 0x3FF7154760000000, !dbg !39
  %2793 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2792) #5, !dbg !39
  %2794 = fmul float %2695, 0x3FF7154760000000, !dbg !39
  %2795 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2794) #5, !dbg !39
  %2796 = fmul float %2696, 0x3FF7154760000000, !dbg !39
  %2797 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2796) #5, !dbg !39
  %2798 = fmul float %2697, 0x3FF7154760000000, !dbg !39
  %2799 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2798) #5, !dbg !39
  %2800 = fmul float %2698, 0x3FF7154760000000, !dbg !39
  %2801 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2800) #5, !dbg !39
  %2802 = fmul float %2699, 0x3FF7154760000000, !dbg !39
  %2803 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2802) #5, !dbg !39
  %2804 = fmul float %2700, 0x3FF7154760000000, !dbg !39
  %2805 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2804) #5, !dbg !39
  %2806 = fmul float %2701, 0x3FF7154760000000, !dbg !39
  %2807 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2806) #5, !dbg !39
  %2808 = fmul float %2702, 0x3FF7154760000000, !dbg !39
  %2809 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2808) #5, !dbg !39
  %2810 = fmul float %2703, 0x3FF7154760000000, !dbg !39
  %2811 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2810) #5, !dbg !39
  %2812 = fmul float %2704, 0x3FF7154760000000, !dbg !39
  %2813 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2812) #5, !dbg !39
  %2814 = fmul float %2705, 0x3FF7154760000000, !dbg !39
  %2815 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2814) #5, !dbg !39
  %2816 = fmul float %2706, 0x3FF7154760000000, !dbg !39
  %2817 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2816) #5, !dbg !39
  %2818 = fmul float %2707, 0x3FF7154760000000, !dbg !39
  %2819 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2818) #5, !dbg !39
  %2820 = fmul float %2708, 0x3FF7154760000000, !dbg !39
  %2821 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2820) #5, !dbg !39
  %2822 = fmul float %2709, 0x3FF7154760000000, !dbg !39
  %2823 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2822) #5, !dbg !39
  %2824 = fmul float %2710, 0x3FF7154760000000, !dbg !39
  %2825 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2824) #5, !dbg !39
  %2826 = fmul float %2711, 0x3FF7154760000000, !dbg !39
  %2827 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2826) #5, !dbg !39
  %2828 = fmul float %2712, 0x3FF7154760000000, !dbg !39
  %2829 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2828) #5, !dbg !39
  %2830 = fmul float %2713, 0x3FF7154760000000, !dbg !39
  %2831 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2830) #5, !dbg !39
  %2832 = fmul float %2714, 0x3FF7154760000000, !dbg !39
  %2833 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2832) #5, !dbg !39
  %2834 = fmul float %2715, 0x3FF7154760000000, !dbg !39
  %2835 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2834) #5, !dbg !39
  %2836 = fmul float %2716, 0x3FF7154760000000, !dbg !39
  %2837 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2836) #5, !dbg !39
  %2838 = fmul float %2717, 0x3FF7154760000000, !dbg !39
  %2839 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2838) #5, !dbg !39
  %2840 = fmul float %2718, 0x3FF7154760000000, !dbg !39
  %2841 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2840) #5, !dbg !39
  %2842 = fmul float %2719, 0x3FF7154760000000, !dbg !39
  %2843 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2842) #5, !dbg !39
  %2844 = fmul float %2720, 0x3FF7154760000000, !dbg !39
  %2845 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2844) #5, !dbg !39
  %2846 = fmul float %2721, 0x3FF7154760000000, !dbg !39
  %2847 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2846) #5, !dbg !39
  %2848 = fmul float %2722, 0x3FF7154760000000, !dbg !39
  %2849 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2848) #5, !dbg !39
  %2850 = fmul float %2723, 0x3FF7154760000000, !dbg !39
  %2851 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %2850) #5, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %2852 = fadd float %2725, %2727, !dbg !42
  %2853 = fadd float %2852, %2729, !dbg !42
  %2854 = fadd float %2853, %2731, !dbg !42
  %2855 = fadd float %2854, %2733, !dbg !42
  %2856 = fadd float %2855, %2735, !dbg !42
  %2857 = fadd float %2856, %2737, !dbg !42
  %2858 = fadd float %2857, %2739, !dbg !42
  %2859 = fadd float %2858, %2741, !dbg !42
  %2860 = fadd float %2859, %2743, !dbg !42
  %2861 = fadd float %2860, %2745, !dbg !42
  %2862 = fadd float %2861, %2747, !dbg !42
  %2863 = fadd float %2862, %2749, !dbg !42
  %2864 = fadd float %2863, %2751, !dbg !42
  %2865 = fadd float %2864, %2753, !dbg !42
  %2866 = fadd float %2865, %2755, !dbg !42
  %2867 = fadd float %2866, %2757, !dbg !42
  %2868 = fadd float %2867, %2759, !dbg !42
  %2869 = fadd float %2868, %2761, !dbg !42
  %2870 = fadd float %2869, %2763, !dbg !42
  %2871 = fadd float %2870, %2765, !dbg !42
  %2872 = fadd float %2871, %2767, !dbg !42
  %2873 = fadd float %2872, %2769, !dbg !42
  %2874 = fadd float %2873, %2771, !dbg !42
  %2875 = fadd float %2874, %2773, !dbg !42
  %2876 = fadd float %2875, %2775, !dbg !42
  %2877 = fadd float %2876, %2777, !dbg !42
  %2878 = fadd float %2877, %2779, !dbg !42
  %2879 = fadd float %2878, %2781, !dbg !42
  %2880 = fadd float %2879, %2783, !dbg !42
  %2881 = fadd float %2880, %2785, !dbg !42
  %2882 = fadd float %2881, %2787, !dbg !42
  %2883 = fadd float %2882, %2789, !dbg !42
  %2884 = fadd float %2883, %2791, !dbg !42
  %2885 = fadd float %2884, %2793, !dbg !42
  %2886 = fadd float %2885, %2795, !dbg !42
  %2887 = fadd float %2886, %2797, !dbg !42
  %2888 = fadd float %2887, %2799, !dbg !42
  %2889 = fadd float %2888, %2801, !dbg !42
  %2890 = fadd float %2889, %2803, !dbg !42
  %2891 = fadd float %2890, %2805, !dbg !42
  %2892 = fadd float %2891, %2807, !dbg !42
  %2893 = fadd float %2892, %2809, !dbg !42
  %2894 = fadd float %2893, %2811, !dbg !42
  %2895 = fadd float %2894, %2813, !dbg !42
  %2896 = fadd float %2895, %2815, !dbg !42
  %2897 = fadd float %2896, %2817, !dbg !42
  %2898 = fadd float %2897, %2819, !dbg !42
  %2899 = fadd float %2898, %2821, !dbg !42
  %2900 = fadd float %2899, %2823, !dbg !42
  %2901 = fadd float %2900, %2825, !dbg !42
  %2902 = fadd float %2901, %2827, !dbg !42
  %2903 = fadd float %2902, %2829, !dbg !42
  %2904 = fadd float %2903, %2831, !dbg !42
  %2905 = fadd float %2904, %2833, !dbg !42
  %2906 = fadd float %2905, %2835, !dbg !42
  %2907 = fadd float %2906, %2837, !dbg !42
  %2908 = fadd float %2907, %2839, !dbg !42
  %2909 = fadd float %2908, %2841, !dbg !42
  %2910 = fadd float %2909, %2843, !dbg !42
  %2911 = fadd float %2910, %2845, !dbg !42
  %2912 = fadd float %2911, %2847, !dbg !42
  %2913 = fadd float %2912, %2849, !dbg !42
  %2914 = fadd float %2913, %2851, !dbg !42
  %2915 = bitcast float %2914 to i32, !dbg !40
  %2916 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2915, i32 16, i32 31), !dbg !40
  %2917 = bitcast i32 %2916 to float, !dbg !40
  %2918 = fadd float %2914, %2917, !dbg !42
  %2919 = bitcast float %2918 to i32, !dbg !40
  %2920 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2919, i32 8, i32 31), !dbg !40
  %2921 = bitcast i32 %2920 to float, !dbg !40
  %2922 = fadd float %2918, %2921, !dbg !42
  %2923 = bitcast float %2922 to i32, !dbg !40
  %2924 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2923, i32 4, i32 31), !dbg !40
  %2925 = bitcast i32 %2924 to float, !dbg !40
  %2926 = fadd float %2922, %2925, !dbg !42
  %2927 = bitcast float %2926 to i32, !dbg !40
  %2928 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2927, i32 2, i32 31), !dbg !40
  %2929 = bitcast i32 %2928 to float, !dbg !40
  %2930 = fadd float %2926, %2929, !dbg !42
  %2931 = bitcast float %2930 to i32, !dbg !40
  %2932 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2931, i32 1, i32 31), !dbg !40
  %2933 = bitcast i32 %2932 to float, !dbg !40
  %2934 = fadd float %2930, %2933, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2633, float %2934, i1 %2630) #5, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %2935 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %2636, i1 %2634) #5, !dbg !40
  %2936 = bitcast float %2935 to i32, !dbg !40
  %2937 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2936, i32 16, i32 31), !dbg !40
  %2938 = bitcast i32 %2937 to float, !dbg !40
  %2939 = fadd float %2935, %2938, !dbg !42
  %2940 = bitcast float %2939 to i32, !dbg !40
  %2941 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2940, i32 8, i32 31), !dbg !40
  %2942 = bitcast i32 %2941 to float, !dbg !40
  %2943 = fadd float %2939, %2942, !dbg !42
  %2944 = bitcast float %2943 to i32, !dbg !40
  %2945 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2944, i32 4, i32 31), !dbg !40
  %2946 = bitcast i32 %2945 to float, !dbg !40
  %2947 = fadd float %2943, %2946, !dbg !42
  %2948 = bitcast float %2947 to i32, !dbg !40
  %2949 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2948, i32 2, i32 31), !dbg !40
  %2950 = bitcast i32 %2949 to float, !dbg !40
  %2951 = fadd float %2947, %2950, !dbg !42
  %2952 = bitcast float %2951 to i32, !dbg !40
  %2953 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2952, i32 1, i32 31), !dbg !40
  %2954 = bitcast i32 %2953 to float, !dbg !40
  %2955 = fadd float %2951, %2954, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2636, float %2955, i1 %2658) #5, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %2956 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !40
  %2957 = fcmp olt float %2956, 0x3810000000000000, !dbg !43
  %2958 = fmul float %2956, 0x4160000000000000, !dbg !43
  %.02.i1502 = select i1 %2957, float %2958, float %2956, !dbg !43
  %i.i.0.i = select i1 %2957, float -2.300000e+01, float 0.000000e+00, !dbg !43
  %2959 = bitcast float %.02.i1502 to i32, !dbg !43
  %2960 = add i32 %2959, -1059760811, !dbg !43
  %2961 = and i32 %2960, -8388608, !dbg !43
  %2962 = sub i32 %2959, %2961, !dbg !43
  %2963 = bitcast i32 %2962 to float, !dbg !43
  %2964 = sitofp i32 %2961 to float, !dbg !43
  %2965 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i1503 = icmp eq i32 %2965, 0, !dbg !43
  %2966 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2964, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !43
  %2967 = tail call float @llvm.nvvm.fma.rn.f(float %2964, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !43
  %.08.i = select i1 %.not.i1503, float %2967, float %2966, !dbg !43
  %2968 = fadd float %2963, -1.000000e+00, !dbg !43
  %2969 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i1504 = icmp eq i32 %2969, 0, !dbg !43
  %2970 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %2968, float 0x3FC2073EC0000000) #5, !dbg !43
  %2971 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %2968, float 0x3FC2073EC0000000) #5, !dbg !43
  %.010.i = select i1 %.not1.i1504, float %2971, float %2970, !dbg !43
  %2972 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i1505 = icmp eq i32 %2972, 0, !dbg !43
  %2973 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %2968, float 0xBFBF19B980000000) #5, !dbg !43
  %2974 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %2968, float 0xBFBF19B980000000) #5, !dbg !43
  %.011.i = select i1 %.not2.i1505, float %2974, float %2973, !dbg !43
  %2975 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i1506 = icmp eq i32 %2975, 0, !dbg !43
  %2976 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %2968, float 0x3FC1E52AA0000000) #5, !dbg !43
  %2977 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %2968, float 0x3FC1E52AA0000000) #5, !dbg !43
  %.012.i = select i1 %.not3.i1506, float %2977, float %2976, !dbg !43
  %2978 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i1507 = icmp eq i32 %2978, 0, !dbg !43
  %2979 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %2968, float 0xBFC55B1720000000) #5, !dbg !43
  %2980 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %2968, float 0xBFC55B1720000000) #5, !dbg !43
  %.09.i = select i1 %.not4.i1507, float %2980, float %2979, !dbg !43
  %2981 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i1508 = icmp eq i32 %2981, 0, !dbg !43
  %2982 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %2968, float 0x3FC99DA160000000) #5, !dbg !43
  %2983 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %2968, float 0x3FC99DA160000000) #5, !dbg !43
  %.05.i1509 = select i1 %.not5.i1508, float %2983, float %2982, !dbg !43
  %2984 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i1510 = icmp eq i32 %2984, 0, !dbg !43
  %2985 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1509, float %2968, float 0xBFCFFFE440000000) #5, !dbg !43
  %2986 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1509, float %2968, float 0xBFCFFFE440000000) #5, !dbg !43
  %.01.i1511 = select i1 %.not6.i1510, float %2986, float %2985, !dbg !43
  %2987 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i = icmp eq i32 %2987, 0, !dbg !43
  %2988 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i1511, float %2968, float 0x3FD5554F00000000) #5, !dbg !43
  %2989 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i1511, float %2968, float 0x3FD5554F00000000) #5, !dbg !43
  %.0.i1512 = select i1 %.not7.i, float %2989, float %2988, !dbg !43
  %2990 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i = icmp eq i32 %2990, 0, !dbg !43
  %2991 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1512, float %2968, float -5.000000e-01) #5, !dbg !43
  %2992 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1512, float %2968, float -5.000000e-01) #5, !dbg !43
  %.07.i = select i1 %.not8.i, float %2992, float %2991, !dbg !43
  %2993 = fmul float %2968, %.07.i, !dbg !43
  %2994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not9.i = icmp eq i32 %2994, 0, !dbg !43
  %2995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2993, float %2968, float %2968) #5, !dbg !43
  %2996 = tail call float @llvm.nvvm.fma.rn.f(float %2993, float %2968, float %2968) #5, !dbg !43
  %.06.i1513 = select i1 %.not9.i, float %2996, float %2995, !dbg !43
  %2997 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not10.i = icmp eq i32 %2997, 0, !dbg !43
  %2998 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i1513) #5, !dbg !43
  %2999 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i1513) #5, !dbg !43
  %.04.i1514 = select i1 %.not10.i, float %2999, float %2998, !dbg !43
  %3000 = icmp ugt i32 %2959, 2139095039, !dbg !43
  br i1 %3000, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !43

__nv_fmaf_rn.exit.i.i:                            ; preds = %2481
  %3001 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not11.i = icmp eq i32 %3001, 0, !dbg !43
  %3002 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1502, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !43
  %3003 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1502, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !43
  %.03.i1515 = select i1 %.not11.i, float %3003, float %3002, !dbg !43
  br label %__nv_logf.exit, !dbg !43

__nv_logf.exit:                                   ; preds = %2481, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i1515, %__nv_fmaf_rn.exit.i.i ], [ %.04.i1514, %2481 ], !dbg !43
  %3004 = icmp eq i32 %13, 0, !dbg !44
  br i1 %3004, label %3005, label %3059, !dbg !45

3005:                                             ; preds = %__nv_logf.exit
  %.not = icmp eq i32 %43, -100, !dbg !46
  br i1 %.not, label %3056, label %3006, !dbg !47

3006:                                             ; preds = %3005
  %3007 = sext i32 %43 to i64, !dbg !48
  %3008 = getelementptr half, ptr addrspace(1) %17, i64 %3007, !dbg !48
  %3009 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %3008, i1 true) #5, !dbg !49
  %3010 = bitcast i16 %3009 to half, !dbg !49
  %3011 = fpext half %3010 to float, !dbg !50
  %3012 = sitofp i32 %10 to float, !dbg !51
  %3013 = fmul float %3012, %3011, !dbg !51
  %3014 = select i1 %9, float %3013, float %3011, !dbg !51
  br i1 %7, label %3015, label %3052, !dbg !52

3015:                                             ; preds = %3006
  %3016 = sitofp i32 %8 to float, !dbg !53
  %3017 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %3014, float %3016) #5, !dbg !53
  %3018 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not.i1483 = icmp eq i32 %3018, 0, !dbg !54
  %3019 = tail call float @llvm.nvvm.fabs.ftz.f(float %3017) #5, !dbg !54
  %3020 = tail call float @llvm.nvvm.fabs.f(float %3017) #5, !dbg !54
  %.01.i1484 = select i1 %.not.i1483, float %3020, float %3019, !dbg !54
  %3021 = fcmp ult float %.01.i1484, 0x3FE3333340000000, !dbg !54
  br i1 %3021, label %__internal_fmad.exit3.i1490, label %__internal_fmad.exit1.i1485, !dbg !54

__internal_fmad.exit1.i1485:                      ; preds = %3015
  %3022 = fmul float %.01.i1484, 0x4007154760000000, !dbg !54
  %3023 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3022) #5, !dbg !54
  %3024 = fadd float %3023, 1.000000e+00, !dbg !54
  %3025 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3024) #6, !dbg !54, !srcloc !30
  %3026 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not6.i1486 = icmp eq i32 %3026, 0, !dbg !54
  %3027 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3025, float -2.000000e+00, float 1.000000e+00) #5, !dbg !54
  %3028 = tail call float @llvm.nvvm.fma.rn.f(float %3025, float -2.000000e+00, float 1.000000e+00) #5, !dbg !54
  %.03.i1487 = select i1 %.not6.i1486, float %3028, float %3027, !dbg !54
  %3029 = fcmp oge float %.01.i1484, 0x4022059680000000, !dbg !54
  %s.0.i1488 = select i1 %3029, float 1.000000e+00, float %.03.i1487, !dbg !54
  %3030 = bitcast float %s.0.i1488 to i32, !dbg !54
  %3031 = bitcast float %3017 to i32, !dbg !54
  %3032 = and i32 %3031, -2147483648, !dbg !54
  %3033 = or i32 %3032, %3030, !dbg !54
  %3034 = bitcast i32 %3033 to float, !dbg !54
  br label %__nv_tanhf.exit1501, !dbg !54

__internal_fmad.exit3.i1490:                      ; preds = %3015
  %3035 = fmul float %3017, %3017, !dbg !54
  %3036 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not1.i1491 = icmp eq i32 %3036, 0, !dbg !54
  %3037 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3035, float 0xBFAAC795C0000000) #5, !dbg !54
  %3038 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3035, float 0xBFAAC795C0000000) #5, !dbg !54
  %.06.i1492 = select i1 %.not1.i1491, float %3038, float %3037, !dbg !54
  %3039 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not2.i1493 = icmp eq i32 %3039, 0, !dbg !54
  %3040 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1492, float %3035, float 0x3FC10B2820000000) #5, !dbg !54
  %3041 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1492, float %3035, float 0x3FC10B2820000000) #5, !dbg !54
  %.05.i1494 = select i1 %.not2.i1493, float %3041, float %3040, !dbg !54
  %3042 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not3.i1495 = icmp eq i32 %3042, 0, !dbg !54
  %3043 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1494, float %3035, float 0xBFD5553DA0000000) #5, !dbg !54
  %3044 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1494, float %3035, float 0xBFD5553DA0000000) #5, !dbg !54
  %.0.i1496 = select i1 %.not3.i1495, float %3044, float %3043, !dbg !54
  %3045 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not4.i1497 = icmp eq i32 %3045, 0, !dbg !54
  %3046 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1496, float %3035, float 0.000000e+00) #5, !dbg !54
  %3047 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1496, float %3035, float 0.000000e+00) #5, !dbg !54
  %.04.i1498 = select i1 %.not4.i1497, float %3047, float %3046, !dbg !54
  %3048 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !54
  %.not5.i1499 = icmp eq i32 %3048, 0, !dbg !54
  %3049 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1498, float %3017, float %3017) #5, !dbg !54
  %3050 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1498, float %3017, float %3017) #5, !dbg !54
  %.02.i1500 = select i1 %.not5.i1499, float %3050, float %3049, !dbg !54
  br label %__nv_tanhf.exit1501, !dbg !54

__nv_tanhf.exit1501:                              ; preds = %__internal_fmad.exit1.i1485, %__internal_fmad.exit3.i1490
  %s.1.i1489 = phi float [ %3034, %__internal_fmad.exit1.i1485 ], [ %.02.i1500, %__internal_fmad.exit3.i1490 ], !dbg !54
  %3051 = fmul float %s.1.i1489, %3016, !dbg !55
  br label %3052, !dbg !52

3052:                                             ; preds = %__nv_tanhf.exit1501, %3006
  %3053 = phi float [ %3051, %__nv_tanhf.exit1501 ], [ %3014, %3006 ]
  %3054 = fneg float %3053, !dbg !56
  %3055 = bitcast float %3054 to i32, !dbg !57
  br label %3056, !dbg !47

3056:                                             ; preds = %3052, %3005
  %3057 = phi i32 [ %3055, %3052 ], [ 0, %3005 ]
  %3058 = icmp eq i32 %21, 0, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %3057, ptr addrspace(1) %18, i1 %3058) #5, !dbg !57
  br label %3059, !dbg !45

3059:                                             ; preds = %3056, %__nv_logf.exit
  %3060 = fcmp oeq float %.02.i1502, 0.000000e+00, !dbg !43
  %r.i.1.i = select i1 %3060, float 0xFFF0000000000000, float %r.i.0.i, !dbg !43
  %3061 = fadd float %2659, %r.i.1.i, !dbg !58
  %3062 = mul i32 %12, %6, !dbg !59
  %3063 = add i32 %3062, %13, !dbg !60
  %3064 = sext i32 %3063 to i64, !dbg !61
  %3065 = getelementptr float, ptr addrspace(1) %3, i64 %3064, !dbg !61
  %3066 = icmp eq i32 %21, 0, !dbg !62
  %3067 = bitcast float %3061 to i32, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %3067, ptr addrspace(1) %3065, i1 %3066) #5, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cross_entropy_loss.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.11/site-packages/unsloth/kernels")
!4 = !{ptr @_chunked_cross_entropy_forward, !"kernel", i32 1}
!5 = !{ptr @_chunked_cross_entropy_forward, !"maxntidx", i32 1024}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "_chunked_cross_entropy_forward", linkageName: "_chunked_cross_entropy_forward", scope: !3, file: !3, line: 105, type: !8, scopeLine: 105, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 143, column: 30, scope: !7)
!11 = !DILocation(line: 144, column: 30, scope: !7)
!12 = !DILocation(line: 145, column: 62, scope: !7)
!13 = !DILocation(line: 145, column: 31, scope: !7)
!14 = !DILocation(line: 145, column: 21, scope: !7)
!15 = !DILocation(line: 146, column: 21, scope: !7)
!16 = !DILocation(line: 148, column: 21, scope: !7)
!17 = !DILocation(line: 150, column: 28, scope: !7)
!18 = !DILocation(line: 150, column: 54, scope: !7)
!19 = !DILocation(line: 150, column: 41, scope: !7)
!20 = !DILocation(line: 151, column: 25, scope: !7)
!21 = !DILocation(line: 153, column: 24, scope: !7)
!22 = !DILocation(line: 153, column: 39, scope: !7)
!23 = !DILocation(line: 154, column: 34, scope: !7)
!24 = !DILocation(line: 154, column: 21, scope: !7)
!25 = !DILocation(line: 154, column: 86, scope: !7)
!26 = !DILocation(line: 157, column: 7, scope: !7)
!27 = !DILocation(line: 159, column: 7, scope: !7)
!28 = !DILocation(line: 159, column: 65, scope: !7)
!29 = !DILocation(line: 159, column: 56, scope: !7)
!30 = !{i32 21046}
!31 = !DILocation(line: 159, column: 44, scope: !7)
!32 = !DILocation(line: 163, column: 27, scope: !33, inlinedAt: !36)
!33 = distinct !DILexicalBlockFile(scope: !35, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.11/site-packages/triton/language")
!35 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!36 = !DILocation(line: 161, column: 23, scope: !7)
!37 = !DILocation(line: 184, column: 40, scope: !35, inlinedAt: !36)
!38 = !DILocation(line: 162, column: 50, scope: !7)
!39 = !DILocation(line: 162, column: 41, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !35, inlinedAt: !41)
!41 = !DILocation(line: 162, column: 54, scope: !7)
!42 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !41)
!43 = !DILocation(line: 162, column: 27, scope: !7)
!44 = !DILocation(line: 164, column: 20, scope: !7)
!45 = !DILocation(line: 164, column: 7, scope: !7)
!46 = !DILocation(line: 167, column: 24, scope: !7)
!47 = !DILocation(line: 167, column: 11, scope: !7)
!48 = !DILocation(line: 168, column: 37, scope: !7)
!49 = !DILocation(line: 168, column: 24, scope: !7)
!50 = !DILocation(line: 168, column: 51, scope: !7)
!51 = !DILocation(line: 170, column: 15, scope: !7)
!52 = !DILocation(line: 172, column: 15, scope: !7)
!53 = !DILocation(line: 172, column: 63, scope: !7)
!54 = !DILocation(line: 172, column: 59, scope: !7)
!55 = !DILocation(line: 172, column: 47, scope: !7)
!56 = !DILocation(line: 173, column: 26, scope: !7)
!57 = !DILocation(line: 176, column: 27, scope: !7)
!58 = !DILocation(line: 162, column: 20, scope: !7)
!59 = !DILocation(line: 147, column: 31, scope: !7)
!60 = !DILocation(line: 147, column: 42, scope: !7)
!61 = !DILocation(line: 147, column: 21, scope: !7)
!62 = !DILocation(line: 178, column: 28, scope: !7)
!63 = !DILocation(line: 178, column: 4, scope: !7)
