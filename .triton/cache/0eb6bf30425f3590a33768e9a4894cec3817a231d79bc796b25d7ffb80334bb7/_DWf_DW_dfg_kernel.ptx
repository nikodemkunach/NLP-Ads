//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_75
.address_size 64

	// .globl	_DWf_DW_dfg_kernel

.visible .entry _DWf_DW_dfg_kernel(
	.param .u64 _DWf_DW_dfg_kernel_param_0,
	.param .u64 _DWf_DW_dfg_kernel_param_1,
	.param .u64 _DWf_DW_dfg_kernel_param_2,
	.param .u32 _DWf_DW_dfg_kernel_param_3
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<100>;
	.reg .f32 	%f<99>;
	.reg .b64 	%rd<11>;
	.loc	1 52 0
$L__func_begin0:
	.loc	1 52 0

	ld.param.u64 	%rd7, [_DWf_DW_dfg_kernel_param_0];
	ld.param.u64 	%rd8, [_DWf_DW_dfg_kernel_param_1];
$L__tmp0:
	.loc	1 62 30
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 63 24
	shl.b32 	%r62, %r1, 10;
	ld.param.u64 	%rd9, [_DWf_DW_dfg_kernel_param_2];
	ld.param.u32 	%r63, [_DWf_DW_dfg_kernel_param_3];
	.loc	1 63 50
	mov.u32 	%r64, %tid.x;
	shl.b32 	%r65, %r64, 3;
	and.b32  	%r66, %r65, 1016;
	.loc	1 63 37
	or.b32  	%r67, %r62, %r66;
	.loc	1 64 21
	setp.lt.s32 	%p1, %r67, %r63;
	.loc	1 66 26
	mul.wide.s32 	%rd10, %r67, 2;
	add.s64 	%rd1, %rd7, %rd10;
	mov.b32 	%r6, 0;
	.loc	1 66 21
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 67 26
	add.s64 	%rd2, %rd8, %rd10;
	.loc	1 67 21
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 68 26
	add.s64 	%rd3, %rd9, %rd10;
	.loc	1 68 21
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 67 62
	mov.b32 	{%rs1, %rs2}, %r13;
	cvt.f32.f16 	%f17, %rs2;
	cvt.f32.f16 	%f18, %rs1;
	mov.f32 	%f19, 0f00000000;
$L__tmp1:
	.loc	2 51 30
	sub.f32 	%f20, %f19, %f18;
	sub.f32 	%f21, %f19, %f17;
	.loc	2 51 29
	mul.f32 	%f14, %f20, 0f3FB8AA3B;
	mul.f32 	%f16, %f21, 0f3FB8AA3B;
$L__tmp2:
	.loc	1 67 62
	mov.b32 	{%rs3, %rs4}, %r12;
	cvt.f32.f16 	%f22, %rs4;
	cvt.f32.f16 	%f23, %rs3;
$L__tmp3:
	.loc	2 51 30
	sub.f32 	%f24, %f19, %f23;
	sub.f32 	%f25, %f19, %f22;
	.loc	2 51 29
	mul.f32 	%f10, %f24, 0f3FB8AA3B;
	mul.f32 	%f12, %f25, 0f3FB8AA3B;
$L__tmp4:
	.loc	1 67 62
	mov.b32 	{%rs5, %rs6}, %r11;
	cvt.f32.f16 	%f26, %rs6;
	cvt.f32.f16 	%f27, %rs5;
$L__tmp5:
	.loc	2 51 30
	sub.f32 	%f28, %f19, %f27;
	sub.f32 	%f29, %f19, %f26;
	.loc	2 51 29
	mul.f32 	%f6, %f28, 0f3FB8AA3B;
	mul.f32 	%f8, %f29, 0f3FB8AA3B;
$L__tmp6:
	.loc	1 67 62
	mov.b32 	{%rs7, %rs8}, %r10;
	cvt.f32.f16 	%f30, %rs8;
	cvt.f32.f16 	%f31, %rs7;
$L__tmp7:
	.loc	2 51 30
	sub.f32 	%f32, %f19, %f31;
	sub.f32 	%f33, %f19, %f30;
	.loc	2 51 29
	mul.f32 	%f2, %f32, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f33, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 51 20
	add.f32 	%f34, %f1, 0f3F800000;
	add.f32 	%f35, %f3, 0f3F800000;
	.loc	2 51 29
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 51 20
	add.f32 	%f36, %f5, 0f3F800000;
	add.f32 	%f37, %f7, 0f3F800000;
	.loc	2 51 29
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	.loc	2 51 20
	add.f32 	%f38, %f9, 0f3F800000;
	add.f32 	%f39, %f11, 0f3F800000;
	.loc	2 51 29
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 51 20
	add.f32 	%f40, %f13, 0f3F800000;
	add.f32 	%f41, %f15, 0f3F800000;
	.loc	2 51 16
	mov.b32 	%r28, %f34;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f42, %r26;
	mov.b32 	%r31, %f35;
	// begin inline asm
	div.full.f32 %r29, %r27, %r31;
	// end inline asm
	mov.b32 	%f43, %r29;
	mov.b32 	%r34, %f36;
	// begin inline asm
	div.full.f32 %r32, %r27, %r34;
	// end inline asm
	mov.b32 	%f44, %r32;
	mov.b32 	%r37, %f37;
	// begin inline asm
	div.full.f32 %r35, %r27, %r37;
	// end inline asm
	mov.b32 	%f45, %r35;
	mov.b32 	%r40, %f38;
	// begin inline asm
	div.full.f32 %r38, %r27, %r40;
	// end inline asm
	mov.b32 	%f46, %r38;
	mov.b32 	%r43, %f39;
	// begin inline asm
	div.full.f32 %r41, %r27, %r43;
	// end inline asm
	mov.b32 	%f47, %r41;
	mov.b32 	%r46, %f40;
	// begin inline asm
	div.full.f32 %r44, %r27, %r46;
	// end inline asm
	mov.b32 	%f48, %r44;
	mov.b32 	%r49, %f41;
	// begin inline asm
	div.full.f32 %r47, %r27, %r49;
	// end inline asm
	mov.b32 	%f49, %r47;
$L__tmp8:
	.loc	1 74 21
	mul.f32 	%f50, %f42, %f31;
	mul.f32 	%f51, %f43, %f30;
	mul.f32 	%f52, %f44, %f27;
	mul.f32 	%f53, %f45, %f26;
	mul.f32 	%f54, %f46, %f23;
	mul.f32 	%f55, %f47, %f22;
	mul.f32 	%f56, %f48, %f18;
	mul.f32 	%f57, %f49, %f17;
	.loc	1 75 21
	cvt.rn.f16.f32 	%rs9, %f51;
	cvt.rn.f16.f32 	%rs10, %f50;
	mov.b32 	%r80, {%rs10, %rs9};
	cvt.rn.f16.f32 	%rs11, %f53;
	cvt.rn.f16.f32 	%rs12, %f52;
	mov.b32 	%r81, {%rs12, %rs11};
	cvt.rn.f16.f32 	%rs13, %f55;
	cvt.rn.f16.f32 	%rs14, %f54;
	mov.b32 	%r82, {%rs14, %rs13};
	cvt.rn.f16.f32 	%rs15, %f57;
	cvt.rn.f16.f32 	%rs16, %f56;
	mov.b32 	%r83, {%rs16, %rs15};
	.loc	1 77 22
	mul.f16x2 	%r84, %r18, %r80;
	mul.f16x2 	%r85, %r19, %r81;
	mul.f16x2 	%r86, %r20, %r82;
	mul.f16x2 	%r87, %r21, %r83;
	.loc	1 79 22
	mul.f16x2 	%r88, %r2, %r80;
	mul.f16x2 	%r89, %r3, %r81;
	mul.f16x2 	%r90, %r4, %r82;
	mul.f16x2 	%r91, %r5, %r83;
	.loc	1 81 22
	mul.f16x2 	%r92, %r2, %r18;
	.loc	1 83 23
	mov.b32 	{%rs17, %rs18}, %r92;
	cvt.f32.f16 	%f58, %rs17;
	cvt.f32.f16 	%f59, %rs18;
	.loc	1 83 37
	mul.f32 	%f60, %f43, %f59;
	mul.f32 	%f61, %f42, %f58;
	mov.f32 	%f62, 0f3F800000;
	.loc	1 83 68
	sub.f32 	%f63, %f62, %f42;
	sub.f32 	%f64, %f62, %f43;
	.loc	1 83 53
	fma.rn.f32 	%f65, %f64, %f30, 0f3F800000;
	fma.rn.f32 	%f66, %f63, %f31, 0f3F800000;
	.loc	1 83 47
	mul.f32 	%f67, %f61, %f66;
	mul.f32 	%f68, %f60, %f65;
	.loc	1 84 23
	cvt.rn.f16.f32 	%rs19, %f68;
	cvt.rn.f16.f32 	%rs20, %f67;
	mov.b32 	%r93, {%rs20, %rs19};
	.loc	1 81 22
	mul.f16x2 	%r94, %r3, %r19;
	.loc	1 83 23
	mov.b32 	{%rs21, %rs22}, %r94;
	cvt.f32.f16 	%f69, %rs21;
	cvt.f32.f16 	%f70, %rs22;
	.loc	1 83 37
	mul.f32 	%f71, %f45, %f70;
	mul.f32 	%f72, %f44, %f69;
	.loc	1 83 68
	sub.f32 	%f73, %f62, %f44;
	sub.f32 	%f74, %f62, %f45;
	.loc	1 83 53
	fma.rn.f32 	%f75, %f74, %f26, 0f3F800000;
	fma.rn.f32 	%f76, %f73, %f27, 0f3F800000;
	.loc	1 83 47
	mul.f32 	%f77, %f72, %f76;
	mul.f32 	%f78, %f71, %f75;
	.loc	1 84 23
	cvt.rn.f16.f32 	%rs23, %f78;
	cvt.rn.f16.f32 	%rs24, %f77;
	mov.b32 	%r95, {%rs24, %rs23};
	.loc	1 81 22
	mul.f16x2 	%r96, %r4, %r20;
	.loc	1 83 23
	mov.b32 	{%rs25, %rs26}, %r96;
	cvt.f32.f16 	%f79, %rs25;
	cvt.f32.f16 	%f80, %rs26;
	.loc	1 83 37
	mul.f32 	%f81, %f47, %f80;
	mul.f32 	%f82, %f46, %f79;
	.loc	1 83 68
	sub.f32 	%f83, %f62, %f46;
	sub.f32 	%f84, %f62, %f47;
	.loc	1 83 53
	fma.rn.f32 	%f85, %f84, %f22, 0f3F800000;
	fma.rn.f32 	%f86, %f83, %f23, 0f3F800000;
	.loc	1 83 47
	mul.f32 	%f87, %f82, %f86;
	mul.f32 	%f88, %f81, %f85;
	.loc	1 84 23
	cvt.rn.f16.f32 	%rs27, %f88;
	cvt.rn.f16.f32 	%rs28, %f87;
	mov.b32 	%r97, {%rs28, %rs27};
	.loc	1 81 22
	mul.f16x2 	%r98, %r5, %r21;
	.loc	1 83 23
	mov.b32 	{%rs29, %rs30}, %r98;
	cvt.f32.f16 	%f89, %rs29;
	cvt.f32.f16 	%f90, %rs30;
	.loc	1 83 37
	mul.f32 	%f91, %f49, %f90;
	mul.f32 	%f92, %f48, %f89;
	.loc	1 83 68
	sub.f32 	%f93, %f62, %f48;
	sub.f32 	%f94, %f62, %f49;
	.loc	1 83 53
	fma.rn.f32 	%f95, %f94, %f17, 0f3F800000;
	fma.rn.f32 	%f96, %f93, %f18, 0f3F800000;
	.loc	1 83 47
	mul.f32 	%f97, %f92, %f96;
	mul.f32 	%f98, %f91, %f95;
	.loc	1 84 23
	cvt.rn.f16.f32 	%rs31, %f98;
	cvt.rn.f16.f32 	%rs32, %f97;
	mov.b32 	%r99, {%rs32, %rs31};
	.loc	1 87 27
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	.loc	1 88 27
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r88, %r89, %r90, %r91 };
	// end inline asm
	.loc	1 89 27
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r93, %r95, %r97, %r99 };
	// end inline asm
	.loc	1 89 4
	ret;
$L__tmp9:
$L__func_end0:

}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.11/site-packages/unsloth/kernels/swiglu.py"
	.file	2 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 198
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 115
.b8 119
.b8 105
.b8 103
.b8 108
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 49
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 117
.b8 110
.b8 115
.b8 108
.b8 111
.b8 116
.b8 104
.b8 47
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 115
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 95
.b8 68
.b8 87
.b8 102
.b8 95
.b8 68
.b8 87
.b8 95
.b8 100
.b8 102
.b8 103
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 134
.b8 4
.b32 134
.b64 $L__tmp1
.b64 $L__tmp8
.b8 1
.b8 72
.b8 24
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
